<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>剑指offer</title>
    <link href="/2024/03/04/%E5%89%91%E6%8C%87offer/"/>
    <url>/2024/03/04/%E5%89%91%E6%8C%87offer/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="9b91db57a4d6ea391c59c8f9c2f7f819251bcef9641be17e418780c46ba2dca2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码提示：圆周率的平方跟的自然对数的前六位</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>树莓派安装ubuntu笔记</title>
    <link href="/2024/02/26/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85ubuntu%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/02/26/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%89%E8%A3%85ubuntu%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4c923f946bf636f367ca756021add6b24ba41eed075d2e983631ec564ddf0ff3"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码提示：圆周率的平方跟的自然对数的前六位</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaWeb笔记</title>
    <link href="/2024/02/26/JavaWeb%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/02/26/JavaWeb%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h2><h3 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h3><p>反射：将类的各个组成部分封装成其它对象</p><p>Java代码在计算机中经历的三个阶段：</p><ul><li><p>source源代码阶段：<code>.java</code>经过javac 编译成<code>.class字节码</code>文件 ，字节码文件包括java文件中的<code>成员变量</code>、<code>构造方法</code>、<code>成员方法</code></p></li><li><p>Class类对象阶段：通过类加载器【ClassLoader】将字节码文件加载到内存中，变成<code>Class类对象</code>，Class类对象中包含：成员变量Fields[ ]对象，构造方法Contructors[ ]对象，成员方法Methods[ ]对象</p></li><li><p>Runtime运行时阶段：通过Class类对象中的一些行为创建对象  <code>new 对象()</code></p></li></ul><p>反射的好处：</p><ul><li><p>可以在程序的运行过程中，操作<strong>Class类对象</strong>中的这些对象</p></li><li><p>可以接耦，提高程序的可扩展性</p></li></ul><h3 id="2、获取字节码Class类对象的三种方式"><a href="#2、获取字节码Class类对象的三种方式" class="headerlink" title="2、获取字节码Class类对象的三种方式"></a>2、获取字节码Class类对象的三种方式</h3><h4 id="2-1、在source阶段："><a href="#2-1、在source阶段：" class="headerlink" title="2.1、在source阶段："></a>2.1、在source阶段：</h4><p>此时Java代码只有字节码文件，并没有进内存，需要手动将字节码文件 加载进内存，生成Class类对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">Class.forName(<span class="hljs-string">&quot;全类名&quot;</span>)  <span class="hljs-comment">// 将字节码文件加载进内存，生成Class对象 </span><br></code></pre></td></tr></table></figure><p><strong>多用于配置文件，将类名定义在配置文件中，读取文件，加载类</strong></p><h4 id="2-2、在Class类对象阶段："><a href="#2-2、在Class类对象阶段：" class="headerlink" title="2.2、在Class类对象阶段："></a>2.2、在Class类对象阶段：</h4><p>此时已经将字节码文件加载进内存了，直接获取Class类对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">类名.class  <span class="hljs-comment">// 直接获取Class对象</span><br></code></pre></td></tr></table></figure><p><strong>多用于参数的传递</strong></p><h4 id="2-3、在Runtime运行时阶段："><a href="#2-3、在Runtime运行时阶段：" class="headerlink" title="2.3、在Runtime运行时阶段："></a>2.3、在Runtime运行时阶段：</h4><p>此时已经有类的对象了，可以通过对象的方法来获取Class类对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">对象.getClass()  <span class="hljs-comment">// 通过对象来获取Class类对象</span><br></code></pre></td></tr></table></figure><p><strong>多用于对象的获取字节码的方式</strong></p><p><img src="/img/java_img/%E8%8E%B7%E5%8F%96%E5%AD%97%E8%8A%82%E7%A0%81Class%E7%B1%BB%E5%AF%B9%E8%B1%A1.png" alt="获取字节码Class类对象"></p><p><strong>结论：</strong></p><p>同一个字节码文件（.class）在一次程序运行过程中，只会被加载一次，不论通过哪一种方式获取的Class类对象都是同一个</p><h3 id="3、Class类对象功能概述"><a href="#3、Class类对象功能概述" class="headerlink" title="3、Class类对象功能概述"></a>3、Class类对象功能概述</h3><p><strong>带Declared的 可以不考虑修饰符</strong></p><p><strong>如果想要获取private 修饰的成员，需要通过暴力反射<code>field/constructor/method.setAccessible(true)</code> 来忽略访问权限修饰符的安全检查</strong></p><ul><li><p>获取功能</p><ul><li><p>1、获取成员变量</p><ul><li><p><code>Field[] getFields()</code></p><ul><li>获取所有public修饰的成员变量</li></ul></li><li><p><code>Field getField(成员变量名)</code> </p><ul><li>获取指定名称的public修饰的成员变量</li></ul></li><li><p><code>Field[] getDeclaredFields()</code></p><ul><li>获取所有的成员变量（不考虑修饰符）</li></ul></li><li><p><code>Field getDeclaredField(成员变量名)</code></p><ul><li>获取指定名称的成员变量（不考虑修饰符）</li></ul></li></ul></li><li><p>2、获取构造方法</p><ul><li><p><code>Constructor&lt;?&gt;[] getConstructors()</code></p><ul><li>获取所有public修饰的构造方法</li></ul></li><li><p><code>Constructor&lt;?&gt; getConstructor(参数列表)</code> </p><ul><li>获取public修饰的指定的构造方法</li></ul></li><li><p><code>Constructor&lt;?&gt;[] getDeclaredConstructors()</code></p><ul><li>获取所有的构造方法</li></ul></li><li><p><code>Constructor&lt;?&gt; getDeclaredConstructor(参数列表)</code></p><ul><li>获取指定的构造方法</li></ul></li></ul></li><li><p>3、获取成员方法</p><ul><li><p><code>Method[] getMethods()</code></p></li><li><p><code>Method getMethod(方法名,参数列表)</code></p></li><li><p><code>Method[] getDeclaredMethods()</code></p></li><li><p><code>Method getDeclaredMethod(方法名,参数列表)</code></p></li></ul></li><li><p>4、获取类名</p><ul><li><code>String getName()</code> 获取类名</li></ul></li></ul></li><li><p>对成员变量Field的操作：</p><ul><li>设置值        <code>void set(对象, 值)</code></li><li>获取值        <code>Object get(对象)</code></li></ul></li><li><p>对构造方法Constructor的操作：</p><ul><li>创建对象：    <code>constructor.newInstance(参数列表)</code><ul><li>如果使用空参数构造方法创建对象，操作可以简化：<code>Class对象.newInstance()</code></li></ul></li></ul></li><li><p>对成员方法Method的操作：</p><ul><li>执行方法：    <code>method.invoke(对象，参数列表)</code></li><li>获取方法名：<code>method.getName()</code></li></ul></li></ul><h3 id="4、案例"><a href="#4、案例" class="headerlink" title="4、案例"></a>4、案例</h3><p>写一个类，可以帮助我们创建任意类的对象，并且执行其中任意方法</p><p><strong>步骤：</strong></p><ul><li><p>1、将需要创建的对象的全类名和需要执行的方法定义在配置文件中</p><p><img src="/img/java_img/%E5%8F%8D%E5%B0%84%E6%A1%88%E4%BE%8B%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png" alt="反射案例配置文件"></p></li><li><p>2、在程序中加载读取配置文件</p></li><li><p>3、使用反射技术来加载类文件进内存</p></li><li><p>4、创建对象</p></li><li><p>5、执行方法</p><p><img src="/img/java_img/%E5%8F%8D%E5%B0%84%E6%A1%88%E4%BE%8B%E4%BB%A3%E7%A0%81.png" alt="反射案例代码"></p></li></ul><hr><h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><h3 id="1、JDK-中预定义的一些注解"><a href="#1、JDK-中预定义的一些注解" class="headerlink" title="1、JDK 中预定义的一些注解"></a>1、JDK 中预定义的一些注解</h3><ul><li><p>@Override：用来检测被该注解标注的方法是否是继承自父类的</p></li><li><p>@Deprecated：表示该注解标注的内容，已过时</p></li><li><p>@SuppressWarnings：压制警告.  一般传递参数 all</p></li></ul><h3 id="2、自定义注解"><a href="#2、自定义注解" class="headerlink" title="2、自定义注解"></a>2、自定义注解</h3><ul><li><p>格式：</p><ul><li>元注解</li><li><code>public @interface 注解名称 &#123;&#125;</code></li></ul></li><li><p>本质：注解本质上就是一个接口，该接口继承<code>java.lang.annotation.Annotation</code></p></li><li><p><strong>属性：</strong>接口中的抽象方法</p><ul><li><p>要求：</p><ul><li><p>1、属性的返回值类型有下列5种</p><ul><li>1、基本数据类型</li><li>2、String</li><li>3、枚举</li><li>4、注解</li><li>5、以上类型组成的数组</li></ul></li><li><p>2、定义了属性，在使用时需要给属性赋值</p><ul><li><p>1、如果定义属性时，使用default关键字给属性默认初始化值，，则使用注解时，可以不给这个属性赋值</p></li><li><p>2、如果只有一个属性需要赋值，并且属性的名称是value，则value可以省略</p></li><li><p>3、数组赋值时，值使用大括号 {} 包裹。如果数组中只有一个值，则 {} 可以省略</p></li></ul></li></ul></li></ul></li><li><p><strong>元注解：</strong>用于描述注解的注解</p><ul><li><p>@target：描述注解能够作用的位置</p><ul><li>类<code>ElementType.TYPE</code>、方法<code>ElementType.METHOD</code>、成员变量<code>ElementType.FIELD</code>、…</li></ul></li><li><p>@Retention：描述注解被保留的阶段  </p><ul><li><code>RetentionPolicy.SOURCE</code>   表示当前被描述的注解,不会保留到class字节码文件中</li><li><code>RetentionPolicy.CLASS</code> 表示当前被描述的注解，会保留到class字节码文件中，不会被JVM读取到</li><li><code>RetentionPolicy.RUNTIME</code> 表示当前被描述的注解，会保留到class字节码文件中，并被JVM读取到</li></ul></li><li><p>@Documented：描述注解是否被抽取到API文档中</p></li><li><p>@Inherited：描述注解是否被子类继承</p></li></ul></li></ul><h3 id="3、解析注解：获取注解中定义的属性值"><a href="#3、解析注解：获取注解中定义的属性值" class="headerlink" title="3、解析注解：获取注解中定义的属性值"></a>3、解析注解：获取注解中定义的属性值</h3><ul><li><p>1、获取注解定义位置的字节码对象（Class，Method，Field）</p></li><li><p>2、调用<code>.getAnnotation(注解.class)</code>获取注解对象</p></li><li><p>3、通过<code>注解对象.抽象方法名</code>得到属性值</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//1、解析注解</span><br><span class="hljs-comment">//1.1、获取该类的字节码文件对象</span><br>Class&lt;ReflectTest&gt; reflectTestClass = ReflectTest.class;<br><span class="hljs-comment">//1.2、获取注解对象</span><br><span class="hljs-type">Pro</span> <span class="hljs-variable">an</span> <span class="hljs-operator">=</span> reflectTestClass.getAnnotation(Pro.class); <span class="hljs-comment">// 其实就是在内存中生成了一个该注解接口的子类实现对象</span><br><span class="hljs-comment">//1.3、调用注解对象中定义的抽象方法来获取返回值</span><br><span class="hljs-type">String</span> <span class="hljs-variable">className</span> <span class="hljs-operator">=</span> an.className();<br><span class="hljs-type">String</span> <span class="hljs-variable">methodName</span> <span class="hljs-operator">=</span> an.methodName();<br></code></pre></td></tr></table></figure><h2 id="JavaWeb"><a href="#JavaWeb" class="headerlink" title="JavaWeb"></a>JavaWeb</h2><h3 id="1、Web相关概念"><a href="#1、Web相关概念" class="headerlink" title="1、Web相关概念"></a>1、Web相关概念</h3><h4 id="1-1、软件架构"><a href="#1-1、软件架构" class="headerlink" title="1.1、软件架构"></a>1.1、软件架构</h4><ul><li>C &#x2F; S        客户端&#x2F;服务器端</li><li>B &#x2F; S        浏览器&#x2F;服务器端</li></ul><h4 id="1-2、资源分类"><a href="#1-2、资源分类" class="headerlink" title="1.2、资源分类"></a>1.2、资源分类</h4><ul><li>静态资源：所有用户访问后，得到的结果都是一样的，称为静态资源，静态资源可以直接被浏览器解析</li><li>动态资源：每个用户访问相同资源后得到的结果可能不一样，称为动态资源，动态资源被访问后需要先转换为静态资源，再响应给浏览器<ul><li>servlet、jsp、php…</li></ul></li></ul><h4 id="1-3、网络通信三要素"><a href="#1-3、网络通信三要素" class="headerlink" title="1.3、网络通信三要素"></a>1.3、网络通信三要素</h4><ul><li>IP：电子设备（计算机）在网络中的唯一标识</li><li>端口：应用程序在计算机中的唯一标识 【0 ~ 65536】</li><li>传输协议：规定了数据传输的规则<ul><li>基础协议：<ul><li>TCP：可靠协议，三次握手，速度稍微慢</li><li>UDP：不可靠协议，速度快</li></ul></li></ul></li></ul><h4 id="1-4、web服务器软件"><a href="#1-4、web服务器软件" class="headerlink" title="1.4、web服务器软件"></a>1.4、web服务器软件</h4><ul><li>服务器：安装了服务器软件的计算机</li><li>服务器软件：接收用户的请求，处理请求，做出响应</li></ul><p>在web服务器软件中，可以部署项目，让用户通过浏览器来访问这些项目</p><ul><li>常见的java相关的web服务器软件：<ul><li>webLogic</li><li>webSphere</li><li>JBOSS</li><li>Tomcat</li></ul></li></ul><h3 id="2、Tomcat"><a href="#2、Tomcat" class="headerlink" title="2、Tomcat"></a>2、Tomcat</h3><p>Tomcat 目录结构</p><p><img src="/img/java_img/Tomcat%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt="Tomcat目录结构"></p><h4 id="2-1、Tomcat-部署项目的方式"><a href="#2-1、Tomcat-部署项目的方式" class="headerlink" title="2.1、Tomcat 部署项目的方式"></a>2.1、Tomcat 部署项目的方式</h4><ul><li><p>方式1：直接将项目放到webapps 目录下</p><ul><li>将项目打成war 包，直接放到webapps 目录下，此时 war包会自动解压缩</li></ul></li><li><p>方式2：配置<code>conf/server.xml</code> </p><ul><li>在<code>&lt;Host&gt;&lt;/Host&gt;</code> 标签体中，配置<code>&lt;Context docBase=&quot;项目存放路径&quot; path=&quot;自定义url访问路径&quot; /&gt;</code></li></ul></li><li><p>方式3：在 <code>conf/Catalina/localhost</code> 下创建一个任意名称的xml 文件，在文件中编写 <code>&lt;Context docBase=&quot;项目存放路径&quot; /&gt;</code> ,此时url 访问路径就变成了这个xml 文件的名称</p><p><img src="/img/java_img/Tomcat%E7%83%AD%E9%83%A8%E7%BD%B2.png" alt="Tomcat热部署"></p><p><img src="/img/java_img/Tomcat%E7%83%AD%E9%83%A8%E7%BD%B2-%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84.png" alt="Tomcat热部署-文件路径"></p><p>此时在浏览器输入<code>localhost:8080/xml文件名称/项目文件名称</code>，就可以访问到热部署的项目了</p></li></ul><p><img src="/img/java_img/Tomcat%E7%83%AD%E9%83%A8%E7%BD%B2%E8%AE%BF%E9%97%AE.png" alt="Tomcat热部署访问"></p><h4 id="2-2、Java-动态项目的目录结构"><a href="#2-2、Java-动态项目的目录结构" class="headerlink" title="2.2、Java 动态项目的目录结构"></a>2.2、Java 动态项目的目录结构</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">项目的根目录<br>WEB-INF目录<br>web.xml文件  <span class="hljs-comment">//web 项目的核心配置文件</span><br>classes目录  <span class="hljs-comment">//放置字节码文件的目录</span><br>lib目录  <span class="hljs-comment">//放置依赖的jar 包</span><br></code></pre></td></tr></table></figure><h4 id="2-3、关于Tomcat-乱码问题"><a href="#2-3、关于Tomcat-乱码问题" class="headerlink" title="2.3、关于Tomcat 乱码问题"></a>2.3、关于Tomcat 乱码问题</h4><h5 id="1、Tomcat-日志乱码"><a href="#1、Tomcat-日志乱码" class="headerlink" title="1、Tomcat 日志乱码"></a>1、Tomcat 日志乱码</h5><p>在idea中 Help -&gt; Edit Custom VM Options 添加<code>-Dfile.encoding=UTF-8</code></p><h5 id="2、sout-打印乱码"><a href="#2、sout-打印乱码" class="headerlink" title="2、sout 打印乱码"></a>2、sout 打印乱码</h5><ul><li>参考链接：<a href="https://blog.csdn.net/qq_51073233/article/details/127087251">https://blog.csdn.net/qq_51073233/article/details/127087251</a></li></ul><h6 id="2-1、修改-File-settings-Editor-File-Encodings-下面都改成UTF-8"><a href="#2-1、修改-File-settings-Editor-File-Encodings-下面都改成UTF-8" class="headerlink" title="2.1、修改 File -&gt; settings -&gt; Editor -&gt; File Encodings 下面都改成UTF-8"></a>2.1、修改 File -&gt; settings -&gt; Editor -&gt; File Encodings 下面都改成UTF-8</h6><h6 id="2-2、apache-tomcat-8-5-82-—-conf-logging-properties"><a href="#2-2、apache-tomcat-8-5-82-—-conf-logging-properties" class="headerlink" title="2.2、apache-tomcat-8.5.82 —&gt; conf -&gt; logging.properties"></a>2.2、apache-tomcat-8.5.82 —&gt; conf -&gt; logging.properties</h6><p>将里面的GBK都改为UTF-8，目的是将tomcat启动之后的红色乱码提示信息改为正常的。</p><h6 id="2-3、apache-tomcat-8-5-82-—-bin-catalina-bat"><a href="#2-3、apache-tomcat-8-5-82-—-bin-catalina-bat" class="headerlink" title="2.3、apache-tomcat-8.5.82 —&gt; bin -&gt; catalina.bat"></a>2.3、apache-tomcat-8.5.82 —&gt; bin -&gt; catalina.bat</h6><p>打开文件，找到 <code>set &quot;JAVA_OPTS=%JAVA_OPTS% %JSSE_OPTS%&quot;</code>，在其中加上 -Dfile.encoding&#x3D;UTF-8</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">set <span class="hljs-string">&quot;JAVA_OPTS=%JAVA_OPTS% %JSSE_OPTS% -Dfile.encoding=UTF-8&quot;</span> <br></code></pre></td></tr></table></figure><h3 id="3、Servlet-【server-applet】"><a href="#3、Servlet-【server-applet】" class="headerlink" title="3、Servlet  【server applet】"></a>3、Servlet  【server applet】</h3><h4 id="3-1、Servlet-概念"><a href="#3-1、Servlet-概念" class="headerlink" title="3.1、Servlet 概念"></a>3.1、Servlet 概念</h4><p>定义：运行在服务器端的小程序</p><p>Servlet 就是一个接口，定义了Java 类被浏览器访问到（tomcat识别）的规则</p><p>将来自定义一个类，实现Servlet 接口，复写方法</p><h4 id="3-2、Servlet-快速入门"><a href="#3-2、Servlet-快速入门" class="headerlink" title="3.2、Servlet 快速入门"></a>3.2、Servlet 快速入门</h4><p>在JavaEE 项目中，定义一个类，实现Servlet 接口，实现接口中的5个方法，</p><p><img src="/img/java_img/Servlet%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B1.png" alt="Servlet入门案例1"></p><p>然后在web.xml 中配置Servlet ，配置url 访问路径</p><p><img src="/img/java_img/Servlet%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B-%E9%85%8D%E7%BD%AEurl.png" alt="Servlet入门案例-配置url"></p><h4 id="3-3、Servlet-执行原理"><a href="#3-3、Servlet-执行原理" class="headerlink" title="3.3、Servlet 执行原理"></a>3.3、Servlet 执行原理</h4><ul><li><p>当服务器接收到客户端浏览器的请求后，会解析请求URL 路径，获取访问的Servlet 的资源路径</p></li><li><p>通过资源路径去web.xml 中找对应的 &lt;url-pattern&gt; 标签体内容 ，然后再找到&lt;servlet-class&gt; 全类名</p></li><li><p>tomcat 会将全类名对应的字节码文件加载进内存。 <code>Class.forName(全类名);</code></p></li><li><p>创建对象  <code>cls.newInstance();</code></p></li><li><p>调用service() 方法</p></li></ul><h4 id="3-4、Servlet-的生命周期"><a href="#3-4、Servlet-的生命周期" class="headerlink" title="3.4、Servlet 的生命周期"></a>3.4、Servlet 的生命周期</h4><ul><li><p>1、被创建：执行init 方法，只执行一次</p><ul><li><p>默认情况下，第一次被访问时创建Servlet</p></li><li><p>可以配置指定Servlet 的创建时机：在web.xml 中的&lt;servlet&gt; 标签中可以通过指定&lt;load-on-startup&gt; 的值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>demo2<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>cn.itcast.web.servlet.ServletDemo2<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br>       <span class="hljs-comment">&lt;!--可以指定Servlet 的创建时机</span><br><span class="hljs-comment">               1、第一次被访问时创建Servlet ： &lt;load-on-startup&gt; 的值为负数</span><br><span class="hljs-comment">               2、在服务器启动时创建Servlet ： &lt;load-on-startup&gt; 的值为0或正数</span><br><span class="hljs-comment">       --&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">load-on-startup</span>&gt;</span>-5<span class="hljs-tag">&lt;/<span class="hljs-name">load-on-startup</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>demo2<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/demo2<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>Servlet 的init 方法只执行一次，说明一个Servlet 在内存中只存在一个对象，Servlet 是单例的</p><ul><li>多个用户同时访问时，可能存在线程安全问题<ul><li>解决：尽量不要在Servlet 中定义成员变量；即使定义了成员变量，也不要对其修改值</li></ul></li></ul></li></ul></li><li><p>2、提供服务：执行service 方法，执行多次</p><ul><li>每次访问Servlet 时，Service 方法都会被调用一次</li></ul></li><li><p>3、被销毁：执行destroy 方法，只执行一次</p><ul><li>Servlet 被销毁时执行。服务器正常关闭时，Servlet 被销毁。</li><li>只有服务器正常关闭时，才会执行destroy 方法</li><li>destroy 方法在Servlet 被销毁之前执行，一般用于释放资源</li></ul></li></ul><h4 id="3-5、Servlet-3-0注解配置"><a href="#3-5、Servlet-3-0注解配置" class="headerlink" title="3.5、Servlet 3.0注解配置"></a>3.5、Servlet 3.0注解配置</h4><p>步骤：</p><ul><li><p>1、定义一个类，实现Servlet 接口，复写方法</p></li><li><p>2、在类上使用@WebServlet 注解配置</p><p><img src="/img/java_img/Servlet3.0%E6%B3%A8%E8%A7%A3.png" alt="Servlet3.0注解"></p></li></ul><h4 id="3-6、IDEA-与Tomcat-的相关配置"><a href="#3-6、IDEA-与Tomcat-的相关配置" class="headerlink" title="3.6、IDEA 与Tomcat 的相关配置"></a>3.6、IDEA 与Tomcat 的相关配置</h4><p>1、IDEA 会为每一个Tomcat 部署的项目单独建立一份配置文件</p><p>2、<strong>工作空间项目</strong> 和 <strong>Tomcat部署的web项目</strong></p><ul><li>tomcat 真正访问的是“Tomcat部署的web项目”，“Tomcat部署的web项目” 对应着 “工作空间项目” 的web目录下的所有资源</li><li>WEB-INF 下的资源不能直接被浏览器访问</li></ul><h4 id="3-7、Servlet-体系结构"><a href="#3-7、Servlet-体系结构" class="headerlink" title="3.7、Servlet 体系结构"></a>3.7、Servlet 体系结构</h4><p>Servlet 接口   —–&gt;     GenericServlet 抽象类    —-&gt;    HttpServlet 抽象类</p><ul><li>GenericServlet 抽象类：将Servlet 接口中其它的方法做了默认空实现，只将service() 方法作为抽象</li><li>HttpServlet 抽象类：对http 协议的一种封装，简化操作</li></ul><h3 id="4、HTTP"><a href="#4、HTTP" class="headerlink" title="4、HTTP"></a>4、HTTP</h3><h4 id="4-1、HTTP-概念"><a href="#4-1、HTTP-概念" class="headerlink" title="4.1、HTTP 概念"></a>4.1、HTTP 概念</h4><p>HTTP：超文本传输协议</p><ul><li>传输协议：定义了客户端和服务器端通信时，发送数据的格式</li><li>HTTP 协议基于TCP&#x2F;IP 的高级协议</li><li>HTTP 的默认端口号是 80</li><li>HTTP 是基于请求&#x2F;响应模型的</li><li>HTTP 协议是无状态的：每次请求之间相互独立，不能交互数据</li></ul><h4 id="4-2、请求"><a href="#4-2、请求" class="headerlink" title="4.2、请求"></a>4.2、请求</h4><h5 id="4-2-1、请求消息的数据格式"><a href="#4-2-1、请求消息的数据格式" class="headerlink" title="4.2.1、请求消息的数据格式"></a>4.2.1、请求消息的数据格式</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html">- 请求行<br>  - 请求方式  请求url  请求协议/版本<br>  - GET  /login.html  HTTP/1.1<br>- 请求头<br>  - 请求头名称：请求头值<br>- 请求空行 【分割POST请求的请求头和请求体】<br>  -                                                                                                           <br>- 请求体（正文）【封装POST请求消息的请求参数】<br>  - 请求参数名：请求参数值<br></code></pre></td></tr></table></figure><ul><li>Get 请求参数在请求行中【也就是url 中】；Post 请求参数在请求体中</li><li>Get 请求的url 长度有限制；Post请求的url 长度没有限制</li></ul><h5 id="4-2-2、常见的请求头"><a href="#4-2-2、常见的请求头" class="headerlink" title="4.2.2、常见的请求头"></a>4.2.2、常见的请求头</h5><ul><li>User-Agent：浏览器告诉服务器，当前请求访问你使用的浏览器版本信息</li><li>Referer：告诉服务器，当前请求从哪里来</li></ul><h4 id="4-3、响应"><a href="#4-3、响应" class="headerlink" title="4.3、响应"></a>4.3、响应</h4><h5 id="4-3-1、请求消息的数据格式"><a href="#4-3-1、请求消息的数据格式" class="headerlink" title="4.3.1、请求消息的数据格式"></a>4.3.1、请求消息的数据格式</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs html">- 响应行<br>  - 请求协议/版本 状态码 状态码描述<br>  - HTTP/1.1 200 OK<br>- 响应头<br>  - 响应头名称：响应头值<br>  常见响应头：Content-Type：服务器告诉浏览器本次响应体的数据格式，以及编码<br>Content-Disposition：服务器告诉浏览器以什么格式打开响应体数据 【默认：in-line，在当前页面内打开                                             （attachment，以附件形式打开响应体）】<br>- 响应空行 <br>  -                                                                                                           <br>- 响应体（正文）传输的数据，比如html 页面<br>  <span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>首页<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    hello<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="5、Request"><a href="#5、Request" class="headerlink" title="5、Request"></a>5、Request</h3><p>实现Servlet 接口，浏览器发送请求流程</p><ul><li>1、Tomcat 服务器会根据请求url 中的资源路径，创建对应的对象</li><li>2、Tomcat 服务器会创建request 和response 对象，request 对象中封装请求消息数据。</li><li>3、Tomcat 服务器将request 和response 对象传递给service 方法，并调用service 方法</li><li>4、程序员可以通过request 对象获取请求消息数据，通过response 对象设置响应消息数据</li><li>5、Tomcat 服务器在给浏览器做出响应之前，会从service 方法中的response 对象中拿出设置的响应消息数据</li></ul><p><strong>request 对象和response 对象是由服务器创建的</strong></p><h4 id="5-1、request-功能"><a href="#5-1、request-功能" class="headerlink" title="5.1、request 功能"></a>5.1、request 功能</h4><h5 id="5-1-1、获取请求消息数据"><a href="#5-1-1、获取请求消息数据" class="headerlink" title="5.1.1、获取请求消息数据"></a>5.1.1、获取请求消息数据</h5><ul><li>获取请求行数据<ul><li>获取请求方式：<code>String getMethod();</code></li><li><strong>获取虚拟目录：<code>String getContextPath();</code></strong></li><li>获取Servlet 路径：<code>String getServletPath();</code></li><li>获取get方式的请求参数：<code>String getQueryString();</code></li><li><strong>获取请求的uri：<code>String getRequestURI();</code></strong></li><li><strong>获取请求的url：<code>StringBuffer getRequestURL();</code></strong></li><li>获取协议及版本：<code>String getProtocol();</code></li><li>获取客户机的IP地址：<code>String getRemoteAddr();</code></li></ul></li><li>获取请求头数据<ul><li><strong>通过请求头的名称获取请求头的值：<code>String getHeader(String 请求头名称);</code></strong></li><li>获取所有的请求头名称：<code>Enumeration&lt;String&gt; getHeaderNames();</code></li></ul></li><li>获取请求体数据<ul><li>获取流对象，再从流对象中拿数据</li><li>获取字符输入流【只能操作字符数据】：<code>BufferedReader getReader();</code></li><li>获取字节输入流【可以操作所有类型的数据】：<code>ServletInputStream getInputStream();</code></li></ul></li></ul><h5 id="5-1-2、其它功能"><a href="#5-1-2、其它功能" class="headerlink" title="5.1.2、其它功能"></a>5.1.2、其它功能</h5><ul><li><p>1、获取请求参数：</p><ul><li><strong>根据参数名称获取参数值：<code>String getParameter(String 参数名);</code></strong></li><li>根据参数名称获取参数值的数组：<code>String[] getParameterValues(String 参数名);</code></li><li>获取所有请求参数的参数名称：<code>Enumeration&lt;String&gt; getParameterNames();</code></li><li><strong>获取所有参数的Map集合：<code>Map&lt;String, String[]&gt; getParameterMap();</code></strong></li></ul><p><strong>中文乱码问题：</strong></p><p>​get请求不会乱码</p><p>​post请求乱码解决：在获取请求参数前，设置编码：<code>httpServletRequest.setCharacterEncoding(&quot;utf-8&quot;);</code></p></li><li><p>2、请求转发：【一种在服务器内部的资源跳转方式】</p><ul><li><strong>1、通过request 对象获取请求转发器对象：<code>RequestDispatcher getRequestDispatcher(String 路径)</code></strong></li><li><strong>2、使用RequestDispatcher 对象进行转发：<code>void forward(ServletRequest request, ServletResponse response)</code></strong></li></ul><p><strong>请求转发特点：</strong></p><p>​1、浏览器地址栏路径不发生变化</p><p>​2、只能转发到当前服务器内部资源中</p><p>​3、转发只会发送一次请求</p></li><li><p>3、共享数据：</p><ul><li>域对象：一个有作用范围的对象，可以在域范围内共享数据<ul><li>request 域：代表一次请求，一般用于请求转发的多个资源中共享数据</li></ul></li><li>方法：<ul><li>设置属性：<code>void setAttribute(String 属性名, Object 属性值);</code></li><li>获取属性：<code>Object getAttribute(String 属性名);</code></li><li>删除属性：<code>void removeAttribute(String 属性名);</code></li></ul></li></ul></li><li><p>4、获取ServletContext 对象：<code>ServletContext getServletContext()</code></p></li></ul><h3 id="6、Response"><a href="#6、Response" class="headerlink" title="6、Response"></a>6、Response</h3><h4 id="6-1、Response-功能"><a href="#6-1、Response-功能" class="headerlink" title="6.1、Response 功能"></a>6.1、Response 功能</h4><ul><li><p>设置相应行</p><ul><li>设置状态码：<code>setStatus(int 状态码)</code></li></ul></li><li><p>设置响应头：<code>setHeader(String name,String value)</code></p></li><li><p>设置响应体</p><ul><li><p>1、获取输出流</p><ul><li>字符输出流：<code>PrintWriter getWriter()</code></li></ul><p><strong>乱码问题解决：<code>response.setContentType(&quot;text/html;charset=utf-8&quot;)</code></strong></p><ul><li>字节输出流：<code>ServletOutputStream getOutputStream()</code></li></ul></li><li><p>2、使用输出流将数据输出到浏览器</p></li></ul></li><li><p>响应重定向：<code>void sendRedirect(String 重定向地址)</code></p><ul><li>特点：<ul><li>1、地址栏发生变化</li><li>2、可以访问其它服务器资源</li><li>3、两次请求</li></ul></li></ul></li></ul><h3 id="7、ServletContext-对象"><a href="#7、ServletContext-对象" class="headerlink" title="7、ServletContext 对象"></a>7、ServletContext 对象</h3><ul><li>代表整个Web 应用，可以和<em>程序的容器【服务器】</em>来通信</li></ul><p>7.1、功能：</p><ul><li>1、获取MIME 类型<ul><li>MIME类型介绍<ul><li>定义：在互联网通信过程中定义的一种文件数据类型</li><li>格式：大类型&#x2F;小类型     例如： text&#x2F;html     、    image&#x2F;jpeg</li></ul></li><li>获取：<code>String getMimeType(String 文件名)</code></li></ul></li><li>2、域对象：共享数据<ul><li>方法：<code>setAttribute、getAttribute、removeAttribute</code></li><li>ServletContext 域对象范围：所有用户所有请求的数据</li></ul></li><li>3、获取文件的<em>真实路径（服务器路径）</em><ul><li>方法：<code>getRealPath(String 路径)</code></li></ul></li></ul><p>7.2、获取ServletContext 对象：</p><ul><li>通过request 对象获取：<code>request.getServletContext();</code></li><li>通过HttpServlet 获取：<code>this.getServletContext();</code></li></ul><h3 id="8、会话技术"><a href="#8、会话技术" class="headerlink" title="8、会话技术"></a>8、会话技术</h3><ul><li>会话：一次会话中包含多次请求和响应<ul><li>一次会话：浏览器第一次给服务器资源发送请求，会话建立，直到一方断开位置</li><li>会话的功能：在一次会话的范围内的多次请求间，共享数据</li></ul></li></ul><h4 id="8-1、Cookie-客户端会话技术"><a href="#8-1、Cookie-客户端会话技术" class="headerlink" title="8.1、Cookie 客户端会话技术"></a>8.1、Cookie 客户端会话技术</h4><h5 id="8-1-1、概念"><a href="#8-1-1、概念" class="headerlink" title="8.1.1、概念"></a>8.1.1、概念</h5><p>客户端会话技术，将数据保存到客户端</p><h5 id="8-1-2、使用步骤"><a href="#8-1-2、使用步骤" class="headerlink" title="8.1.2、使用步骤"></a>8.1.2、使用步骤</h5><ul><li><p>创建Cookie对象，绑定数据：<code>new Cookie(String cookie名,String cookie值)</code></p></li><li><p>发送Cookie对象：<code>response.addCookie(Cookie cookie)</code></p><p>服务器就会以：<code>【 Set-Cookie：cookie名=cookie值 】</code> 的形式在<strong>响应头</strong>中响应给浏览器</p><p><img src="/img/java_img/%E5%8F%91%E9%80%81Cookie%E5%93%8D%E5%BA%94.png" alt="发送Cookie响应"></p><p>设置完cookie 之后，在一次会话中浏览器再次发送请求时就会在<strong>请求头</strong>中带着cookie 发送给服务器<code>【 cookie：cookie名=cookie值 】</code></p><p><img src="/img/java_img/%E8%AF%B7%E6%B1%82%E6%90%BA%E5%B8%A6cookie.png" alt="请求携带cookie"></p></li><li><p>获取Cookie，拿到数据：<code>request.getCookies()</code></p></li></ul><h5 id="8-1-3、Cookie-的细节"><a href="#8-1-3、Cookie-的细节" class="headerlink" title="8.1.3、Cookie 的细节"></a>8.1.3、Cookie 的细节</h5><p>1、Cookie 在浏览器中的存活时间</p><ul><li>默认情况下，当浏览器关闭后，Cookie 数据被销毁</li><li>可以设置Cookie 的生命周期：<code>cookie.setMaxAge(int 秒数)</code><ul><li>正数：将Cookie 数据写到硬盘的文件中【也就是 持久化存储 】</li><li>负数：默认值</li><li>0：代表删除Cookie 信息</li></ul></li></ul><p>2、同一个服务器下，多个项目之间Cookie 的共享</p><ul><li>默认情况下，Cookie 不能共享</li><li>设置Cookie 的获取范围：<code>cookie.setPath(String 路径)</code> 【默认情况下，cookie 的path 是 当前的虚拟目录 】<ul><li>如果要共享，可以将path 设置为 <code>/</code></li></ul></li></ul><h5 id="8-1-4、Cookie-的特点和作用"><a href="#8-1-4、Cookie-的特点和作用" class="headerlink" title="8.1.4、Cookie 的特点和作用"></a>8.1.4、Cookie 的特点和作用</h5><ul><li>特点：<ul><li>Cookie 存储在客户端浏览器</li><li>浏览器对于单个Cookie 的大小有限制，对同一个域名下的总Cookie 数量也有限制</li></ul></li><li>作用：<ul><li>Cookie 一般用于存储少量的不太敏感的数据</li><li>在不登录的情况下，完成服务器对浏览器的身份识别</li></ul></li></ul><h4 id="8-2、Session：服务器端会话技术"><a href="#8-2、Session：服务器端会话技术" class="headerlink" title="8.2、Session：服务器端会话技术"></a>8.2、Session：服务器端会话技术</h4><h5 id="8-2-1、概念"><a href="#8-2-1、概念" class="headerlink" title="8.2.1、概念"></a>8.2.1、概念</h5><p>session：服务器端会话技术，在一次会话的多次请求间共享数据，将数据保存在服务器端的对象中。HttpSession</p><h5 id="8-2-2、使用步骤"><a href="#8-2-2、使用步骤" class="headerlink" title="8.2.2、使用步骤"></a>8.2.2、使用步骤</h5><p>获取session 对象：<code>request.getSession();</code></p><p>HttpSession 对象的方法：<code>getAttribute(String name)</code>、<code>setAttribute(String name,String value)</code>、<code>removeAttribute(String name)</code></p><h5 id="8-2-3、原理"><a href="#8-2-3、原理" class="headerlink" title="8.2.3、原理"></a>8.2.3、原理</h5><p>当浏览器第一次向服务器端发送请求时，在服务器端内存中会生成一个session，服务器会在响应的时候把这个session 的id 通过<strong>Set-Cookie</strong> 传递给浏览器</p><p><img src="/img/java_img/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%93%8D%E5%BA%94sessionId.png" alt="服务器响应sessionId"></p><p>浏览器就会把这个JSESSIONID 存储到cookie 中,当再次发送请求时，会在cookie 中携带JSESSIONID 发送给服务器，服务器就会根据Cookie 中的JSESSIONID 去内存中查找对应的Session 对象</p><p><strong>session 的实现是依赖cookie 的</strong></p><h5 id="8-2-4、session-细节"><a href="#8-2-4、session-细节" class="headerlink" title="8.2.4、session 细节"></a>8.2.4、session 细节</h5><ul><li><p>当客户端关闭后，服务器不关闭，两次获取的session 不是同一个</p><ul><li><p>默认情况下不是同一个，</p></li><li><p>可以通过手动创建cookie 指定JSESSIONID 为session 的id，并设置cookie 的最大存活时间</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Cookie</span> <span class="hljs-variable">cookie</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Cookie</span>(<span class="hljs-string">&quot;JSESSIONID&quot;</span>, session.getId());<br>cookie.setMaxAge(<span class="hljs-number">60</span> * <span class="hljs-number">60</span>);<br>response.addCookie(cookie);<br></code></pre></td></tr></table></figure></li></ul></li><li><p>客户端不关闭，服务器关闭后，两个获取的session 不是同一个</p><ul><li>session 不是同一个，但是要确保数据不丢失，就要用到session 的钝化<ul><li>session 的钝化：在服务器正常关闭之前，将session 对象序列化到硬盘上</li><li>session 的活化：在服务器启动后，将硬盘上的session 文件转化成内存中的session 对象</li></ul></li></ul></li><li><p>session 的被销毁</p><ul><li><p>1、服务器关闭</p></li><li><p>2、session 对象调用invalidate()</p></li><li><p>3、session 的默认失效时间是30分钟</p><ul><li><p>可以在 &#x2F;tomcat&#x2F;conf&#x2F;web.xml 中设置session 的失效时间</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">session-config</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">session-timeout</span>&gt;</span>30<span class="hljs-tag">&lt;/<span class="hljs-name">session-timeout</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">session-config</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h5 id="8-2-5、session-特点"><a href="#8-2-5、session-特点" class="headerlink" title="8.2.5、session 特点"></a>8.2.5、session 特点</h5><ul><li>session 用于存储一次会话的多次请求的数据，存在服务器端</li><li>session 可以存储任意类型，任意大小的数据</li><li>session 与cookie 的区别：<ul><li>session 存储数据在服务器端，cookie 存储数据在客户端</li><li>session 没有数据大小限制，cookie 有</li><li>session 的数据安全，cookie 相对于不安全</li></ul></li></ul><h3 id="9、JSP"><a href="#9、JSP" class="headerlink" title="9、JSP"></a>9、JSP</h3><h4 id="9-1、概念"><a href="#9-1、概念" class="headerlink" title="9.1、概念"></a>9.1、概念</h4><ul><li>Java Server Page：Java服务器端页面</li><li>可以理解为：一个特殊的页面，其中既可以定义html 标签，又可以定义java 代码</li><li>用于简化书写</li></ul><h4 id="9-2、原理"><a href="#9-2、原理" class="headerlink" title="9.2、原理"></a>9.2、原理</h4><ul><li>JSP 本质上就是一个Servlet</li></ul><h4 id="9-3、JSP-的脚本"><a href="#9-3、JSP-的脚本" class="headerlink" title="9.3、JSP 的脚本"></a>9.3、JSP 的脚本</h4><p>JSP 定义Java 代码的方式：</p><ul><li>&lt;% Java 代码 %&gt;<ul><li>在service() 方法中定义的内容</li></ul></li><li>&lt;%!  Java 代码 %&gt;<ul><li>可以定义成员变量、成员方法</li></ul></li><li>&lt;%&#x3D;  Java 代码 %&gt;<ul><li>在service() 方法中的输出语句，将Java 代码输出到页面上</li></ul></li></ul><h4 id="9-4、JSP-内置对象"><a href="#9-4、JSP-内置对象" class="headerlink" title="9.4、JSP 内置对象"></a>9.4、JSP 内置对象</h4><ul><li>概念：在jsp 页面中不需要获取和创建，可以直接使用的对象，就是内置对象</li><li>jsp 一共有9个内置对象：<ul><li>1、pageContext。【PageContext】 当前页面共享数据，还可以获取其它8个内置对象</li><li>2、request。【HttpServletRequest】。一次请求访问的多个资源（请求转发）</li><li>3、session。【HttpSession】。一次会话的多次请求间</li><li>4、application。【ServletContext】。所有用户间共享数据</li><li>5、response。【HttpServletResponse】。响应对象</li><li>6、page。【Object】。当页面（Servlet）的对象this</li><li>7、out：字符输出流对象，可以将数据输出到页面上。【JspWriter】  输出对象，将数据输出到页面<ul><li>response.getWrite() 和out 的区别：<ul><li>在Tomcat 服务器给浏览器做出响应之前，会先找response 缓冲区数据，再找out 缓冲区数据</li><li>response.getWriter() 数据输出永远在out .write() 之前</li></ul></li></ul></li><li>8、config。【ServletConfig】。Servlet 的配置对象</li><li>9、exception。【Throwable】。异常对象</li></ul></li></ul><p>前4个为域对象</p><h4 id="9-5、JSP-指令"><a href="#9-5、JSP-指令" class="headerlink" title="9.5、JSP 指令"></a>9.5、JSP 指令</h4><ul><li>作用：用于配置JSP 页面，导入资源文件</li><li>格式：<code>&lt;%@ 指令名称 属性名1=属性值1 属性名2=属性值2 %&gt;</code></li><li>分类：<ul><li>page：用于配置JSP 页面<ul><li>contentType：等同于<code>resp.setContentType()</code><ul><li>可以设置响应体的mime 类型以及字符集</li></ul></li><li>language：只有java</li><li>buffer：缓冲区</li><li>import：导包</li><li>errorPage：当前页面发生异常后，会自动跳转到指定的错误页面</li><li>isErrorPage：标识当前页面是否是错误页面</li></ul></li><li>include：页面包含，导入页面的资源文件</li><li>taglib：导入资源</li></ul></li></ul><h4 id="9-6、JSP注释"><a href="#9-6、JSP注释" class="headerlink" title="9.6、JSP注释"></a>9.6、JSP注释</h4><ul><li>html 注释<ul><li><code>&lt;!-- --&gt;</code>  只能注释html</li></ul></li><li>jsp 注释<ul><li><code>&lt;%-- --%&gt;</code>  注释所有</li></ul></li></ul><h3 id="10、MVC-开发模式"><a href="#10、MVC-开发模式" class="headerlink" title="10、MVC 开发模式"></a>10、MVC 开发模式</h3><ul><li>M：Model，模型：处理具体的业务操作，如查询数据库、封装对象【JavaBean】</li><li>V：View，视图：展示数据 【Jsp】</li><li>C：Controller，控制器：获取请求参数；调用模型；将数据交给视图展示【Servlet】</li></ul><p>浏览器发送请求到服务器，在服务器中控制器进行处理，然后调用模型进行业务处理，模型处理完成之后发送给控制器，控制器再将数据发送给视图进行渲染，视图再返回给浏览器</p><h3 id="11、EL-表达式"><a href="#11、EL-表达式" class="headerlink" title="11、EL 表达式"></a>11、EL 表达式</h3><ul><li><p>EL：Expression Language 表达式语言</p></li><li><p>作用：可以替换和简化JSP 页面中Java 代码的编写</p></li><li><p>语法：<code>$&#123;表达式&#125;</code></p></li><li><p>注意：Jsp 默认支持el 表达式，</p><ul><li>如果要忽略el 表达式，可以配置<code>isELIgnored=&#39;true&#39;</code>，可以忽略当前页面中所有的el 表达式</li><li>也可以在el 表达式之前加上 <code>\</code> ，只忽略一个el 表达式</li></ul></li><li><p>作用：</p><ul><li>1、运算<ul><li>支持的运算符<ul><li>算术运算符：+、-、*、&#x2F;【div】、%【mod】</li><li>比较运算符：&gt;、&lt;、&#x3D;&#x3D;、&gt;&#x3D;、&lt;&#x3D;</li><li>逻辑运算符：&amp;&amp;【and】、||【or】、!【not】</li><li>空运算符：empty ,用于判断字符串、集合、数组的对象是否为null，并且长度是否为0<ul><li><code>$&#123;empty list&#125;</code>   判断是否为空</li><li><code>$&#123;not empty list\str&#125;</code>   判断是否不为空</li></ul></li></ul></li></ul></li><li>2、获取值<ul><li>el 表达式只能从域对象中获取值</li><li>语法：<ul><li><code>$&#123;域名称.键名&#125;</code><ul><li>pageScope —&gt; pageContext</li><li>RequestScope —&gt; request</li><li>sessionScope —&gt; session</li><li>applicationScope —&gt; application【ServletContext】</li></ul></li><li><code>$&#123;键名&#125;</code>：表示依次从最小的域中查找是否有对应的值，直到找到为止</li></ul></li></ul></li></ul></li><li><p>隐式对象：在el 表达式中可以直接使用的对象，就是隐式对象</p><ul><li>el 表达式中共有11个隐式对象</li><li>pageContext:<ul><li>获取其它8个内置对象</li></ul></li></ul></li></ul><h3 id="12、JSTL-标签"><a href="#12、JSTL-标签" class="headerlink" title="12、JSTL 标签"></a>12、JSTL 标签</h3><ul><li><p>概念：JavaServer Pages Tag Library，Jsp 标准标签库</p><ul><li>是由Apache 组织提供的开源的免费的Jsp 标签</li></ul></li><li><p>作用：用于简化和替换Jsp 页面上的Java 代码</p></li><li><p>使用：</p><ul><li>1、导入jstl 相关Jar 包</li><li>2、引入标签库：<code>&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</code></li></ul></li><li><p>常用的JSTL 标签</p><ul><li><p>if：类似于Java 代码中的if</p><ul><li><pre><code class="jsp">&lt;c:if test=&quot;$&#123;not empty requestScope.list&#125;&quot;&gt;    &lt;h3&gt;list不为空&lt;/h3&gt;&lt;/c:if&gt;<figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><br>  - `&lt;<span class="hljs-keyword">c</span>:if&gt;` 标签没有else <br><br>- choose：类似于Java 代码中的<span class="hljs-keyword">switch</span><br><br>  - ```jsp<br>    &lt;<span class="hljs-keyword">c</span>:choose&gt;     &lt;<span class="hljs-variable">%--</span> <span class="hljs-keyword">switch</span>--%&gt;<br>        &lt;<span class="hljs-keyword">c</span>:when test<span class="hljs-operator">=</span><span class="hljs-string">&quot;$&#123;requestScope.number==2&#125;&quot;</span>&gt;   &lt;<span class="hljs-variable">%--</span> case --%&gt;<br>            星期二<br>        &lt;/<span class="hljs-keyword">c</span>:when&gt;<br>        &lt;<span class="hljs-keyword">c</span>:otherwise&gt;  &lt;<span class="hljs-variable">%--</span> <span class="hljs-keyword">default</span> --%&gt;<br>            其它<br>        &lt;/<span class="hljs-keyword">c</span>:otherwise&gt;<br>    &lt;/<span class="hljs-keyword">c</span>:choose&gt;<br></code></pre></td></tr></table></figure></code></pre></li></ul></li><li><p>foreach：类似于Java 代码中的for 循环</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs jsp">&lt;!--<br>begin  开始<br>end  结束<br><span class="hljs-keyword">var</span>  临时变量<br>step  步长<br>varStatus：<br>index：容器中元素的索引，从<span class="hljs-number">0</span>开始<br>count：循环次数，从<span class="hljs-number">1</span>开始<br>--&gt;<br>&lt;c:forEach begin=<span class="hljs-string">&quot;1&quot;</span> end=<span class="hljs-string">&quot;10&quot;</span> <span class="hljs-keyword">var</span>=<span class="hljs-string">&quot;i&quot;</span> step=<span class="hljs-string">&quot;1&quot;</span> varStatus=<span class="hljs-string">&quot;s&quot;</span>&gt;<br>    $&#123;i&#125;  $&#123;s.index&#125; $&#123;s.count&#125;&lt;br&gt;<br>&lt;/c:forEach&gt;<br></code></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs jsp">&lt;!--<br>item：容器对象<br><span class="hljs-keyword">var</span>：容器中元素的临时变量<br>varStatus：<br>index：容器中元素的索引，从<span class="hljs-number">0</span>开始<br>count：循环次数，从<span class="hljs-number">1</span>开始<br>--&gt;<br>&lt;c:forEach items=<span class="hljs-string">&quot;$&#123;list&#125;&quot;</span> varStatus=<span class="hljs-string">&quot;s&quot;</span> <span class="hljs-keyword">var</span>=<span class="hljs-string">&quot;str&quot;</span>&gt;<br>    $&#123;s.index&#125; --&gt;$&#123;s.count&#125; --&gt;$&#123;str&#125;&lt;br&gt;<br>&lt;/c:forEach&gt;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="13、三层架构：软件设计架构"><a href="#13、三层架构：软件设计架构" class="headerlink" title="13、三层架构：软件设计架构"></a>13、三层架构：软件设计架构</h3><ul><li>界面层（表示层）：用户看到的界面</li><li>业务逻辑层：处理业务逻辑</li><li>数据访问层：操作数据库</li></ul><h3 id="14、Filter-过滤器"><a href="#14、Filter-过滤器" class="headerlink" title="14、Filter 过滤器"></a>14、Filter 过滤器</h3><ul><li>当访问服务器的资源时，过滤器可以将请求拦截下来，完成一些特殊的功能</li><li>一般用于完成通用的操作。比如登录验证、统一编码处理、敏感字符的过滤…</li></ul><h4 id="1、快速入门"><a href="#1、快速入门" class="headerlink" title="1、快速入门"></a>1、快速入门</h4><h5 id="1-1、定义一个类，实现接口Filter"><a href="#1-1、定义一个类，实现接口Filter" class="headerlink" title="1.1、定义一个类，实现接口Filter"></a>1.1、定义一个类，实现接口Filter</h5><h5 id="1-2、复写方法"><a href="#1-2、复写方法" class="headerlink" title="1.2、复写方法"></a>1.2、复写方法</h5><h5 id="1-3、配置拦截路径"><a href="#1-3、配置拦截路径" class="headerlink" title="1.3、配置拦截路径"></a>1.3、配置拦截路径</h5><h6 id="1-3-1、配置方式：web-xml-、-注解"><a href="#1-3-1、配置方式：web-xml-、-注解" class="headerlink" title="1.3.1、配置方式：web.xml  、  注解"></a>1.3.1、配置方式：web.xml  、  注解</h6><p><strong>Demo（注解方式：<code>@WebFilter(过滤路径)</code>）:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.servlet.*;<br><span class="hljs-keyword">import</span> javax.servlet.annotation.WebFilter;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 过滤器快速入门</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@WebFilter(&quot;/*&quot;)</span>  <span class="hljs-comment">//注解方式配置过滤器： 访问所有资源之前，都会执行该过滤器</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FilterDemo1</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Filter</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">(FilterConfig filterConfig)</span> <span class="hljs-keyword">throws</span> ServletException &#123;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doFilter</span><span class="hljs-params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="hljs-keyword">throws</span> IOException, ServletException &#123;<br>        System.out.println(<span class="hljs-string">&quot;FilterDemo1 被执行了...&quot;</span>);<br><br>        <span class="hljs-comment">//*** 过滤完之后，一定要放行</span><br>        filterChain.doFilter(servletRequest, servletResponse);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">destroy</span><span class="hljs-params">()</span> &#123;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2、Filter过滤器的细节"><a href="#2、Filter过滤器的细节" class="headerlink" title="2、Filter过滤器的细节"></a>2、Filter过滤器的细节</h4><h5 id="2-1、web-xml-方式配置"><a href="#2-1、web-xml-方式配置" class="headerlink" title="2.1、web.xml 方式配置"></a>2.1、web.xml 方式配置</h5><p>1、定义类，实现Filter接口，复写方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.servlet.*;<br><span class="hljs-comment">// import javax.servlet.annotation.WebFilter;</span><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * web.xml 方式配置</span><br><span class="hljs-comment"> */</span><br><span class="hljs-comment">// @WebFilter(&quot;/*&quot;)  //*** 访问所有资源之前，都会执行该过滤器</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FilterDemo1</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Filter</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">(FilterConfig filterConfig)</span> <span class="hljs-keyword">throws</span> ServletException &#123;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doFilter</span><span class="hljs-params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="hljs-keyword">throws</span> IOException, ServletException &#123;<br>        System.out.println(<span class="hljs-string">&quot;FilterDemo1 被执行了...&quot;</span>);<br>        <span class="hljs-comment">//*** 过滤完之后，一定要放行</span><br>        filterChain.doFilter(servletRequest, servletResponse);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">destroy</span><span class="hljs-params">()</span> &#123;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>2、在web.xml 中配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">web-app</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;4.0&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--web.xml 方式配置过滤器--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>demo1<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>cn.itcast.web.filter.FilterDemo1<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>demo1<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">web-app</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="2-2、Filter-过滤器的执行流程"><a href="#2-2、Filter-过滤器的执行流程" class="headerlink" title="2.2、Filter 过滤器的执行流程"></a>2.2、Filter 过滤器的执行流程</h5><p>1、执行过滤器</p><p>2、执行放行后的资源</p><p>3、回来接着执行过滤器放行代码下边的代码</p><h5 id="2-3、Filter-过滤器的生命周期方法"><a href="#2-3、Filter-过滤器的生命周期方法" class="headerlink" title="2.3、Filter 过滤器的生命周期方法"></a>2.3、Filter 过滤器的生命周期方法</h5><p>1、<code>init()</code>方法： 在服务器启动后，会创建Filter对象，然后调用init方法。 一般用于加载资源， 只执行一次。</p><p>2、<code>doFilter()</code>方法：每一次请求被拦截时，都会执行。执行多次</p><p>3、<code>destroy()</code>方法：在服务器关闭后，Filter对象被销毁。如果服务器是正常关闭，则会执行destroy方法。用于释放资源， 只执行一次</p><h5 id="2-4、Filter-过滤器配置详解"><a href="#2-4、Filter-过滤器配置详解" class="headerlink" title="2.4、Filter 过滤器配置详解"></a>2.4、Filter 过滤器配置详解</h5><ul><li><p>拦截路径配置：</p><ul><li>1、具体的资源路径。比如 &#x2F;index.jsp    只有访问index.jsp资源时，过滤器才会被执行</li><li>2、具体的拦截目录。比如 &#x2F;user&#x2F;*   访问 &#x2F;user 下的所有资源时，过滤器都会被执行</li><li>3、后缀名。比如 *.jsp   访问所有的后缀名为jsp资源时，过滤器都会被执行</li><li>4、拦截所有资源。 &#x2F;*    访问所有资源时，过滤器都会被执行</li></ul></li><li><p>拦截方式配置:资源被访问的方式</p><ul><li><p>注解配置：</p><ul><li><p>设置dispatcherTypes属性：</p><ul><li>1、REQUEST：默认值。浏览器直接请求资源</li><li>2、FORWARD：转发访问资源</li><li>3、INCLUDE：包含访问资源</li><li>4、ERROR：错误跳转资源</li><li>5、ASYNC：异步访问资源</li></ul><p><strong>Demo:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//表示浏览器直接请求资源时，该过滤器会被执行</span><br><span class="hljs-meta">@WebFilter(value = &quot;/index.jsp&quot;, dispatcherTypes = DispatcherType.REQUEST)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FilterDemo5</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Filter</span> &#123;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//表示转发访问index.jsp时，该过滤器才会被执行</span><br><span class="hljs-meta">@WebFilter(value = &quot;/index.jsp&quot;, dispatcherTypes = DispatcherType.FORWARD)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FilterDemo5</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Filter</span> &#123;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//浏览器直接发送请求，或者转发访问，过滤器都会被执行</span><br><span class="hljs-meta">@WebFilter(value = &quot;/index.jsp&quot;, dispatcherTypes = &#123;DispatcherType.REQUEST,DispatcherType.FORWARD&#125;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FilterDemo5</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Filter</span> &#123;<br></code></pre></td></tr></table></figure></li></ul></li><li><p>web.xml 配置：设置<code>&lt;dispatcher&gt;&lt;/dispatcher&gt;</code>标签</p><p><strong>Demo:</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>demo1<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>cn.itcast.web.filter.FilterDemo1<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>demo1<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dispatcher</span>&gt;</span>REQUEST<span class="hljs-tag">&lt;/<span class="hljs-name">dispatcher</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul></li></ul><h5 id="2-5、过滤器链（配置多个过滤器）"><a href="#2-5、过滤器链（配置多个过滤器）" class="headerlink" title="2.5、过滤器链（配置多个过滤器）"></a>2.5、过滤器链（配置多个过滤器）</h5><ul><li>执行顺序：如果有两个过滤器：过滤器1 和 过滤器2，顺序如下：<ul><li>请求 -&gt; 过滤器1  -&gt; 过滤器2   -&gt; 资源执行  -&gt; 过滤器2  -&gt; 过滤器1  -&gt;浏览器</li></ul></li><li>过滤器的先后顺序问题：<ul><li>1、注解配置：按照类名的字符串比较规则比较，值小的先执行<ul><li>如：AFilter  和  BFilter ，A比B小，所以AFilter先执行</li></ul></li><li>2、web.xml 配置：按照在web.xml 中定义的先后顺序，<code>&lt;filter-mapping&gt;</code>谁定义在上边，谁先执行</li></ul></li></ul><h4 id="3、增强对象的功能："><a href="#3、增强对象的功能：" class="headerlink" title="3、增强对象的功能："></a>3、增强对象的功能：</h4><h5 id="3-1、设计模式：一些通用的解决固定问题的方式"><a href="#3-1、设计模式：一些通用的解决固定问题的方式" class="headerlink" title="3.1、设计模式：一些通用的解决固定问题的方式"></a>3.1、设计模式：一些通用的解决固定问题的方式</h5><ul><li>1、装饰模式</li><li>2、代理模式：<ul><li>概念：<ul><li>1、真实对象：被代理的对象</li><li>2、代理对象：</li><li>3、代理模式：代理对象去代理真实对象，以达到增强真实对象功能的目的</li></ul></li><li>实现方式<ul><li>静态代理：有一个代理类文件描述代理模式</li><li>动态代理：在内存中形成代理类<ul><li>实现步骤：<ul><li>1、代理对象和真实对象实现相同的接口</li><li>2、获取代理对象 <code>代理对象 = Proxy.newProxyInstance();</code></li><li>3、使用代理对象调用方法，就可以增强方法了</li></ul></li><li>增强方式：<ul><li>1、增强参数列表</li><li>2、增强返回值类型</li><li>3、增强方法体执行逻辑</li></ul></li></ul></li></ul></li></ul></li></ul><h3 id="15、Listener-监听器"><a href="#15、Listener-监听器" class="headerlink" title="15、Listener 监听器"></a>15、Listener 监听器</h3><p><strong>Web的三大组件：Servlet、Filter、Listener</strong></p><p>时间的监听机制：</p><ul><li>事件：一件事件</li><li>事件源：事件发生的地方</li><li>监听器：一个对象</li><li>注册监听：将事件、事件源、监听器绑定在一起。当事件源上发生某个事件后，执行监听代码</li></ul><p>ServletContextListener 监听器对象：监听ServletContext 对象的创建和销毁</p><ul><li><p>两个方法：</p><ul><li><p>void contextDestroyed（ServletContextEvent sce）：ServletContext 对象被销毁之前会调用该方法</p></li><li><p>void contextInitialized（ServletContextEvent sce）：ServletContext 对象创建后会调用该方法</p></li></ul></li><li><p>实现监听器的步骤：</p><ul><li><p>1、定义一个类，实现ServletContextListener接口</p></li><li><p>2、复写方法</p></li><li><p>3、配置</p><ul><li><p>web.xml 方式配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.servlet.ServletContextEvent;<br><span class="hljs-keyword">import</span> javax.servlet.ServletContextListener;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ContextLoaderListener</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ServletContextListener</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 监听ServletContext 对象创建的</span><br><span class="hljs-comment">     * ServletContext 对象是在服务器启动后自动创建的</span><br><span class="hljs-comment">     * 在服务器启动后自动调用</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> servletContextEvent</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">contextInitialized</span><span class="hljs-params">(ServletContextEvent servletContextEvent)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;ContextLoaderListener.contextInitialized&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 在服务器正常关闭后，ServletContext 对象被销毁，该方法被调用</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> servletContextEvent</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">contextDestroyed</span><span class="hljs-params">(ServletContextEvent servletContextEvent)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;ContextLoaderListener.contextDestroyed&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--配置监听器--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">listener</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">listener-class</span>&gt;</span>cn.itcast.web.listener.ContextLoaderListener<span class="hljs-tag">&lt;/<span class="hljs-name">listener-class</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">listener</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>注解配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.servlet.ServletContextEvent;<br><span class="hljs-keyword">import</span> javax.servlet.ServletContextListener;<br><span class="hljs-keyword">import</span> javax.servlet.annotation.WebListener;<br><br><span class="hljs-meta">@WebListener</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ContextLoaderListener</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ServletContextListener</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 监听ServletContext 对象创建的</span><br><span class="hljs-comment">     * ServletContext 对象是在服务器启动后自动创建的</span><br><span class="hljs-comment">     * 在服务器启动后自动调用</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> servletContextEvent</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">contextInitialized</span><span class="hljs-params">(ServletContextEvent servletContextEvent)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;ContextLoaderListener.contextInitialized&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 在服务器正常关闭后，ServletContext 对象被销毁，该方法被调用</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> servletContextEvent</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">contextDestroyed</span><span class="hljs-params">(ServletContextEvent servletContextEvent)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;ContextLoaderListener.contextDestroyed&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建Hexo</title>
    <link href="/2024/02/26/%E6%90%AD%E5%BB%BAHexo/"/>
    <url>/2024/02/26/%E6%90%AD%E5%BB%BAHexo/</url>
    
    <content type="html"><![CDATA[<h3 id="1、安装nodejs"><a href="#1、安装nodejs" class="headerlink" title="1、安装nodejs"></a>1、安装nodejs</h3><h4 id="1-1、解压-node-v16-17-0-linux-arm64-tar-xz"><a href="#1-1、解压-node-v16-17-0-linux-arm64-tar-xz" class="headerlink" title="1.1、解压 node-v16.17.0-linux-arm64.tar.xz"></a>1.1、解压 node-v16.17.0-linux-arm64.tar.xz</h4><p>首先，先通过<code> xz -d XXX.tar.xz</code> 解压成 <code>XXX.tar</code> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">xz -d node-v16.17.0-linux-arm64.tar.xz<br></code></pre></td></tr></table></figure><p>然后通过<code>tar xvf XXX.tar  </code>来解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar xvf node-v16.17.0-linux-arm64.tar<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mv node-v16.17.0-linux-arm64 nodejs<br></code></pre></td></tr></table></figure><h4 id="1-2、建立软链接"><a href="#1-2、建立软链接" class="headerlink" title="1.2、建立软链接"></a>1.2、建立软链接</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ln -s /usr/local/nodejs/bin/node /usr/local/bin<br>ln -s /usr/local/nodejs/bin/npm /usr/local/bin<br></code></pre></td></tr></table></figure><h4 id="1-3、安装完成后测试"><a href="#1-3、安装完成后测试" class="headerlink" title="1.3、安装完成后测试"></a>1.3、安装完成后测试</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">node -v<br>npm -v<br></code></pre></td></tr></table></figure><h3 id="2、安装git"><a href="#2、安装git" class="headerlink" title="2、安装git"></a>2、安装git</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install git<br></code></pre></td></tr></table></figure><h3 id="3、安装hexo"><a href="#3、安装hexo" class="headerlink" title="3、安装hexo"></a>3、安装hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g hexo-cli<br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建软连接</span><br>ln -s /usr/local/nodejs/bin/hexo /usr/local/bin<br><span class="hljs-meta prompt_"># </span><span class="language-bash">验证是否安装成功</span><br>hexo -v<br></code></pre></td></tr></table></figure><h3 id="4、建站"><a href="#4、建站" class="headerlink" title="4、建站"></a>4、建站</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo init 文件名<br>cd 文件名<br>npm install<br></code></pre></td></tr></table></figure><h3 id="5、开启hexo指定端口"><a href="#5、开启hexo指定端口" class="headerlink" title="5、开启hexo指定端口"></a>5、开启hexo指定端口</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看防火墙状态</span><br>firewall-cmd --state<br><span class="hljs-meta prompt_"># </span><span class="language-bash">开启防火墙</span><br>systemctl start firewalld<br><span class="hljs-meta prompt_"># </span><span class="language-bash">开启指定端口--permanent 永久开启</span><br>firewall-cmd --zone=public --add-port=4000/tcp --permanent<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重新加载防火墙</span><br>firewall-cmd --reload<br></code></pre></td></tr></table></figure><p><strong>补充命令:</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看已开启的端口</span><br>firewall-cmd --list-ports<br><span class="hljs-meta prompt_"># </span><span class="language-bash">关闭指定端口</span><br>firewall-cmd --zone=public --remove-port=端口号/tcp --permanent<br>systemctl restart firewalld<br>firewall-cmd --reload<br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看端口被哪一个进程占用centos7默认没有安装net-tools工具，需要安装</span><br>yum install -y net-tools<br>netstat -lnpt|grep 端口号<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">#</span></span> <br>lsof -i:端口号<br><span class="hljs-meta prompt_"># </span><span class="language-bash">临时关闭防火墙</span><br>systemctl stop firewalld<br><span class="hljs-meta prompt_"># </span><span class="language-bash">永久关闭防火墙</span><br>systemctl disable firewalld<br><br></code></pre></td></tr></table></figure><h3 id="6、本地启动hexo"><a href="#6、本地启动hexo" class="headerlink" title="6、本地启动hexo"></a>6、本地启动hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">清除缓存文件和已经生产的静态文件</span><br>hexo clean<br><span class="hljs-meta prompt_"># </span><span class="language-bash">生产静态文件</span><br>hexo g  / hexo generate<br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动服务</span><br>hexo s / hexo server<br></code></pre></td></tr></table></figure><h3 id="7、安装fluid主题"><a href="#7、安装fluid主题" class="headerlink" title="7、安装fluid主题"></a>7、安装fluid主题</h3><h4 id="7-1、安装主题"><a href="#7-1、安装主题" class="headerlink" title="7.1、安装主题"></a>7.1、安装主题</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd blog/<br>npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><h4 id="7-2、修改-config-yml配置文件"><a href="#7-2、修改-config-yml配置文件" class="headerlink" title="7.2、修改_config.yml配置文件"></a>7.2、修改<code>_config.yml</code>配置文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">language: zh-CN<br>theme: fluid<br></code></pre></td></tr></table></figure><h4 id="7-3、修改成功后重新生成静态文件"><a href="#7-3、修改成功后重新生成静态文件" class="headerlink" title="7.3、修改成功后重新生成静态文件"></a>7.3、修改成功后重新生成静态文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo clena<br>hexo g<br></code></pre></td></tr></table></figure><h3 id="8、部署到gitee"><a href="#8、部署到gitee" class="headerlink" title="8、部署到gitee"></a>8、部署到gitee</h3><h4 id="8-1、生成ssh公钥"><a href="#8-1、生成ssh公钥" class="headerlink" title="8.1、生成ssh公钥"></a>8.1、生成ssh公钥</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &quot;邮箱&quot;<br></code></pre></td></tr></table></figure><p><strong>之后就会在<code>~/.ssh/</code>下生成公钥和私钥</strong></p><p><img src="/img/hexo_img/%E5%85%AC%E9%92%A5%E7%9B%AE%E5%BD%95.jpg"></p><h4 id="8-2、通过cat-ssh-id-rsa-pub将生成的公钥添加到gitee"><a href="#8-2、通过cat-ssh-id-rsa-pub将生成的公钥添加到gitee" class="headerlink" title="8.2、通过cat ~/.ssh/id_rsa.pub将生成的公钥添加到gitee"></a>8.2、通过<code>cat ~/.ssh/id_rsa.pub</code>将生成的公钥添加到gitee</h4><p><img src="/img/hexo_img/%E6%B7%BB%E5%8A%A0ssh%E5%85%AC%E9%92%A5.jpg" alt="ssh公钥"></p><p><strong>之后通过<code>ssh -T git@gitee.com</code>，查看是否绑定成功</strong></p><p><img src="/img/hexo_img/%E9%AA%8C%E8%AF%81ssh.jpg"></p><h4 id="8-3、gitee新建仓库"><a href="#8-3、gitee新建仓库" class="headerlink" title="8.3、gitee新建仓库"></a>8.3、gitee新建仓库</h4><p>仓库名称随便起，路径遵循 <code>用户名.gitee.io</code>,设置初始模板，添加Readme文件，创建</p><h4 id="8-4、编辑hexo目录下的-config-yml文件"><a href="#8-4、编辑hexo目录下的-config-yml文件" class="headerlink" title="8.4、编辑hexo目录下的_config.yml文件"></a>8.4、编辑hexo目录下的<code>_config.yml</code>文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">vim _config.yml<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">添加</span><br>deploy:<br>  type: git<br>  repo: 仓库url<br>  branch: master<br></code></pre></td></tr></table></figure><p><strong>更改完成之后，重新生成静态文件，部署</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">清空原来的静态文件</span><br>hexo c<br><span class="hljs-meta prompt_"># </span><span class="language-bash">生成静态文件</span><br>hexo g<br><span class="hljs-meta prompt_"># </span><span class="language-bash">部署</span><br>hexo d<br></code></pre></td></tr></table></figure><h3 id="9、在hexo中插入pdf"><a href="#9、在hexo中插入pdf" class="headerlink" title="9、在hexo中插入pdf"></a>9、在hexo中插入pdf</h3><h4 id="9-1、进入hexo的目录下安装插件"><a href="#9-1、进入hexo的目录下安装插件" class="headerlink" title="9.1、进入hexo的目录下安装插件"></a>9.1、进入hexo的目录下安装插件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install --save hexo-pdf<br></code></pre></td></tr></table></figure><h4 id="9-2、在文章中插入链接"><a href="#9-2、在文章中插入链接" class="headerlink" title="9.2、在文章中插入链接"></a>9.2、在文章中插入链接</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">&#123;% pdf pdf路径 %&#125;<br></code></pre></td></tr></table></figure><p>pdf路径是在<code>source</code>文件夹下的，注意路径中不要有空格</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git笔记</title>
    <link href="/2024/02/26/git%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/02/26/git%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<ul><li><p>⭐笔记视频：【尚硅谷】 <a href="https://www.bilibili.com/video/BV1vy4y1s7k6">https://www.bilibili.com/video/BV1vy4y1s7k6</a></p></li><li><p>书籍</p><ul><li>猴子都能懂的 Git 入门 <a href="https://backlog.com/git-tutorial/cn/">https://backlog.com/git-tutorial/cn/</a></li><li>GitHub 漫游指南 <a href="https://github.phodal.com/">https://github.phodal.com/</a></li></ul></li><li><p>文档</p><ul><li>GitHub 官方文档：<a href="https://docs.github.com/cn">https://docs.github.com/cn</a></li></ul></li></ul><h2 id="1、常用命令"><a href="#1、常用命令" class="headerlink" title="1、常用命令"></a>1、常用命令</h2><ul><li>1、<code>git init</code>          初始化本地库</li><li>2、<code>git status</code>          查看本地库状态【不在暂存区的文件会显示红色；在暂存区的文件显示绿色】</li><li>3、<code>git add 文件名</code>           将文件添加到暂存区</li><li>4、<code>git rm --cached 文件名</code>          将暂存区的文件删除掉</li><li>5、<code>git commit -m &quot;提示信息&quot;  文件名</code>          将暂存区的文件提交到本地库</li><li>6、<code>git reflog</code>          查看精简版本信息</li><li>7、<code>git log</code>          查看版本详细信息</li><li>8、<code>git reset --hard 版本号</code>          版本穿梭</li></ul><p><strong><code>.git/HEAD</code>文件：说明当前是在哪个分支</strong></p><p><strong><code>.git/refs/heads/master</code>文件：记录着当前的版本号</strong></p><h2 id="2、分支操作"><a href="#2、分支操作" class="headerlink" title="2、分支操作"></a>2、分支操作</h2><ul><li>1、<code>git branch -v</code>          查看分支</li><li>2、<code>git branch 分支名</code>          创建分支</li><li>3、<code>git checkout 分支名</code>          切换分支</li><li>4、<code>git merge 分支名</code>          把指定的分支合并到当前分支上</li></ul><p><strong>冲突合并步骤：</strong></p><ul><li>1、首先手动打开发生冲突的文件，把所有不想要的部分统统删除</li><li>2、将发生冲突的文件修改完成后，添加到暂存区   ：<code>git add 文件名</code></li><li>3、执行提交（注意：此时使用git commit命令时不能带文件名）：<code>git commit -m &quot;注释&quot;</code></li><li><strong>合并冲突解决后，只会修改当前分支，待合并分支的内容仍然是合并之前的</strong></li></ul><h2 id="3、协作命令"><a href="#3、协作命令" class="headerlink" title="3、协作命令"></a>3、协作命令</h2><ul><li>1、<code>git remote -v</code>          查看当前所有远程地址别名</li><li>2、<code>git remote add 别名 远程地址</code>          给远程仓库起别名</li><li>3、<code>git push 别名 分支名</code>          将本地仓库的某个分支上的内容推送到远程仓库</li><li>4、<code>git pull 远程库地址别名 远程分支名</code>          将远程仓库的某个分支最新内容拉下来后与当前本地分支直接合并</li><li>5、<code>git clone 远程地址</code>          将远程仓库的内容克隆到本地<ul><li>clone 会做如下3件操作：<ul><li>1、拉取代码；</li><li>2、初始化本地仓库；</li><li>3、创建别名（注意：在clone自动给创建的别名统一叫：origin）</li></ul></li></ul></li></ul><p><strong>SSH免密登录Github远程仓库：</strong></p><ul><li><p>在终端输入以下命令，之后不用输入任何内容，遇到停顿就回车</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &quot;远程仓库的邮箱&quot;<br></code></pre></td></tr></table></figure></li><li><p>之后就会在用户家目录下生成<code>.ssh</code> 文件夹，在文件夹中就有公钥和私钥</p></li><li><p>将公钥复制到Github 中的SSH keys 中</p></li><li><p>在终端中输入以下命令，就可以验证是否连接成功了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh -T git@github.com<br></code></pre></td></tr></table></figure></li></ul><p><strong>相关pdf：</strong></p><div class="row">    <embed src="/pdf/git/尚硅谷技术课程系列之Git.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>conda基本使用</title>
    <link href="/2024/02/26/conda%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/02/26/conda%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="一、linux安装miniconda"><a href="#一、linux安装miniconda" class="headerlink" title="一、linux安装miniconda"></a>一、linux安装miniconda</h1><h2 id="1、首先在Anaconda官网下载合适的miniconda，下载完成后上传到linux【树莓派只支持4-9以及以前的】"><a href="#1、首先在Anaconda官网下载合适的miniconda，下载完成后上传到linux【树莓派只支持4-9以及以前的】" class="headerlink" title="1、首先在Anaconda官网下载合适的miniconda，下载完成后上传到linux【树莓派只支持4.9以及以前的】"></a>1、首先在<a href="https://docs.conda.io/en/latest/miniconda.html#linux-installers">Anaconda官网</a>下载合适的miniconda，下载完成后上传到linux【树莓派只支持4.9以及以前的】</h2><h2 id="2、输入命令-bash-Miniconda3-py39-4-12-0-Linux-x86-64-sh-按照顺序进行安装"><a href="#2、输入命令-bash-Miniconda3-py39-4-12-0-Linux-x86-64-sh-按照顺序进行安装" class="headerlink" title="2、输入命令 bash Miniconda3-py39_4.12.0-Linux-x86_64.sh 按照顺序进行安装"></a>2、输入命令 <code>bash Miniconda3-py39_4.12.0-Linux-x86_64.sh</code> 按照顺序进行安装</h2><p><strong>脚本安装步骤中，修改安装路径：<code>/opt/miniconda3/</code></strong></p><p><strong>遇到在询问是否将conda加入环境变量的时候选择no</strong></p><h2 id="3、安装完成后，修改权限-加入环境变量到-etc-profile"><a href="#3、安装完成后，修改权限-加入环境变量到-etc-profile" class="headerlink" title="3、安装完成后，修改权限,加入环境变量到&#x2F;etc&#x2F;profile"></a>3、安装完成后，修改权限,加入环境变量到&#x2F;etc&#x2F;profile</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo chmod ugo+w -R /opt/miniconda3/<br>vim /etc/profile<br><span class="hljs-meta prompt_"># </span><span class="language-bash">最后添加</span><br>PATH=/opt/miniconda3/bin:$PATH<br><br></code></pre></td></tr></table></figure><h2 id="4、安装完成后，输入conda-version验证是否安装成功"><a href="#4、安装完成后，输入conda-version验证是否安装成功" class="headerlink" title="4、安装完成后，输入conda --version验证是否安装成功"></a>4、安装完成后，输入<code>conda --version</code>验证是否安装成功</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">[localhost]~ conda --version<br>conda 4.12.0<br></code></pre></td></tr></table></figure><h2 id="5、设置默认不进入conda环境"><a href="#5、设置默认不进入conda环境" class="headerlink" title="5、设置默认不进入conda环境"></a>5、设置默认不进入conda环境</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">默认不进入conda环境</span><br>conda config --set auto_activate_base false<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">退出当前conda环境</span><br>conda deactivate<br></code></pre></td></tr></table></figure><p><strong>安装mamba拓展：<code>conda install -c conda-forge mamba</code>   【命令中可以使用mamba代替conda】</strong></p><h1 id="二、conda基本使用"><a href="#二、conda基本使用" class="headerlink" title="二、conda基本使用"></a>二、conda基本使用</h1><h2 id="1、创建虚拟环境"><a href="#1、创建虚拟环境" class="headerlink" title="1、创建虚拟环境"></a>1、创建虚拟环境</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">conda create --name 虚拟环境名 python版本</span><br>conda create --name py36 python=3.6<br></code></pre></td></tr></table></figure><h2 id="2、安装包"><a href="#2、安装包" class="headerlink" title="2、安装包"></a>2、安装包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda/pip/pip3 install 包名<br><span class="hljs-meta prompt_"># </span><span class="language-bash">也可以指定版本安装</span><br>conda install 包名=版本<br></code></pre></td></tr></table></figure><h2 id="3、删除包"><a href="#3、删除包" class="headerlink" title="3、删除包"></a>3、删除包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda uninstall 包名<br></code></pre></td></tr></table></figure><h2 id="4、切换虚拟环境"><a href="#4、切换虚拟环境" class="headerlink" title="4、切换虚拟环境"></a>4、切换虚拟环境</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda activate 环境名<br></code></pre></td></tr></table></figure><h2 id="5、删除虚拟环境"><a href="#5、删除虚拟环境" class="headerlink" title="5、删除虚拟环境"></a>5、删除虚拟环境</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda env remove -n 环境名<br></code></pre></td></tr></table></figure><h2 id="6、其他命令"><a href="#6、其他命令" class="headerlink" title="6、其他命令"></a>6、其他命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看所有环境</span><br>conda env list<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看活跃的环境【带*号的就是当前环境】</span><br>conda info --envs<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看当前环境下安装的包和版本</span><br>conda list<br></code></pre></td></tr></table></figure><p><strong>参考：<a href="https://blog.csdn.net/SARACH_WONG/article/details/89328307">https://blog.csdn.net/SARACH_WONG/article/details/89328307</a></strong></p><h1 id="三、安装配置jupyter"><a href="#三、安装配置jupyter" class="headerlink" title="三、安装配置jupyter"></a>三、安装配置jupyter</h1><h2 id="1、进入对应的conda环境"><a href="#1、进入对应的conda环境" class="headerlink" title="1、进入对应的conda环境"></a>1、进入对应的conda环境</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">conda activate py36<br></code></pre></td></tr></table></figure><h2 id="2、pip安装jupyter-lab"><a href="#2、pip安装jupyter-lab" class="headerlink" title="2、pip安装jupyter lab"></a>2、pip安装jupyter lab</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install jupyterlab<br></code></pre></td></tr></table></figure><h2 id="3、配置远程登录和密码"><a href="#3、配置远程登录和密码" class="headerlink" title="3、配置远程登录和密码"></a>3、配置远程登录和密码</h2><p>首先进入python环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3<br></code></pre></td></tr></table></figure><p>执行以下命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> jupyter_server.auth <span class="hljs-keyword">import</span> passwd<br><span class="hljs-meta">&gt;&gt;&gt; </span>passwd()<br>Enter password:<br>Verify password:<br><span class="hljs-string">&#x27;sha1:2ba1cfd96ec3:abedd88f3701f0d6f80f2fa6142bc2a2b1dc461b&#x27;</span><br><br></code></pre></td></tr></table></figure><p>退出python环境，使用jupyterlab生成配置文件,可以看到生成文件<code>~/.jupyter/jupyter_lab_config.py</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">jupyter lab --generate-config<br></code></pre></td></tr></table></figure><p>编辑文件，修改一下配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">将ip设置为*，意味允许任何IP访问</span><br>c.ServerApp.ip = &#x27;*&#x27;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">这里的密码就是上边我们生成的那一串</span><br>c.NotebookApp.password = &#x27;sha1:2ba1cfd96ec3:abedd88f3701f0d6f80f2fa6142bc2a2b1dc461b&#x27;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">服务器上并没有浏览器可以供Jupyter打开</span><br>c.ServerApp.open_browser = False<br><span class="hljs-meta prompt_"># </span><span class="language-bash">监听端口设置为8888或其他自己喜欢的端口</span><br>c.ServerApp.port = 8888<br><span class="hljs-meta prompt_"># </span><span class="language-bash">允许远程访问</span><br>c.Server.allow_remote_access = True<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">工作目录</span><br>c.ServerApp.root_dir = &quot;/home/taoao/Desktop&quot;<br><br></code></pre></td></tr></table></figure><h2 id="4、阿里云添加对应的端口号"><a href="#4、阿里云添加对应的端口号" class="headerlink" title="4、阿里云添加对应的端口号"></a>4、阿里云添加对应的端口号</h2><h2 id="5、配置成功，可以使用jupyter-lab或jupyter-lab启动了"><a href="#5、配置成功，可以使用jupyter-lab或jupyter-lab启动了" class="headerlink" title="5、配置成功，可以使用jupyter lab或jupyter-lab启动了"></a>5、配置成功，可以使用<code>jupyter lab</code>或<code>jupyter-lab</code>启动了</h2><p>参考：<a href="https://blog.csdn.net/qq_29427541/article/details/123390390">https://blog.csdn.net/qq_29427541/article/details/123390390</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>conda</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Django笔记</title>
    <link href="/2024/02/26/Django%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/02/26/Django%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p><em><strong><a href="https://www.bilibili.com/video/BV1vK4y1o7jH/?spm&vd_source=e710048bca758289bcc6b7e0e07eec72">视频连接</a></strong></em></p><p><strong>安装Django</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"># 安装Django<br>pip3 install django==版本号<br><br># 检查是否安装成功<br>pip3 <span class="hljs-keyword">freeze</span> | grep -i <span class="hljs-string">&#x27;Django&#x27;</span><br></code></pre></td></tr></table></figure><p><strong>其他笔记：<a href="https://blog.csdn.net/weixin_45718715/article/details/118819640?spm=1001.2014.3001.5501">https://blog.csdn.net/weixin_45718715/article/details/118819640?spm=1001.2014.3001.5501</a></strong></p><h1 id="一、Django项目"><a href="#一、Django项目" class="headerlink" title="一、Django项目"></a>一、Django项目</h1><h2 id="1、创建、启动项目"><a href="#1、创建、启动项目" class="headerlink" title="1、创建、启动项目"></a>1、创建、启动项目</h2><h3 id="1-1、创建项目"><a href="#1-1、创建项目" class="headerlink" title="1.1、创建项目"></a>1.1、创建项目</h3><ul><li><p>成功安装Django后，终端会有 <code>django-admin</code> 命令</p></li><li><p>执行 <code>django-admin startproject 项目名</code>  即可创建出对应项目文件夹</p><p><img src="/img/django_img/%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE.jpg" alt="创建项目"></p></li></ul><h3 id="1-2、启动服务【测试开发阶段】"><a href="#1-2、启动服务【测试开发阶段】" class="headerlink" title="1.2、启动服务【测试开发阶段】"></a>1.2、启动服务【测试开发阶段】</h3><ol><li>终端cd进入到项目文件夹</li></ol><p><img src="/img/django_img/%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE_1.jpg" alt="启动项目"></p><ol start="2"><li>进入到项目文件夹后，执行 <code>python3 manage.py runserver</code> 启动django服务【注：该启动方式下，Django在前台启动服务，默认监听8000端口】</li></ol><p><img src="/img/django_img/%E5%90%AF%E5%8A%A8Django_2.jpg" alt="启动项目2"></p><ol start="3"><li><p>浏览器访问 <a href="http://127.0.0.1:8000/">http://127.0.0.1:8000</a> 可以看到django的启动页面</p><p><img src="/img/django_img/%E9%A1%B5%E9%9D%A2.jpg" alt="初始化页面"></p></li></ol><p>注：如果想更换端口，则可以用 <code>python3 manage.py runserver 端口号</code></p><h3 id="1-3、关闭服务"><a href="#1-3、关闭服务" class="headerlink" title="1.3、关闭服务"></a>1.3、关闭服务</h3><ul><li>方式1：在runserver启动终端下<ul><li>执行 <code>Ctrl+c</code> 可以关闭Django服务</li></ul></li><li>方式2:在其他终端下<ul><li>执行 <code>lsof -i:8000</code> 查询出Django的进程id</li><li>执行 <code>kill -9 Django进程id</code></li></ul></li></ul><h2 id="2、项目的基础结构"><a href="#2、项目的基础结构" class="headerlink" title="2、项目的基础结构"></a>2、项目的基础结构</h2><h3 id="2-1、manage-py"><a href="#2-1、manage-py" class="headerlink" title="2.1、manage.py"></a>2.1、manage.py</h3><p><strong>manage.py 包含项目管理的子命令，如：</strong></p><ul><li><code>python3 manage.py runserver</code> 启动服务</li><li><code>python3 manage.py startapp</code>       创建应用</li><li><code>python3 manage.py migrate</code>         数据库迁移</li></ul><p><strong>直接执行  <code>python3 manage.py </code>  可以列出所有的Django子命令</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs shell">(py36) taoaodeMacBook-Pro:mysite1 taoao$ python3 manage.py<br><br>Type &#x27;manage.py help &lt;subcommand&gt;&#x27; for help on a specific subcommand.<br><br>Available subcommands:<br><br>[auth]<br>    changepassword<br>    createsuperuser<br><br>[contenttypes]<br>    remove_stale_contenttypes<br><br>[django]<br>    check<br>    compilemessages<br>    createcachetable<br>    dbshell<br>    diffsettings<br>    dumpdata<br>    flush<br>    inspectdb<br>    loaddata<br>    makemessages<br>    makemigrations<br>    migrate<br>    sendtestemail<br>    shell<br>    showmigrations<br>    sqlflush<br>    sqlmigrate<br>    sqlsequencereset<br>    squashmigrations<br>    startapp<br>    startproject<br>    test<br>    testserver<br><br>[sessions]<br>    clearsessions<br><br>[staticfiles]<br>    collectstatic<br>    findstatic<br>    runserver<br>(py36) taoaodeMacBook-Pro:mysite1 taoao$ <br></code></pre></td></tr></table></figure><h3 id="2-2、项目同名文件夹-mysite1-mysite1"><a href="#2-2、项目同名文件夹-mysite1-mysite1" class="headerlink" title="2.2、项目同名文件夹 - mysite1&#x2F;mysite1"></a>2.2、项目同名文件夹 - mysite1&#x2F;mysite1</h3><ul><li>_<em>init_</em>.py：Python包的初始化文件</li><li>wsgi.py：     Web服务网关的配置文件  -  Django正式启动时，需要用到</li><li>urls.py：      项目的主路由配置  -  http请求进入Django时，优先调用该文件</li><li>settings.py：项目的配置文件  -  包含项目启动时需要的配置</li></ul><h3 id="2-3、settings-py配置文件"><a href="#2-3、settings-py配置文件" class="headerlink" title="2.3、settings.py配置文件"></a>2.3、settings.py配置文件</h3><ul><li><p>settings.py  包含了Django项目启动的所有配置项</p></li><li><p>配置项分为 <strong>公有配置</strong> 和 <strong>自定义配置</strong></p></li><li><p>配置项格式例： BASE_DIR&#x3D;’xxxx’    【名字必须是大写】</p></li><li><p>共有配置  -  Django官方提供的基础配置</p></li></ul><p><a href="https://docs.djangoproject.com/zh-hans/3.2/ref/settings/">https://docs.djangoproject.com/zh-hans/3.2/ref/settings/</a></p><h4 id="1、公有配置"><a href="#1、公有配置" class="headerlink" title="1、公有配置"></a>1、公有配置</h4><ul><li><p><strong>BASE_DIR</strong></p><ul><li>用于绑定当前项目的绝对路径（动态计算出来的），所有文件夹都可以依赖此路径</li></ul></li><li><p><strong>DEBUG</strong></p><ul><li>用于配置Django项目的启动模式，取值：<ul><li>True：表示开发环境中使用开发调试模式（用于开发中）</li><li>False：表示当前项目运行在生产环境中</li></ul></li></ul></li><li><p><strong>ALLOWED_HOSTS</strong></p><ul><li><p>设置允许访问到本项目的host头值</p><ul><li>[]  空列表，表示只有请求头中host为 127.0.0.1、localhost能访问本项目。-DEBUG &#x3D; True 时有效</li><li>[‘*’]  表示任何请求头的host都能访问到当前项目</li><li>[‘192.168.1.3’, ‘127.0.0.1’]  表示只有当前两个host头的值能访问当前项目</li></ul><p>示例：如果要在局域网其他主机也能访问此主机的Django服务，启动方式如下</p><ul><li><code>python3 manage.py runserver 0.0.0.0:端口号</code></li><li>指定网络设备，如果内网环境下其他主机想正常访问该站点，需加 <code>ALLOWED_HOSTS=[&#39;内网ip&#39;]</code></li></ul></li></ul></li><li><p><strong>INSTALLED_APPS</strong></p><ul><li>指定当前项目中安装的应用列表</li></ul></li><li><p><strong>MIDDLEWARE</strong></p><ul><li>用于注册中间件</li></ul></li><li><p><strong>TEMPLATES</strong></p><ul><li>用于指定模版的配置信息</li></ul></li><li><p><strong>DATBASES</strong></p><ul><li>用于指定数据库的配置信息</li></ul></li><li><p><strong>LANGUAGE_CODE</strong></p><ul><li>用于指定语言配置<ul><li>英文：”en-us”</li><li>中文：”zh-Hans”</li></ul></li></ul></li><li><p><strong>TIME_ZONE</strong></p><ul><li>用于指定当前服务器端时区<ul><li>世界标准时间：”UTC”</li><li>中国时区：”Asia&#x2F;Shanghai”</li></ul></li></ul></li><li><p><strong>ROOT_URLCONF</strong></p><ul><li>用于配置主url配置’ mystie1.urls’</li></ul></li></ul><h4 id="2、自定义配置"><a href="#2、自定义配置" class="headerlink" title="2、自定义配置"></a>2、自定义配置</h4><ul><li>settings.py 中也可以添加自定义的配置</li><li>配置建议：名字尽量个性化  -  以防覆盖掉公有配置</li></ul><p>settings.py 中的所有配置项，都可以按需在代码中引入</p><p>​引入方式： <code>from django.conf import settings</code></p><p><strong>settings.py文件内容:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Django settings for mysite1 project.</span><br><span class="hljs-string"></span><br><span class="hljs-string">Generated by &#x27;django-admin startproject&#x27; using Django 3.2.16.</span><br><span class="hljs-string"></span><br><span class="hljs-string">For more information on this file, see</span><br><span class="hljs-string">https://docs.djangoproject.com/zh-hans/3.2/topics/settings/</span><br><span class="hljs-string"></span><br><span class="hljs-string">For the full list of settings and their values, see</span><br><span class="hljs-string">https://docs.djangoproject.com/zh-hans/3.2/ref/settings/</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-keyword">from</span> pathlib <span class="hljs-keyword">import</span> Path<br><br><span class="hljs-comment"># Build paths inside the project like this: BASE_DIR / &#x27;subdir&#x27;.</span><br>BASE_DIR = Path(__file__).resolve().parent.parent  <span class="hljs-comment"># 【当前项目的绝对路径】</span><br><br><span class="hljs-comment"># Quick-start development settings - unsuitable for production</span><br><span class="hljs-comment"># See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/</span><br><br><span class="hljs-comment"># SECURITY WARNING: keep the secret key used in production secret!</span><br>SECRET_KEY = <span class="hljs-string">&#x27;django-insecure-a1$i)bimiqb)3(0sob_i28d7zih_w2or0%pr102+902ki1q1i4&#x27;</span><br><br><span class="hljs-comment"># SECURITY WARNING: don&#x27;t run with debug turned on in production!</span><br>DEBUG = <span class="hljs-literal">True</span><br><span class="hljs-comment"># DE<span class="hljs-doctag">BUG:</span> 启动模式</span><br><span class="hljs-comment"># 1、True  -  调试模式</span><br><span class="hljs-comment"># 1.1、自动检测代码改动后，立刻重启服务。【修改的代码立刻生效】</span><br><span class="hljs-comment"># 1.2、代码报错时，浏览器会显示详细报错信息</span><br><span class="hljs-comment"># 2、False  -  正式启动模式 / 上线模式</span><br><br><span class="hljs-comment"># 请求头中的 Host头   例子：ALLOWED_HOSTS = [&#x27;127.0.0.1&#x27;]</span><br>ALLOWED_HOSTS = []<br><br><span class="hljs-comment"># Application definition</span><br><br><span class="hljs-comment"># 配置Django的应用</span><br>INSTALLED_APPS = [<br>    <span class="hljs-string">&#x27;django.contrib.admin&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.auth&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.contenttypes&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.sessions&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.messages&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.staticfiles&#x27;</span>,<br>]<br><br><span class="hljs-comment"># 中间件</span><br>MIDDLEWARE = [<br>    <span class="hljs-string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,<br>    <span class="hljs-string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,<br>]<br><br><span class="hljs-comment"># 表明Django的主路由文件位置</span><br>ROOT_URLCONF = <span class="hljs-string">&#x27;mysite1.urls&#x27;</span><br><br><span class="hljs-comment"># 模版</span><br>TEMPLATES = [<br>    &#123;<br>        <span class="hljs-string">&#x27;BACKEND&#x27;</span>: <span class="hljs-string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,<br>        <span class="hljs-string">&#x27;DIRS&#x27;</span>: [],<br>        <span class="hljs-string">&#x27;APP_DIRS&#x27;</span>: <span class="hljs-literal">True</span>,<br>        <span class="hljs-string">&#x27;OPTIONS&#x27;</span>: &#123;<br>            <span class="hljs-string">&#x27;context_processors&#x27;</span>: [<br>                <span class="hljs-string">&#x27;django.template.context_processors.debug&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.template.context_processors.request&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.contrib.auth.context_processors.auth&#x27;</span>,<br>                <span class="hljs-string">&#x27;django.contrib.messages.context_processors.messages&#x27;</span>,<br>            ],<br>        &#125;,<br>    &#125;,<br>]<br><br><span class="hljs-comment"># 网关</span><br>WSGI_APPLICATION = <span class="hljs-string">&#x27;mysite1.wsgi.application&#x27;</span><br><br><span class="hljs-comment"># Database</span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/3.2/ref/settings/#databases</span><br><span class="hljs-comment"># 数据库</span><br>DATABASES = &#123;<br>    <span class="hljs-string">&#x27;default&#x27;</span>: &#123;<br>        <span class="hljs-string">&#x27;ENGINE&#x27;</span>: <span class="hljs-string">&#x27;django.db.backends.sqlite3&#x27;</span>,<br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: BASE_DIR / <span class="hljs-string">&#x27;db.sqlite3&#x27;</span>,<br>    &#125;<br>&#125;<br><br><span class="hljs-comment"># Password validation</span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators</span><br><br>AUTH_PASSWORD_VALIDATORS = [<br>    &#123;<br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;django.contrib.auth.password_validation.UserAttributeSimilarityValidator&#x27;</span>,<br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;django.contrib.auth.password_validation.MinimumLengthValidator&#x27;</span>,<br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;django.contrib.auth.password_validation.CommonPasswordValidator&#x27;</span>,<br>    &#125;,<br>    &#123;<br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;django.contrib.auth.password_validation.NumericPasswordValidator&#x27;</span>,<br>    &#125;,<br>]<br><br><span class="hljs-comment"># Internationalization</span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/3.2/topics/i18n/</span><br><br><span class="hljs-comment"># 语言信息配置    中文：&#x27;zh-Hans&#x27;</span><br><span class="hljs-comment"># LANGUAGE_CODE = &#x27;en-us&#x27;</span><br>LANGUAGE_CODE = <span class="hljs-string">&#x27;zh-Hans&#x27;</span><br><br><span class="hljs-comment"># 时区  东八区：&#x27;Asia/Shanghai&#x27;</span><br>TIME_ZONE = <span class="hljs-string">&#x27;UTC&#x27;</span><br><br>USE_I18N = <span class="hljs-literal">True</span><br><br>USE_L10N = <span class="hljs-literal">True</span><br><br>USE_TZ = <span class="hljs-literal">True</span><br><br><span class="hljs-comment"># Static files (CSS, JavaScript, Images)</span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/3.2/howto/static-files/</span><br><br>STATIC_URL = <span class="hljs-string">&#x27;/static/&#x27;</span><br><br><span class="hljs-comment"># Default primary key field type</span><br><span class="hljs-comment"># https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field</span><br><br>DEFAULT_AUTO_FIELD = <span class="hljs-string">&#x27;django.db.models.BigAutoField&#x27;</span><br><br></code></pre></td></tr></table></figure><h2 id="3、URL和视图函数"><a href="#3、URL和视图函数" class="headerlink" title="3、URL和视图函数"></a>3、URL和视图函数</h2><h3 id="3-1、URL"><a href="#3-1、URL" class="headerlink" title="3.1、URL"></a>3.1、URL</h3><h4 id="URL结构"><a href="#URL结构" class="headerlink" title="URL结构"></a>URL结构</h4><ul><li><p>定义  -  即统一资源定位符  Uniform Resource Locator</p></li><li><p>作用  -  用来表示互联网上某个资源的地址</p></li><li><p>URL的一般语法格式为（注：[] 代表其中的内容可省略）</p><ul><li>protocol:&#x2F;&#x2F;hostname[:port]&#x2F; path [?query][#fragment]</li><li>协议:&#x2F;&#x2F;主机名[:端口] &#x2F; 路由 [?查询字符串][#锚点]</li><li><a href="https://docs.djangoproject.com/zh-hans/3.2/">https://docs.djangoproject.com/zh-hans/3.2/</a></li></ul></li><li><p><strong>protocol（协议）</strong> </p><ul><li>http 通过HTTP访问该资源。格式 http:&#x2F;&#x2F;</li><li>https 通过安全的HTTPS访问该资源。格式 https:&#x2F;&#x2F;</li><li>file 资源时本地计算机伤的文件。格式 file:&#x2F;&#x2F;&#x2F;</li></ul></li><li><p><strong>hostname（主机名）</strong></p><ul><li>是指存放资源的服务器的域名系统（DNS）主机名、域名 或 IP地址</li></ul></li><li><p><strong>port（端口号）</strong></p><ul><li>整数，可选，省略时使用方案的默认端口</li><li>各种传输协议都有默认的端口号，如http的默认端口为80</li></ul></li><li><p><strong>path（路由地址）</strong></p><ul><li>由零或多个”&#x2F;“ 符号隔开的字符串，一般用来表示主机上的一个目录或文件地址。</li><li>路由地址决定了服务器端如何处理这个请求。</li></ul></li><li><p><strong>query（查询）</strong></p><ul><li>可选，以? 开头，用于给动态网页传递参数。可有多个参数，，用&amp; 符号隔开，每个参数的名和值用&#x3D; 符号隔开</li></ul></li><li><p><strong>fragment（锚点）</strong></p><ul><li>字符串，用于指定网络资源中的片段。例如一个网页中有多个名次解释，可使用fragment直接定位到某一名词解释</li></ul></li></ul><p><strong>urls.py结构：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># file：&lt;项目同名文件夹下&gt;/urls.py</span><br>  <span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> admin<br>  <span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path<br>  <span class="hljs-keyword">from</span> . <span class="hljs-keyword">import</span> views<span class="hljs-comment"># 视图函数文件路径</span><br><br>  <span class="hljs-comment"># 此处配置主路由 </span><br>  urlpatterns=[<br>    path(<span class="hljs-string">&#x27;admin/&#x27;</span>, admin.site.urls),<br>    <span class="hljs-comment"># http://127.0.0.1:8000/path路径</span><br>    path(<span class="hljs-string">&#x27;path路径&#x27;</span>,视图函数文件名.视图函数)<br>    ... <br>  ]<br></code></pre></td></tr></table></figure><h3 id="3-2、Django处理URL请求流程"><a href="#3-2、Django处理URL请求流程" class="headerlink" title="3.2、Django处理URL请求流程"></a>3.2、Django处理URL请求流程</h3><ul><li><p>浏览器 地址栏  -&gt; <a href="http://127.0.0.1:8000/page/2003/">http://127.0.0.1:8000/page/2003/</a> </p><p>1、Django 从settings.py配置文件中根据<strong>ROOT_URLCONF</strong>找到主路由文件【urls.py】；默认情况下，该文件在 项目同名目录下的urls；例如 mysite1&#x2F;mysite1&#x2F;urls.py</p><p>2、Django加载主路由文件中的urlpatterns变量[包含很多路由的数组]</p><p>3、依次匹配urlpatterns 中的URL，匹配到第一个合适的中断后续的匹配</p><p>4、匹配成功  -  调用对应的视图函数处理请求，返回响应</p><p>5、匹配失败  -  返回404响应</p></li></ul><h3 id="3-3、视图函数"><a href="#3-3、视图函数" class="headerlink" title="3.3、视图函数"></a>3.3、视图函数</h3><ul><li><p>视图函数是用于接收一个浏览器请求（HttpRequest对象）并通过HttpResponse对象返回响应的函数。</p></li><li><p>此函数可以接收浏览器请求并根据业务逻辑返回相应的响应内容给浏览器</p></li><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">xxx_view</span>(<span class="hljs-params">request [,其他参数...]</span>):<br>  <span class="hljs-keyword">return</span> HttpResponse对象<br></code></pre></td></tr></table></figure></li><li><p>样例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># file: &lt;项目同名文件夹下&gt;/views.py</span><br><span class="hljs-keyword">from</span> django.http <span class="hljs-keyword">import</span> HttpResponse<br>  <br>  <span class="hljs-keyword">def</span> <span class="hljs-title function_">page1_view</span>(<span class="hljs-params">request</span>):<br>    html=<span class="hljs-string">&quot;&lt;h1&gt;这是第一个页面&lt;/h1&gt;&quot;</span><br>    <span class="hljs-keyword">return</span> HttpResponse(html)<br></code></pre></td></tr></table></figure></li></ul><h2 id="4、路由配置"><a href="#4、路由配置" class="headerlink" title="4、路由配置"></a>4、路由配置</h2><h3 id="4-1、path"><a href="#4-1、path" class="headerlink" title="4.1、path"></a>4.1、path</h3><ul><li><p>path()函数</p><ul><li><p>导入  -  <code>from django.urls import path</code></p></li><li><p>语法  -  <code>path(route路由,views视图函数,name=None)</code></p></li><li><p>参数：</p><ul><li>1、route：字符串类型，匹配的请求路径</li><li>2、views：指定路径所对应的视图处理函数的名称  【函数名。注意：不能加括号】</li><li>3、name：为地址起别名，在模版中地址反向解析时使用</li></ul></li></ul></li><li><p>path转换器</p><ul><li>语法：&lt;转换器类型：自定义名&gt;</li><li>作用：若转换器类型匹配到对应类型的数据，则将数据按照关键字传参的方式传递给视图函数</li><li>例子：<code>path(&#39;page/\&lt;int:page&gt;&#39;,views.xxx)</code></li><li><strong>此时在urls.py中，xxx函数不光要传request参数。还要传转换器类型后面的自定义名</strong></li></ul></li></ul><p><img src="/img/django_img/path.jpg" alt="path转换器类型"></p><h3 id="4-2、re-path"><a href="#4-2、re-path" class="headerlink" title="4.2、re_path()"></a>4.2、re_path()</h3><ul><li>re_path()函数<ul><li>在url的匹配过程中可以使用正则表达式进行精确匹配</li><li>语法：<ul><li><code>re_path(reg，view，na me=xxx)</code></li><li>正则表达式为命名分组模式（?P&lt;name&gt;pattern）；匹配提取参数后用关键字传参方式传递给视图函数</li><li>正则命名分组：（?P&lt;name&gt;pattern）<ul><li>（）代表是分组</li><li>（?P&lt;参数名&gt;正则）</li></ul></li></ul></li></ul></li></ul><h2 id="5、HTTP协议的请求和响应"><a href="#5、HTTP协议的请求和响应" class="headerlink" title="5、HTTP协议的请求和响应"></a>5、HTTP协议的请求和响应</h2><h3 id="5-1、定义"><a href="#5-1、定义" class="headerlink" title="5.1、定义"></a>5.1、定义</h3><ul><li>请求是指浏览器端通过HTTP协议发送给服务器端的数据</li><li>响应是指服务器端接收到请求后做相应的处理后再回复给浏览器端的数据</li></ul><h3 id="5-2、请求"><a href="#5-2、请求" class="headerlink" title="5.2、请求"></a>5.2、请求</h3><p><img src="/img/django_img/%E8%AF%B7%E6%B1%82.jpg" alt="请求"></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ada">起始行<br><br>请求头headers<br><br>请求体<span class="hljs-keyword">body</span><br></code></pre></td></tr></table></figure><h4 id="5-2-1、请求中的方法"><a href="#5-2-1、请求中的方法" class="headerlink" title="5.2.1、请求中的方法"></a>5.2.1、请求中的方法</h4><ul><li>根据HTTP标准，HTTP请求可以使用多种请求方法</li><li>HTTP1.0定义了三种请求方法：get、post和head方法（get、post最常用）</li><li>HTTP1.1新增了五种请求方法：options、put、delete、trace和connect方法</li></ul><p><img src="/img/django_img/%E8%AF%B7%E6%B1%82%E7%9A%84%E6%96%B9%E6%B3%95.jpg" alt="请求中的方法"></p><p><img src="/img/django_img/%E8%AF%B7%E6%B1%82%E7%9A%84%E6%96%B9%E6%B3%952.jpg" alt="请求中的方法"></p><p>【 get请求：跟服务端要数据</p><p>head请求：跟get类似，但是只会拿到响应头</p><p>post请求：向服务端提交数据 </p><p>put请求：更新数据</p><p>delete请求：删除数据</p><p>connect请求：代理</p><p>options请求、trace请求：测试服务器】</p><h4 id="5-2-2、Django中的请求"><a href="#5-2-2、Django中的请求" class="headerlink" title="5.2.2、Django中的请求"></a>5.2.2、Django中的请求</h4><ul><li>请求在Django中就是 视图函数中的第一个参数，即HttpRequest对象</li><li>Django接收到http协议的请求后，会根据请求数据报文创建HttpRequest对象</li><li>HttpRequest对象 通过属性 描述了 请求的 所有相关信息</li><li>HttpRequest对象的属性和方法：<ul><li>path_info：URL字符串调用：【例如：<code>request.path_info</code>,其他方法类似】</li><li>method：字符串，表示HTTP请求的方法，常用值：‘GET’、‘POST’</li><li>GET：QueryDict查询字典的对象，包含get请求方式的所有数据</li><li>POST：QueryDict查询字典的对象，包含post请求方式的所有数据</li><li>FILES：类似于字典的对象，包含所有的上传文件信息</li><li>COKKIES：Python字典，包含所有的cookie，键和值都是字符串</li><li>session：类似于字典的对象，表示当前的会话</li><li>body：字符串，请求体的内容（POST或PUT）</li><li>scheme：请求协议（‘http’&#x2F;‘https’）</li><li>request.get_full_path()：请求的完整路径</li><li>request.META：请求中的元数据（消息头、请求头）<ul><li>request.META[‘REMOTE_ADDR’]：客户端IP地址</li></ul></li></ul></li></ul><h3 id="5-3、响应"><a href="#5-3、响应" class="headerlink" title="5.3、响应"></a>5.3、响应</h3><p><img src="/img/django_img/%E5%93%8D%E5%BA%94.jpg" alt="响应"></p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ada">起始行<br><br>响应头headers<br><br>响应体<span class="hljs-keyword">body</span><br></code></pre></td></tr></table></figure><h4 id="5-3-1、响应状态码"><a href="#5-3-1、响应状态码" class="headerlink" title="5.3.1、响应状态码"></a>5.3.1、响应状态码</h4><p>常见的HTTP状态码  HTTP Status Code</p><pre><code class="hljs">- 200  -  请求成功- 301  -  永久重定向 - 资源（网页等）被永久转移到其它URL- 302  -  临时重定向- 404  -  请求的资源（网页等）不存在- 500  -  内部服务器错误</code></pre><p><img src="/img/django_img/%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81.jpg" alt="响应状态码"></p><h4 id="5-3-2、Django中的响应对象"><a href="#5-3-2、Django中的响应对象" class="headerlink" title="5.3.2、Django中的响应对象"></a>5.3.2、Django中的响应对象</h4><p>构造函数格式：<code>HttpResponse(conntent=响应体,content_type=响应体数据类型,status=状态码)</code></p><p>作用：向客户端浏览器返回响应，同时携带响应体内容</p><ul><li><p>参数</p><ul><li>content：表示返回的内容</li><li>content_type：指定返回数据的MIME类型（默认是“text&#x2F;html”）。浏览器会根据这个属性来显示数据。如果是text&#x2F;html，那么就会解析这个字符串；如果是text&#x2F;plain，那么就会显示一个纯文本</li><li>status：返回HTTP响应的状态码（默认是200）</li></ul></li><li><p>常见的Content-Type如下：</p><ul><li>‘text&#x2F;html’（默认的，html文件）</li><li>‘text&#x2F;plain’（纯文本）</li><li>‘text&#x2F;css’（css文件）</li><li>‘text&#x2F;javascript’（js文件）</li><li>‘multipart&#x2F;form-data’（文件提交）</li><li>‘application&#x2F;json’（json传输）</li><li>‘application&#x2F;xml’（xml文件）</li></ul></li></ul><p><img src="/img/django_img/HttpResponse%E5%AD%90%E7%B1%BB.jpg" alt="HttpResponse子类"></p><h2 id="6、GET请求和POST请求"><a href="#6、GET请求和POST请求" class="headerlink" title="6、GET请求和POST请求"></a>6、GET请求和POST请求</h2><ul><li><strong>无论是GET还是POST，统一都由视图函数接收请求，通过判断request.method区分具体的请求动作</strong></li></ul><h3 id="6-1、GET处理"><a href="#6-1、GET处理" class="headerlink" title="6.1、GET处理"></a>6.1、GET处理</h3><ul><li><p>GET请求动作，一般用于向服务器获取数据</p></li><li><p>能够产生GET请求的场景：</p><ul><li>浏览器地址栏中输入URL，回车后</li><li>&lt;a href&#x3D;”地址?参数&#x3D;值&amp;参数&#x3D;值”&gt;</li><li>form表单中的method为get</li></ul></li><li><p>GET请求方式中，如果有数据需要传递给服务器，通常会用查询字符串(QueryString)传递</p><ul><li>URL格式：xxx?参数名1&#x3D;值1&amp;参数名2&#x3D;值2…如：<a href="http://127.0.0.1/page1?a=100&b=200">http://127.0.0.1/page1?a=100&amp;b=200</a></li></ul></li><li><p>服务器端接收参数：获取客户端请求GET请求提交的数据</p><ul><li>方法示例：</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">request.GET[<span class="hljs-string">&#x27;参数名&#x27;</span>]<span class="hljs-comment"># 获取参数对应的值</span><br>request.GET.get(<span class="hljs-string">&#x27;参数名&#x27;</span>,<span class="hljs-string">&#x27;默认值&#x27;</span>)<span class="hljs-comment"># 获取参数对应的值，如果没有，可以设个默认值</span><br>request.GET.getlist(<span class="hljs-string">&#x27;参数名&#x27;</span>)<span class="hljs-comment"># 如果参数是多个值，必须使用getlist()</span><br></code></pre></td></tr></table></figure><h3 id="6-2、POST处理"><a href="#6-2、POST处理" class="headerlink" title="6.2、POST处理"></a>6.2、POST处理</h3><ul><li>POST请求动作，一般用于向服务器提交大量&#x2F;隐私数据</li><li>客户端通过表单等POST请求将数据传递给服务器端，如：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&#x27;post&#x27;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&#x27;/login&#x27;</span>&gt;</span><br>  姓名:<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;text&#x27;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&#x27;username&#x27;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;submit&#x27;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;登录&#x27;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><p>服务器端接收参数：通过request.method来判断是否为POST请求</p></li><li><p>使用POST方式接收客户端数据  与GET完全一致</p></li><li><p>取消csrf验证，否则Django将会拒绝客户端发来的POST请求，报403响应</p><ul><li><p>– 禁止掉settings.py中的MIDDLEWARE中的CsrfViewsMiddleWare的中间件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">MIDDLEWARE = [<br>  ...<br>  <span class="hljs-comment"># &#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,</span><br>  ...<br>]<br></code></pre></td></tr></table></figure></li></ul></li></ul><h2 id="7、Django的设计模式及模版层"><a href="#7、Django的设计模式及模版层" class="headerlink" title="7、Django的设计模式及模版层"></a>7、Django的设计模式及模版层</h2><h3 id="7-1、MVC和MTV"><a href="#7-1、MVC和MTV" class="headerlink" title="7.1、MVC和MTV"></a>7.1、MVC和MTV</h3><h4 id="7-1-1、传统的MVC"><a href="#7-1-1、传统的MVC" class="headerlink" title="7.1.1、传统的MVC"></a>7.1.1、传统的MVC</h4><p><strong>MCV代表Model-View-Controller（模型-视图-控制层）模式</strong></p><ul><li>M 模型层（Model），主要用于对数据库层的封装</li><li>V 视图层（View），用于向用户展示结果</li><li>C 控制（Controller），用于处理请求、获取数据、返回结果</li></ul><p><strong>作用：降低模块间的耦合度（解耦）</strong></p><p><img src="/img/django_img/MVC.jpg" alt="MVC"></p><h4 id="7-1-2、Django的MTV模式"><a href="#7-1-2、Django的MTV模式" class="headerlink" title="7.1.2、Django的MTV模式"></a>7.1.2、Django的MTV模式</h4><p><strong>MTV代表Model-Template-View（模型-模版-视图）模式</strong></p><ul><li>M 模型层（Model），负责与数据库交互</li><li>T 模版层（Template），负责呈现内容到浏览器</li><li>V 视图层（View）是核心，负责接收请求、获取数据、返回结果</li></ul><p><strong>作用：降低模块间的耦合度（解耦）</strong></p><p><img src="/img/django_img/MTV.jpg" alt="MTV"></p><h3 id="7-2、模版层"><a href="#7-2、模版层" class="headerlink" title="7.2、模版层"></a>7.2、模版层</h3><p><strong>模版可以根据视图中传递的字典数据动态生成相应的html网页</strong></p><h4 id="7-2-1、模版配置"><a href="#7-2-1、模版配置" class="headerlink" title="7.2.1、模版配置"></a>7.2.1、模版配置</h4><ul><li><p>1、创建模版主文件夹 &lt;项目名&gt;&#x2F;templates</p></li><li><p>2、在settings.py中的TEMPLATES配置项配置</p><ul><li>1）BACKEND：指定模版的引擎</li><li>2）DIRS：模版的搜索目录（可以是一个或多个）</li><li>3）APP_DIRS：是否要在应用中的templates文件夹中搜索模版文件</li><li>4）OPTIONS：有关模版的选项</li></ul></li><li><p>3、配置项中需要修改的部分</p><ul><li>设置DIRS  -  <code>&#39;DIRS&#39;:[os.path.join(BASE_DIR,&#39;templates&#39;)],</code></li></ul></li></ul><h4 id="7-2-2、模版的加载方式"><a href="#7-2-2、模版的加载方式" class="headerlink" title="7.2.2、模版的加载方式"></a>7.2.2、模版的加载方式</h4><ul><li><p>方案1 - 通过loader获取模版，通过HttpResponse进行响应</p><p>在视图函数中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.template <span class="hljs-keyword">import</span> loader<br><br><span class="hljs-comment"># 1、通过loader加载模版</span><br>t = loader.get_template(<span class="hljs-string">&#x27;模版文件名&#x27;</span>)<br><span class="hljs-comment"># 2、将t转换成HTML字符串</span><br>html = t.render(字典数据)<br><span class="hljs-comment"># 3、用响应对象将转换的字符串内容返回给浏览器</span><br><span class="hljs-keyword">return</span> HttpResponse(html)<br></code></pre></td></tr></table></figure></li><li><p>方案2 - 使用render() 直接加载并响应模版</p><p>在视图函数中</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs py"><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render<br><br><span class="hljs-keyword">return</span> render(request,<span class="hljs-string">&#x27;模版文件名&#x27;</span>,字典数据)<br></code></pre></td></tr></table></figure></li></ul><h4 id="7-2-3、视图层与模版层之间的交互"><a href="#7-2-3、视图层与模版层之间的交互" class="headerlink" title="7.2.3、视图层与模版层之间的交互"></a>7.2.3、视图层与模版层之间的交互</h4><p>1、视图函数中可以将Python变量封装到字典中传递到模版</p><p>样例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">xxx_view</span>(<span class="hljs-params">request</span>):<br>  dic = &#123;<br>    <span class="hljs-string">&#x27;变量1&#x27;</span>:<span class="hljs-string">&#x27;值1&#x27;</span>,<br>    <span class="hljs-string">&#x27;变量2&#x27;</span>:<span class="hljs-string">&#x27;值2&#x27;</span><br>  &#125;<br>  <span class="hljs-keyword">return</span> render(request,<span class="hljs-string">&#x27;xxx.html&#x27;</span>,dic)<br></code></pre></td></tr></table></figure><p>2、模版中，可以用<code>&#123;&#123; 变量名 &#125;&#125;</code> 的语法 调用视图传进来的变量</p><h2 id="8、模版层"><a href="#8、模版层" class="headerlink" title="8、模版层"></a>8、模版层</h2><h3 id="8-1、模版的变量"><a href="#8-1、模版的变量" class="headerlink" title="8.1、模版的变量"></a>8.1、模版的变量</h3><ul><li><p>能传递到模版中的数据结构</p><ul><li>str - 字符串</li><li>int - 整型</li><li>list - 数组</li><li>tuple - 元组</li><li>dict - 字典</li><li>func - 方法</li><li>obj - 类实例化的对象</li></ul></li><li><p>在模版中使用变量语法</p><ul><li></li><li></li><li></li><li></li><li></li></ul></li></ul><h3 id="8-2、模版标签"><a href="#8-2、模版标签" class="headerlink" title="8.2、模版标签"></a>8.2、模版标签</h3><ul><li><p>作用：将一些服务器端的功能嵌入到模版中，例如流程控制等</p><ul><li><p>标签语法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;% 标签 %&#125;<br>...<br>&#123;% 结束标签 %&#125;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h4 id="8-2-1、if标签"><a href="#8-2-1、if标签" class="headerlink" title="8.2.1、if标签"></a>8.2.1、if标签</h4><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;% <span class="hljs-keyword">if</span> 条件表达式<span class="hljs-number">1</span> %&#125;<br>...<br>&#123;% <span class="hljs-keyword">elif</span> 条件表达式<span class="hljs-number">2</span> %&#125;<br>...<br>&#123;% <span class="hljs-keyword">elif</span> 条件表达式<span class="hljs-number">3</span> %&#125;<br>...<br>&#123;% <span class="hljs-keyword">else</span> %&#125;<br>...<br>&#123;% endif %&#125;<br></code></pre></td></tr></table></figure><p>官方文档：<a href="https://docs.djangoproject.com/zh-hans/3.2/ref/templates/builtins/#if">https://docs.djangoproject.com/zh-hans/3.2/ref/templates/builtins/#if</a></p><h4 id="8-2-2、for标签"><a href="#8-2-2、for标签" class="headerlink" title="8.2.2、for标签"></a>8.2.2、for标签</h4><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;% <span class="hljs-keyword">for</span> 变量 <span class="hljs-keyword">in</span> 可迭代对象 %&#125;<br>... 循环语句<br>&#123;% empty %&#125;<br>... 可迭代对象无数据时填充的语句<br>&#123;% endfor %&#125;<br></code></pre></td></tr></table></figure><p>官方文档：<a href="https://docs.djangoproject.com/zh-hans/3.2/ref/templates/builtins/#for-empty">https://docs.djangoproject.com/zh-hans/3.2/ref/templates/builtins/#for-empty</a></p><p><strong>for标签内置变量 - forloop</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">在 &#123;% for %&#125; 标签里可以通过 &#123;&#123;forloop&#125;&#125; 变量获取循环序号。<br>- forloop.counter: 顺序获取循环序号，从 1 开始计算<br>- forloop.counter0: 顺序获取循环序号，从 0 开始计算<br>- forloop.revcounter: 倒序获取循环序号，结尾序号为 1<br>- forloop.revcounter0: 倒序获取循环序号，结尾序号为 0<br>- forloop.first（一般配合if标签使用）: 第一条数据返回 True，其他数据返回 False<br>- forloop.last（一般配合if标签使用）: 最后一条数据返回 True，其他数据返回 False<br>- For loop.parentloop: 当嵌套循环，parentloop表示外层循环<br></code></pre></td></tr></table></figure><h3 id="8-3、模版层过滤器"><a href="#8-3、模版层过滤器" class="headerlink" title="8.3、模版层过滤器"></a>8.3、模版层过滤器</h3><ul><li>定义：在变量输出时对变量的值进行处理</li><li>作用：可以通过使用 过滤器来改变变量的输出显示</li><li>语法：<code>&#123;&#123; 变量 | 过滤器1:'参数值1' ｜ 过滤器2:'参数值2' ... &#125;&#125;</code></li></ul><p>官方文档：<a href="https://docs.djangoproject.com/zh-hans/3.2/ref/templates/builtins/#built-in-template-tags-and-filters">https://docs.djangoproject.com/zh-hans/3.2/ref/templates/builtins/#built-in-template-tags-and-filters</a></p><p><img src="/img/django_img/filter.jpg" alt="常用过滤器"></p><h3 id="8-4、模版的继承"><a href="#8-4、模版的继承" class="headerlink" title="8.4、模版的继承"></a>8.4、模版的继承</h3><p>模版继承可以使父模版的内容重用，子模版直接继承父模版的全部内容并可以覆盖父模版中相应的块</p><p><strong>语法 - 父模版中：</strong></p><ul><li>定义父模版中的块 block 标签</li><li>标识出哪些在子模版中是允许被修改的</li><li>block标签：在父模版中定义，可以在子模版中覆盖</li></ul><p><strong>语法 - 子模版中：</strong></p><ul><li><p>继承模版extends标签（写在模版文件的第一行）</p><ul><li>例如 <code>&#123;% extends 'base.html'%&#125;</code></li></ul></li><li><p>子模版重写父模版中的内容块</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% block block_name %&#125;<br>子模版块用来覆盖父模版中block_name块的内容<br>&#123;% endblock block_name %&#125;<br></code></pre></td></tr></table></figure></li></ul><p><strong>重写的覆盖规则</strong></p><ul><li>不重写，将按照父模版的效果显示</li><li>重写，则按照重写效果显示</li></ul><p><strong>注意：模版继承时，服务器端的动态内容无法继承</strong></p><p>参考文档：<a href="https://docs.djangoproject.com/zh-hans/3.2/ref/templates/language/#template-inheritance">https://docs.djangoproject.com/zh-hans/3.2/ref/templates/language/#template-inheritance</a></p><h2 id="9、url反向解析"><a href="#9、url反向解析" class="headerlink" title="9、url反向解析"></a>9、url反向解析</h2><h3 id="9-1、代码中url出现位置"><a href="#9-1、代码中url出现位置" class="headerlink" title="9.1、代码中url出现位置"></a>9.1、代码中url出现位置</h3><ul><li><p>1、模版html中</p><ul><li><p>1、<code>&lt;a href=&#39;url&#39;&gt;超链接&lt;/a&gt;</code></p><p>点击后页面挑战至url</p></li><li><p>2、<code>&lt;form action=&#39;url&#39; method=&#39;post&#39;&gt;</code></p><p>form表单中的数据用post方法提交至url</p></li></ul></li><li><p>2、视图函数中 - 302挑战 <code>HttpResponseRedirect(&#39;url&#39;)</code></p><ul><li>将用户地址栏中的地址跳转到url</li></ul></li></ul><h3 id="9-2、代码中url书写规范"><a href="#9-2、代码中url书写规范" class="headerlink" title="9.2、代码中url书写规范"></a>9.2、代码中url书写规范</h3><ul><li><p>1、绝对地址</p><ul><li><a href="http://127.0.0.1:8000/page/1">http://127.0.0.1:8000/page/1</a></li></ul></li><li><p>2、相对地址</p><ul><li><p>1、’&#x2F;page&#x2F;1’ - ‘&#x2F;‘ 开头的相对地址，</p><ul><li><strong>浏览器会把当前地址栏里的协议、ip和端口加上这个地址，作为最终访问地址。</strong></li><li>即如果当前页面地址栏为<a href="http://127.0.0.1/page/3%EF%BC%8C%E5%BD%93%E5%89%8D%E7%9B%B8%E5%AF%B9%E5%9C%B0%E5%9D%80%E6%9C%80%E7%BB%88%E7%BB%93%E6%9E%9C%E4%B8%BAhttp://127.0.0.1:8000">http://127.0.0.1/page/3，当前相对地址最终结果为http://127.0.0.1:8000</a> + &#x2F;page&#x2F;3</li></ul></li><li><p>2、’page&#x2F;1’ - 没有’&#x2F;‘开头的相对地址</p><ul><li><strong>浏览器会根据当前url的最后一个 &#x2F; 之前的内容 加上 该相对地址，作为最终访问地址。</strong></li><li>例如当前地址栏为 <a href="http://127.0.0.1:8000/topic/detail,%E5%88%99%E8%AF%A5%E7%9B%B8%E5%AF%B9%E5%9C%B0%E5%9D%80%E6%9C%80%E7%BB%88%E7%BB%93%E6%9E%9C%E4%B8%BA">http://127.0.0.1:8000/topic/detail,则该相对地址最终结果为</a> <a href="http://127.0.0.1:8000/topic/">http://127.0.0.1:8000/topic/</a> + page&#x2F;1</li></ul></li></ul></li></ul><h3 id="9-3、url反向解析"><a href="#9-3、url反向解析" class="headerlink" title="9.3、url反向解析"></a>9.3、url反向解析</h3><p><strong>url反向解析是指在视图或模版中，用path定义的名称来 动态查找 或 计算出相应的路由</strong></p><p>1、path 函数的语法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">path(route, views,name=<span class="hljs-string">&#x27;别名&#x27;</span>)<br>例子：path(<span class="hljs-string">&#x27;page&#x27;</span>, views.page_view,name=<span class="hljs-string">&#x27;page_url&#x27;</span>)<br></code></pre></td></tr></table></figure><ul><li><strong>根据path中的’name&#x3D;’关键字传参给 url确定了个唯一确定的名字，在模版或视图中，可以通过这个名字反向推断出此url信息</strong></li></ul><p>2、在模版中 - 通过 url标签 实现地址的反向解析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">&#123;% url <span class="hljs-string">&#x27;别名&#x27;</span> %&#125;<br>&#123;% url <span class="hljs-string">&#x27;别名&#x27;</span> <span class="hljs-string">&#x27;参数值1&#x27;</span> <span class="hljs-string">&#x27;参数值2&#x27;</span> %&#125;<br><span class="hljs-comment"># 例子</span><br>&#123;% url <span class="hljs-string">&#x27;person&#x27;</span> <span class="hljs-string">&#x27;400&#x27;</span> %&#125;<br>&#123;% url <span class="hljs-string">&#x27;person&#x27;</span> age=<span class="hljs-string">&#x27;18&#x27;</span> name=<span class="hljs-string">&#x27;zhangsan&#x27;</span> %&#125;<br></code></pre></td></tr></table></figure><p>3、在视图函数中 -&gt; 可调用django中的reverse()方法进行反向解析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> reverse<br>reverse(<span class="hljs-string">&#x27;别名&#x27;</span>,args=[],kwargs=&#123;&#125;)<br><span class="hljs-comment"># 例子</span><br><span class="hljs-built_in">print</span>(reverse(<span class="hljs-string">&#x27;person&#x27;</span>,args=[<span class="hljs-number">300</span>],kwargs=&#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;lisi&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>:<span class="hljs-number">18</span>&#125;))<br></code></pre></td></tr></table></figure><h2 id="10、静态文件"><a href="#10、静态文件" class="headerlink" title="10、静态文件"></a>10、静态文件</h2><h3 id="10-1、静态文件配置"><a href="#10-1、静态文件配置" class="headerlink" title="10.1、静态文件配置"></a>10.1、静态文件配置</h3><ul><li><p>静态文件配置 - 在 settings.py 中</p><h4 id="10-1-1、配置静态文件的访问路径-STATIC-URL【该配置默认存在】"><a href="#10-1-1、配置静态文件的访问路径-STATIC-URL【该配置默认存在】" class="headerlink" title="10.1.1、配置静态文件的访问路径 STATIC_URL【该配置默认存在】"></a>10.1.1、配置静态文件的访问路径 STATIC_URL【该配置默认存在】</h4><ul><li>通过哪个url地址找静态文件</li><li>STATIC_URL &#x3D; ‘&#x2F;static&#x2F;‘</li><li>说明：<ul><li>指定访问静态文件时是需要通过 &#x2F;static&#x2F;xxx 或 <a href="http://127.0.0.1:8000/static/xxx">http://127.0.0.1:8000/static/xxx</a> </li><li>[xxx]表示具体的静态资源位置</li></ul></li></ul><h4 id="10-1-2、配置静态文件的存储路径-STATICFILES-DIRS"><a href="#10-1-2、配置静态文件的存储路径-STATICFILES-DIRS" class="headerlink" title="10.1.2、配置静态文件的存储路径 STATICFILES_DIRS"></a>10.1.2、配置静态文件的存储路径 STATICFILES_DIRS</h4><p><strong>STATICFILES_DIRS保存的是静态文件在服务器端的存储位置</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># file: settings.py</span><br>STATICFILES_DIRS = (<br>os.path.join(BASE_DIR,<span class="hljs-string">&#x27;static&#x27;</span>),  <span class="hljs-comment"># 元组 一定要有逗号 ,</span><br>)<br></code></pre></td></tr></table></figure></li></ul><h3 id="10-2、静态文件访问"><a href="#10-2、静态文件访问" class="headerlink" title="10.2、静态文件访问"></a>10.2、静态文件访问</h3><h4 id="10-2-1、直接拼接访问路径"><a href="#10-2-1、直接拼接访问路径" class="headerlink" title="10.2.1、直接拼接访问路径"></a>10.2.1、直接拼接访问路径</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://127.0.0.1:8000/static/image/aae.png&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;300px&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/image/aae.png&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;700px&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="10-2-2、通过标签访问静态文件"><a href="#10-2-2、通过标签访问静态文件" class="headerlink" title="10.2.2、通过标签访问静态文件"></a>10.2.2、通过标签访问静态文件</h4><ul><li><p>1、加载static  -  <code>&#123;% load static %&#125;</code></p></li><li><p>2、使用静态文件  -  <code>&#123;% static '静态资源路径' %&#125;</code></p></li><li><p>3、样例</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">&#123;% load static %&#125;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&#123;% static &#x27;image/aae.png&#x27; %&#125;&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h1 id="二、Django-应用及分布式路由"><a href="#二、Django-应用及分布式路由" class="headerlink" title="二、Django 应用及分布式路由"></a>二、Django 应用及分布式路由</h1><p>应用在Django项目中是一个独立的业务模块，可以包含自己的路由、视图、模版、模型</p><h2 id="1、应用"><a href="#1、应用" class="headerlink" title="1、应用"></a>1、应用</h2><h3 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h3><p>步骤1:用manage.py 中的字命令startapp创建应用文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 manage.py startapp 应用名<br></code></pre></td></tr></table></figure><p><img src="/img/django_img/%E5%BA%94%E7%94%A8.jpg" alt="应用"></p><p>步骤2:在settings.py 的 INSTALLED_APPS 列表中配置注册此应用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># settings.py 配置样例</span><br>INSTALLED_APPS = [<br>  <span class="hljs-comment"># ....</span><br>  <span class="hljs-string">&#x27;user&#x27;</span>,  <span class="hljs-comment"># 用户信息模块</span><br>  <span class="hljs-string">&#x27;music&#x27;</span>,  <span class="hljs-comment"># 音乐模块</span><br>]<br></code></pre></td></tr></table></figure><h2 id="2、分布式路由"><a href="#2、分布式路由" class="headerlink" title="2、分布式路由"></a>2、分布式路由</h2><p>Django中，主路由配置文件（urls.py）可以不处理用户具体路由，主路由配置文件可以做请求的分发（分布式请求处理）。具体的请求可以由各自的应用来进行处理</p><p><img src="/img/django_img/%E5%88%86%E5%B8%83%E5%BC%8F%E8%B7%AF%E7%94%B1.jpg" alt="分布式路由"></p><h3 id="2-1、配置分布式路由"><a href="#2-1、配置分布式路由" class="headerlink" title="2.1、配置分布式路由"></a>2.1、配置分布式路由</h3><p><strong>步骤1 - 主路由中调用include函数</strong></p><p>语法：<code>path(&#39;url前缀&#39;, include(&#39;app名字.url模块名&#39;))</code></p><p>作用：用于将当前路由转到各个应用的路由配置文件的urlpatterns进行分布式处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path, include<br><br>urlpatterns = [<br>  path(<span class="hljs-string">&#x27;admin/&#x27;</span>, admin.site.urls),<br>  path(<span class="hljs-string">&#x27;music/&#x27;</span>,include(<span class="hljs-string">&#x27;music.urls&#x27;</span>))<br>]<br></code></pre></td></tr></table></figure><p><strong>步骤2  - 应用中新建配置urls.py</strong></p><ul><li>首先在应用下手动创建urls.py 文件，内容结构和主路由完全一样</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path<br><span class="hljs-keyword">from</span> . <span class="hljs-keyword">import</span> views<br><br>urlpatterns = [<br>  <span class="hljs-comment"># http://127.0.0.1:8000/music/index</span><br>  path(<span class="hljs-string">&#x27;index&#x27;</span>,views.index_view)<br>]<br></code></pre></td></tr></table></figure><h3 id="2-2、应用下的模版"><a href="#2-2、应用下的模版" class="headerlink" title="2.2、应用下的模版"></a>2.2、应用下的模版</h3><p><strong>应用内部可以配置模版目录</strong></p><ul><li>1、应用下手动创建templates文件夹</li><li>2、settings.py中开启 应用模版功能<ul><li>TEMPLATE配置项中 的 ‘APP_DIRS’ 值为True即可</li></ul></li></ul><p><strong>应用下templates 和 外层templates都存在时，django得查找模版规则</strong></p><ul><li>1、优先查找外层templates目录下的模版</li><li>2、按INSTALLED_APPS配置下的 应用顺序 逐层查找</li></ul><h2 id="3、模型层及ORM介绍"><a href="#3、模型层及ORM介绍" class="headerlink" title="3、模型层及ORM介绍"></a>3、模型层及ORM介绍</h2><h3 id="3-1、模型层"><a href="#3-1、模型层" class="headerlink" title="3.1、模型层"></a>3.1、模型层</h3><ul><li><strong>模型层 - 负责跟数据库之间进行通信</strong></li></ul><h4 id="3-1-1、Django配置MySQL"><a href="#3-1-1、Django配置MySQL" class="headerlink" title="3.1.1、Django配置MySQL"></a>3.1.1、Django配置MySQL</h4><ul><li>安装mysqlclient【版本mysqlclient 1.4以上】     <code>pip install mysqlclient</code></li></ul><p><strong>官方文档：<a href="https://docs.djangoproject.com/zh-hans/3.2/ref/databases/">https://docs.djangoproject.com/zh-hans/3.2/ref/databases/</a></strong></p><ul><li><p>步骤</p><ul><li><p>1、创建数据库</p></li><li><p>2、进入mysql数据库执行</p><ul><li><code>create database 数据库名 default charset utf8</code></li><li>通常数据库名跟项目名保持一致</li></ul></li><li><p>3、settings.py里进行数据库的配置</p><ul><li><p>修改DATABASES 配置项的内容，由sqlite3 变成 mysql</p></li><li><p>ENGINE - 指定数据库存储引擎</p><ul><li>‘django.db.backends.mysql’</li><li>‘django.db.backends.sqlite3’</li><li>‘django.db.backends.oracle’</li><li>‘django.db.backends.postgresql’</li></ul></li><li><p>NAME - 指定要连接的数据库的名称</p></li><li><p>USER - 指定登录到数据库的用户名</p></li><li><p>PASSWORD - 数据库的密码</p></li><li><p>HOST - 连接具体数据库的IP</p></li><li><p>PORT - 端口号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 模型层 连接数据库</span><br>DATABASES = &#123;<br>    <span class="hljs-string">&#x27;default&#x27;</span>: &#123;<br>        <span class="hljs-string">&#x27;ENGINE&#x27;</span>: <span class="hljs-string">&#x27;django.db.backends.mysql&#x27;</span>,<br>        <span class="hljs-string">&#x27;HOST&#x27;</span>: <span class="hljs-string">&#x27;123.56.95.151&#x27;</span>,<br>        <span class="hljs-string">&#x27;PORT&#x27;</span>: <span class="hljs-string">&#x27;3308&#x27;</span>,<br>        <span class="hljs-string">&#x27;USER&#x27;</span>: <span class="hljs-string">&#x27;root&#x27;</span>,<br>        <span class="hljs-string">&#x27;PASSWORD&#x27;</span>: <span class="hljs-string">&#x27;139309641480&#x27;</span>,<br>        <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;mysite3&#x27;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul></li></ul></li></ul><h4 id="3-1-2、什么是模型"><a href="#3-1-2、什么是模型" class="headerlink" title="3.1.2、什么是模型"></a>3.1.2、什么是模型</h4><ul><li>模型是一个Python类，它是由django.db.models.Model 派生出的子类</li><li>一个模型类代表数据库中的一张数据表</li><li>模型类中的每一个类属性都代表数据库中的一个字段</li><li>模型是数据交互的借口，是表示和操作数据库的方法和方式</li></ul><h3 id="3-2、ORM框架"><a href="#3-2、ORM框架" class="headerlink" title="3.2、ORM框架"></a>3.2、ORM框架</h3><ul><li><p>定义：ORM（Object Relational Mapping）即对象关系映射，它是一种程序技术，它允许使用类和对象对数据库进行操作，从而避免通过SQL语句操作数据库</p></li><li><p>作用：</p><ul><li>1、建立模型类和表之间的对应关系，允许通过面向对象的方式来操作数据库</li><li>2、根据设计的模型类生成数据库中的表格</li><li>3、通过简单的配置就可以进行数据库的切换</li></ul></li><li><p>优点：</p><ul><li>只需要面向对象编程，不需要面向数据库编写代码<ul><li>对数据的操作都转化成对类属性和方法的操作</li><li>不用编写各种数据库的sql语句</li></ul></li><li>实现了数据模型和数据库的解耦，屏蔽了不同数据库操作上的差异<ul><li>不在关注用的是mysql、oracle…等数据库的内部细节</li><li>通过简单的配置就可以轻松更换数据库，而不需要修改代码</li></ul></li></ul></li><li><p>缺点：</p><ul><li>对于复杂业务，使用成本较高</li><li>根据对象的操作转换成SQL语句，根据查询的结果转换成对象，在映射过程中有性能损失</li></ul></li></ul><p><img src="/img/django_img/ORM%E6%98%A0%E5%B0%84.jpg" alt="ORM映射"></p><h3 id="3-3、数据库迁移"><a href="#3-3、数据库迁移" class="headerlink" title="3.3、数据库迁移"></a>3.3、数据库迁移</h3><ul><li>迁移是Django同步对模型所做更改（添加字段，删除模型等）到数据库模式的方式<ul><li>生产迁移文件 - 执行 <code>python3 manage.py makemigrations</code><ul><li>将应用下的models.py文件生成一个中间文件，并保存在migrations文件夹中</li></ul></li><li>执行迁移脚本程序 - 执行<code>python3 manage.py migrate</code><ul><li>执行迁移程序实现迁移。将每个应用下的migrations目录中的中间文件同步到数据库</li></ul></li></ul></li></ul><p>报错解决：<a href="https://blog.csdn.net/weixin_43996007/article/details/104065678">https://blog.csdn.net/weixin_43996007/article/details/104065678</a></p><h3 id="3-4、模型类-创建"><a href="#3-4、模型类-创建" class="headerlink" title="3.4、模型类 - 创建"></a>3.4、模型类 - 创建</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> models<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">模型类名</span>(models.Model):<br>  字段名 = models.字段类型(字段选项)<br></code></pre></td></tr></table></figure><h2 id="4、ORM"><a href="#4、ORM" class="headerlink" title="4、ORM"></a>4、ORM</h2><h3 id="4-1、创建模型类流程"><a href="#4-1、创建模型类流程" class="headerlink" title="4.1、创建模型类流程"></a>4.1、创建模型类流程</h3><ul><li>1、创建应用</li><li>2、在应用下的models.py中编写模型类</li><li>3、迁移同步  <code>makemigrations &amp; migrate</code></li></ul><p><strong>任何关于表结构的修改，务必在对应模型类上修改</strong></p><h3 id="4-2、基础字段及选项"><a href="#4-2、基础字段及选项" class="headerlink" title="4.2、基础字段及选项"></a>4.2、基础字段及选项</h3><h4 id="4-2-1、字段类型"><a href="#4-2-1、字段类型" class="headerlink" title="4.2.1、字段类型"></a>4.2.1、字段类型</h4><ul><li><p>1、BooleanField()</p><ul><li>数据库类型： tinyint(1)</li><li>Django中：使用True或False来表示值</li><li>在数据库中：使用1或0来表示具体的值</li></ul></li><li><p>2、CharField()</p><ul><li>数据库类型：varchar</li><li>注意：必须要指定max_length参数值</li></ul></li><li><p>3、DateField()</p><ul><li><p>数据库类型：date</p></li><li><p>作用：表示日期</p></li><li><p>参数：</p><ul><li><p>1、auto_now：每次保存对象时，自动设置该字段为当前时间（取值：True&#x2F;False）</p></li><li><p>2、auto_now_add：当对象第一次被创建时自动设置当前时间（取值：True&#x2F;False）</p></li><li><p>3、default：设置当前时间（取值：字符串格式时间，如：‘2019-6-1’）</p><p><strong>以上三个参数只能 多选一</strong></p></li></ul></li></ul></li><li><p>4、DateTimeField()</p><ul><li>数据库类型：datetime(6)</li><li>作用：表示日期和时间</li><li>参数同DateField</li></ul></li><li><p>5、FloatField()</p><ul><li>数据库类型：double</li><li>Django中和数据库中都使用小数表示值</li></ul></li><li><p>6、DecimalField()</p><ul><li>数据库类型：decimal(x,y)</li><li>Django中：使用小数表示该列的值</li><li>在数据库中：使用小数</li><li>参数：<ul><li>max_digits：位数总数，包括小数点后的位数。该值必须大于等于decimal_places</li><li>decimal_places：小数点后的数字数量</li></ul></li></ul></li><li><p>7、EmailField()   专门存邮箱</p><ul><li>数据库类型varchar</li><li>Django和数据库中使用字符串</li></ul></li><li><p>8、IntegerField()</p><ul><li>数据库类型：int</li><li>Django和数据库中使用整数</li></ul></li><li><p>9、ImageField()</p><ul><li>数据库类型：varchar(100)</li><li>作用：在数据库中为了保存图片的路径</li><li>Django和数据库中使用字符串</li></ul></li><li><p>10、TextField()</p><ul><li>数据库类型：longtext</li><li>作用：表示不定长的字符数据</li></ul></li></ul><p>官方文档：<a href="https://docs.djangoproject.com/zh-hans/3.2/ref/models/fields/#field-types">https://docs.djangoproject.com/zh-hans/3.2/ref/models/fields/#field-types</a></p><h4 id="4-2-2、字段选项"><a href="#4-2-2、字段选项" class="headerlink" title="4.2.2、字段选项"></a>4.2.2、字段选项</h4><ul><li><p>字段选项，指定创建的列的额外的信息</p></li><li><p>允许出现多个字段选项，多个选项之间使用 , 隔开</p></li><li><p>primary_key</p><ul><li>如果设置为True，表示该列的主键，如果指定一个字段为主键，则此数据库表不会自动创建id字段</li></ul></li><li><p>blank</p><ul><li>设置为True时，字段可以为空；设置为False时，字段必须填写</li></ul></li><li><p>null</p><ul><li>如果设置为True，表示该列值允许为空</li><li>默认是False，如果此选项为False，建议加入default选项来设置默认值</li></ul></li><li><p>default</p><ul><li>设置所在列的默认值，如果字段选项null&#x3D;False，建议添加此项</li></ul></li><li><p>db_index      普通索引</p><ul><li>如果设置为True，表示为该列增加索引</li></ul></li><li><p>unique          唯一索引</p><ul><li>如果设置为True，表示该字段在数据库中的值必须是唯一</li></ul></li><li><p>db_column</p><ul><li>指定列的名称，如果不指定的话，则采用属性名作为列名</li></ul></li><li><p>verbose_name</p><ul><li>设置此字段在admin界面上的显示名称</li></ul></li></ul><p>样例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 创建一个属性，表示拥护名称，长度30个字符，必须是唯一的，不能为空，添加索引</span><br>name = models.CharField(max_length = <span class="hljs-number">30</span>, unique = <span class="hljs-literal">True</span>, null = <span class="hljs-literal">False</span>, db_index = <span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><p>官方文档：<a href="https://docs.djangoproject.com/zh-hans/3.2/ref/models/fields/#field-options">https://docs.djangoproject.com/zh-hans/3.2/ref/models/fields/#field-options</a></p><p><em><strong>修改过字段选项【添加或更改】 都要执行 makemigrations 和 migrate</strong></em></p><h4 id="4-2-3、模型类-Meta类"><a href="#4-2-3、模型类-Meta类" class="headerlink" title="4.2.3、模型类 - Meta类"></a>4.2.3、模型类 - Meta类</h4><p><strong>使用内部Meta类 来给模型赋予属性，Meta类下有很多内建的类属性，可以对模型类做一些控制</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> models<br><br><span class="hljs-comment"># Create your models here.</span><br><span class="hljs-comment"># 创建模型类</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Book</span>(models.Model):<br>    title = models.CharField(<span class="hljs-string">&#x27;书名&#x27;</span>, max_length=<span class="hljs-number">50</span>, default=<span class="hljs-string">&#x27;&#x27;</span>)<br>    price = models.DecimalField(<span class="hljs-string">&#x27;价格&#x27;</span>, max_digits=<span class="hljs-number">7</span>, decimal_places=<span class="hljs-number">2</span>)<br>    info = models.CharField(<span class="hljs-string">&#x27;描述&#x27;</span>, max_length=<span class="hljs-number">100</span>, default=<span class="hljs-string">&#x27;&#x27;</span>)<br>    <br>    <span class="hljs-comment"># Meta类，可以设置表的属性</span><br>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">Meta</span>:<br>        db_table = <span class="hljs-string">&#x27;book&#x27;</span>  <span class="hljs-comment"># 可改变当前模型类对应的表名</span><br></code></pre></td></tr></table></figure><h3 id="4-3、常见问题"><a href="#4-3、常见问题" class="headerlink" title="4.3、常见问题"></a>4.3、常见问题</h3><p><strong>问题1:</strong></p><p><img src="/img/django_img/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%981.jpg" alt="常见问题1"></p><p>错误原因：在已经存在的表中新增非空字段时，没指定default默认值</p><p>解决：选2退出，在models.py中指定默认值default</p><p><strong>问题2：</strong></p><p><img src="/img/django_img/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%982.jpg" alt="常见问题2"></p><p><img src="/img/django_img/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%982_2.jpg" alt="常见问题2_2"></p><h3 id="4-4、创建数据"><a href="#4-4、创建数据" class="headerlink" title="4.4、创建数据"></a>4.4、创建数据</h3><p>基本操作包括增删改查操作，即（CRUD操作）</p><p>CRUD是指在做计算处理时的增加（Create）、读取查询（Read）、更新（Update）和删除（Delete）</p><p><strong>ORM CRUD核心 -&gt; 模型类.管理器对象</strong></p><h4 id="4-4-1、管理器对象-objects"><a href="#4-4-1、管理器对象-objects" class="headerlink" title="4.4.1、管理器对象  objects"></a>4.4.1、管理器对象  objects</h4><p>每个继承自models.Model的模型类，都会有一个objects对象被同样继承下来。这个对象叫管理器对象</p><p>数据库的增删改查可以通过模型的管理器实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyModel</span>(models.Model):<br>  ...<br>    <br>MyModel.objects.create(...)  <span class="hljs-comment"># objects 是管理器对象</span><br></code></pre></td></tr></table></figure><h4 id="4-4-2、创建数据"><a href="#4-4-2、创建数据" class="headerlink" title="4.4.2、创建数据"></a>4.4.2、创建数据</h4><p>Django ORM 使用一种直观的方式把数据库表中的数据表示成Python对象</p><p>创建数据中的每一条记录就是创建一个数据对象</p><p><strong>方案1:</strong>     <code>MyModel.objects.create(属性1 = 值1, 属性2 = 值2, ...)</code></p><ul><li>成功：返回创建好的实体对象</li><li>失败：抛出异常</li></ul><p><strong>方案2:</strong>  创建MyModel实例对象，并调用save()进行保存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">obj = MyModel(属性 = 值, 属性 = 值)<br>obj.属性 = 值<br>obj.save()  <span class="hljs-comment"># 只有执行了 .save() 才会存入数据库</span><br></code></pre></td></tr></table></figure><h3 id="4-5、Django-Shell-—-专门为了调试M层"><a href="#4-5、Django-Shell-—-专门为了调试M层" class="headerlink" title="4.5、Django Shell    —     专门为了调试M层"></a>4.5、Django Shell    —     专门为了调试M层</h3><p>在Django提供了一个交互式的操作项目叫 Django Shell 它能够在交互模式用项目工程的代码执行相应的操作</p><p>利用Django Shell 可以代替编写view的代码来进行直接操作</p><p><strong>注意：项目代码发生变化时，需要重新进入Django shell</strong></p><p>启动方式：  <code>python3 manage.py shell</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">In [1]: from bookstore.models import Book<br><br>In [2]: b1 = Book.objects.create(title=&#x27;Python&#x27;,pub=&#x27;清华大学出版社&#x27;,price=20,market_price=25)<br><br>In [3]: <br><br>In [3]: b1<br>Out[3]: &lt;Book: Book object (1)&gt;<br><br><br>In [5]: b2=Book(title=&#x27;Django&#x27;,pub=&#x27;清华大学出版社&#x27;,price=70,market_price=75)<br><br>In [6]: b2.save()<br></code></pre></td></tr></table></figure><h3 id="4-6、查询操作"><a href="#4-6、查询操作" class="headerlink" title="4.6、查询操作"></a>4.6、查询操作</h3><ul><li><p>数据库的查询需要使用管理器对象进行</p></li><li><p>通过 MyModel.objects 管理器方法调用查询方法</p><p><img src="/img/django_img/%E6%9F%A5%E8%AF%A2.jpg" alt="查询"></p></li></ul><h4 id="4-6-1、all-方法"><a href="#4-6-1、all-方法" class="headerlink" title="4.6.1、all()方法"></a>4.6.1、all()方法</h4><p>用法：<code>MyModel.objects.all()</code></p><p>作用：查询MyModel实体中的所有数据</p><p>等同于：<code>select * from table;</code></p><p>返回值：QuerySet容器对象【数组】，内部存放MyModel实例</p><p><img src="/img/django_img/%E6%9F%A5%E8%AF%A2%E5%B0%8F%E6%8A%80%E5%B7%A7.jpg" alt="查询小技巧"></p><p><img src="/img/django_img/%E8%B0%83%E6%95%B4%E6%89%93%E5%8D%B0%E6%95%88%E6%9E%9C.jpg" alt="调整打印效果"></p><p><img src="/img/django_img/%E6%95%88%E6%9E%9C.jpg" alt="效果"></p><h4 id="4-6-2、values-‘列1’-‘列2’-…-方法"><a href="#4-6-2、values-‘列1’-‘列2’-…-方法" class="headerlink" title="4.6.2、values(‘列1’, ‘列2’, …)方法"></a>4.6.2、values(‘列1’, ‘列2’, …)方法</h4><p>用法：<code>MyModel.objects.values(...)</code></p><p>作用：查询部分列的数据并返回</p><p>等同于：<code>select 列1, 列2 from table;</code></p><p>返回值: QuerySet容器对象，容器内存字典，每个字典代表一条数据</p><p>​格式为：<code>&#123;&#39;列1&#39; : &#39;值1&#39;, &#39;列2&#39; : &#39;值2&#39;&#125;</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">In [4]: a2 = Book.objects.values(&#x27;title&#x27;,&#x27;pub&#x27;)<br><br>In [6]: for book in a2:<br>   ...:     print(book[&#x27;title&#x27;])<br>   ...: <br>Python<br>Django<br>JQuery<br>Linux<br>HTML5<br></code></pre></td></tr></table></figure><h4 id="4-6-3、values-list-‘列1’-‘列2’-…-方法"><a href="#4-6-3、values-list-‘列1’-‘列2’-…-方法" class="headerlink" title="4.6.3、values_list(‘列1’, ‘列2’, …)方法"></a>4.6.3、values_list(‘列1’, ‘列2’, …)方法</h4><p>用法：<code>MyModel.objects.values_list(...)</code></p><p>作用：返回元组形式的查询结果</p><p>等同于：<code>select 列1, 列2 from table;</code></p><p>返回值：QuerySet容器对象，内部存放 ‘元组’</p><ul><li>会将查询出来的数据封装到元组中，再封装到查询集合QuerySet中</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">In [7]: a3 = Book.objects.values_list(&#x27;title&#x27;,&#x27;pub&#x27;)<br><br>In [8]: for book in a3:<br>   ...:     print(book[0])<br>   ...: <br>Python<br>Django<br>JQuery<br>Linux<br>HTML5<br></code></pre></td></tr></table></figure><h4 id="4-6-4、order-by-方法"><a href="#4-6-4、order-by-方法" class="headerlink" title="4.6.4、order_by()方法"></a>4.6.4、order_by()方法</h4><p>用法：<code>MyModel.objects.order_by(&#39;-列1&#39;, &#39;列2&#39;, ...)</code></p><p>作用：与all() 方法不同，它会用SQL语句中的order by 字句对查询结果根据某个字段选择性的进行排序</p><p>说明：默认是按照升序排序，降序排序则需要在列前增加 ‘-‘ 表示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell">In [9]: a4 = Book.objects.order_by(&#x27;-price&#x27;)<br><br>In [10]: a4<br>Out[10]: &lt;QuerySet [&lt;Book: JQuery_机械工业出版社_90.00_85.00&gt;, &lt;Book: HTML5_清华大学出版社_90.00_105.00&gt;, &lt;Book: Linux_机械工业出版社_80.00_65.00&gt;, &lt;Book: Django_清华大学出版社_70.00_75.00&gt;, &lt;Book: Python_清华大学出版社_20.00_25.00&gt;]&gt;<br><br>In [11]: a5=Book.objects.values(&#x27;title&#x27;).order_by(&#x27;-price&#x27;)<br><br>In [12]: a5<br>Out[12]: &lt;QuerySet [&#123;&#x27;title&#x27;: &#x27;JQuery&#x27;&#125;, &#123;&#x27;title&#x27;: &#x27;HTML5&#x27;&#125;, &#123;&#x27;title&#x27;: &#x27;Linux&#x27;&#125;, &#123;&#x27;title&#x27;: &#x27;Django&#x27;&#125;, &#123;&#x27;title&#x27;: &#x27;Python&#x27;&#125;]&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">可以通过QuerySet.query获取SQL语句</span><br>In [13]: print(a5.query)<br>SELECT `book`.`title` FROM `book` ORDER BY `book`.`price` DESC<br></code></pre></td></tr></table></figure><h4 id="4-6-5、filter-条件-方法"><a href="#4-6-5、filter-条件-方法" class="headerlink" title="4.6.5、filter(条件)方法"></a>4.6.5、filter(条件)方法</h4><p>语法：<code>MyModel.objects.filter(属性1=值1, 属性2=值2)</code></p><p>作用：返回包含此条件的全部的数据集</p><p>返回值：QuerySet容器对象，内部存放MyModel实例</p><p>说明：当多个属性在一起时为‘与’关系，即 and</p><h4 id="4-6-6、exclude-条件-方法"><a href="#4-6-6、exclude-条件-方法" class="headerlink" title="4.6.6、exclude(条件)方法"></a>4.6.6、exclude(条件)方法</h4><p>语法：<code>MyModel.objects.exclude(条件)</code></p><p>作用：返回不包含此 条件 的全部数据集</p><h4 id="4-6-7、get-条件-方法-【只返回一条数据】"><a href="#4-6-7、get-条件-方法-【只返回一条数据】" class="headerlink" title="4.6.7、get(条件)方法              【只返回一条数据】"></a>4.6.7、get(条件)方法              【只返回一条数据】</h4><p>语法：<code>MyModel.objects.get(条件)</code></p><p>作用：返回满足条件的唯一一条数据</p><p>说明：该方法只能返回一条数据，查询结果多于一条数据则抛出 <code>Model.MultipleObjectsReturned异常</code>,查询结果如果没有数据则抛出 <code>Model.DoesNotExist异常</code></p><h4 id="4-6-8、查询谓词"><a href="#4-6-8、查询谓词" class="headerlink" title="4.6.8、查询谓词"></a>4.6.8、查询谓词</h4><p>定义：做更<strong>灵活的条件查询</strong>时需要使用查询谓词</p><p>说明：每一个查询谓词是一个独立的查询功能</p><h5 id="1、-exact：等值匹配【-】"><a href="#1、-exact：等值匹配【-】" class="headerlink" title="1、__exact：等值匹配【 &#x3D; 】"></a>1、__exact：等值匹配【 &#x3D; 】</h5><p>示例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">In [12]: Book.objects.filter(id__exact=1)<br>Out[12]: &lt;QuerySet [&lt;Book: Python_清华大学出版社_20.00_25.00&gt;]&gt;<br></code></pre></td></tr></table></figure><h5 id="2、-contains：包含指定值xxx-【-模糊查询-xxx-】"><a href="#2、-contains：包含指定值xxx-【-模糊查询-xxx-】" class="headerlink" title="2、__contains：包含指定值xxx   【 模糊查询  %xxx% 】"></a>2、__contains：包含指定值xxx   【 模糊查询  <code>%xxx%</code> 】</h5><h5 id="3、-startswith：以xxx开始-【-模糊查询-xxx-】"><a href="#3、-startswith：以xxx开始-【-模糊查询-xxx-】" class="headerlink" title="3、__startswith：以xxx开始     【 模糊查询  xxx% 】"></a>3、__startswith：以xxx开始     【 模糊查询  <code>xxx%</code> 】</h5><h5 id="4、-endswith：以xxx结束-【-模糊查询-xxx-】"><a href="#4、-endswith：以xxx结束-【-模糊查询-xxx-】" class="headerlink" title="4、__endswith：以xxx结束     【 模糊查询  %xxx 】"></a>4、__endswith：以xxx结束     【 模糊查询  <code>%xxx</code> 】</h5><h5 id="5、-gt：大于指定值-【-】"><a href="#5、-gt：大于指定值-【-】" class="headerlink" title="5、__gt：大于指定值  【 &gt; 】"></a>5、__gt：大于指定值  【 &gt; 】</h5><h5 id="6、-gte：大于等于-【-】"><a href="#6、-gte：大于等于-【-】" class="headerlink" title="6、__gte：大于等于  【 &gt;&#x3D; 】"></a>6、__gte：大于等于  【 &gt;&#x3D; 】</h5><h5 id="7、-lt：小于-【-】"><a href="#7、-lt：小于-【-】" class="headerlink" title="7、__lt：小于  【 &lt; 】"></a>7、__lt：小于  【 &lt; 】</h5><h5 id="8、-lte：小于等于-【"><a href="#8、-lte：小于等于-【" class="headerlink" title="8、__lte：小于等于  【 &lt;&#x3D; 】"></a>8、__lte：小于等于  【 &lt;&#x3D; 】</h5><h5 id="9、-in：查找数据是否在指定范围内-【-in-后面跟数组-】"><a href="#9、-in：查找数据是否在指定范围内-【-in-后面跟数组-】" class="headerlink" title="9、__in：查找数据是否在指定范围内  【 in  后面跟数组  [] 】"></a>9、__in：查找数据是否在指定范围内  【 in  后面跟数组  <code>[]</code> 】</h5><h5 id="10、-range：查找数据是否在指定的区间范围内-【-between…and…-后面跟范围-a-b-】"><a href="#10、-range：查找数据是否在指定的区间范围内-【-between…and…-后面跟范围-a-b-】" class="headerlink" title="10、__range：查找数据是否在指定的区间范围内  【 between…and…  后面跟范围 (a,b) 】"></a>10、__range：查找数据是否在指定的区间范围内  【 between…and…  后面跟范围 <code>(a,b)</code> 】</h5><p>官方文档：<a href="https://docs.djangoproject.com/zh-hans/3.2/ref/models/querysets/#field-lookups">https://docs.djangoproject.com/zh-hans/3.2/ref/models/querysets/#field-lookups</a></p><h3 id="4-7、更新数据"><a href="#4-7、更新数据" class="headerlink" title="4.7、更新数据"></a>4.7、更新数据</h3><h4 id="4-7-1、更新单个数据"><a href="#4-7-1、更新单个数据" class="headerlink" title="4.7.1、更新单个数据"></a>4.7.1、更新单个数据</h4><ul><li>修改单个实体的某些字段值的步骤：<ul><li>1、查      - 通过 <code>.get()</code> 得到要修改的实体对象</li><li>2、改      - 通过 <code>对象.属性</code> 的方式修改数据</li><li>3、保存  - 通过 <code>对象.save()</code> 保存数据</li></ul></li></ul><h4 id="4-7-2、批量更新数据"><a href="#4-7-2、批量更新数据" class="headerlink" title="4.7.2、批量更新数据"></a>4.7.2、批量更新数据</h4><ul><li>直接调用QuerySet的 <code>update(属性 = 值)</code> 实现批量修改<ul><li>1、查      - 通过 <code>.filter(条件)</code> 得到要修改的实体对象</li><li>2、改      - 通过 <code>QuerySet.update(属性 = 值)</code> 的方式修改数据</li></ul></li></ul><h3 id="4-8、删除操作"><a href="#4-8、删除操作" class="headerlink" title="4.8、删除操作"></a>4.8、删除操作</h3><h4 id="4-8-1、单个数据删除"><a href="#4-8-1、单个数据删除" class="headerlink" title="4.8.1、单个数据删除"></a>4.8.1、单个数据删除</h4><ul><li>1、查找查询结果对应的一个数据对象</li><li>2、调用这个数据对象的delete()方法实现删除</li></ul><h4 id="4-8-2、批量删除"><a href="#4-8-2、批量删除" class="headerlink" title="4.8.2、批量删除"></a>4.8.2、批量删除</h4><ul><li>1、查找查询结果集中满足条件的全部QuerySet查询集合对象</li><li>2、调用查询集合对象的delete()方法实现删除</li></ul><h4 id="4-8-3、伪删除"><a href="#4-8-3、伪删除" class="headerlink" title="4.8.3、伪删除"></a>4.8.3、伪删除</h4><ul><li>通常不会轻易在业务里把数据真正删掉，取而代之的是做伪删除，即在表中添加一个布尔型字段（is_active），默认是True；执行删除时，将删除数据的is_active字段设置为False</li><li>注意：用伪删除时，确保显示数据的地方，均加了 is_active&#x3D;True的过滤查询</li></ul><h2 id="5、F对象和Q对象"><a href="#5、F对象和Q对象" class="headerlink" title="5、F对象和Q对象"></a>5、F对象和Q对象</h2><h3 id="5-1、F对象"><a href="#5-1、F对象" class="headerlink" title="5.1、F对象"></a>5.1、F对象</h3><ul><li><p>一个F对象代表数据库中某条记录的字段的信息</p></li><li><p>作用：</p><ul><li>通常是对数据库中的字段值在不获取的情况下进行操作</li><li>用于类属性（字段）之间的比较</li></ul></li><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db.models <span class="hljs-keyword">import</span> F<br>F(<span class="hljs-string">&#x27;列名&#x27;</span>)<br></code></pre></td></tr></table></figure></li></ul><h3 id="5-2、Q对象"><a href="#5-2、Q对象" class="headerlink" title="5.2、Q对象"></a>5.2、Q对象</h3><p>当在获取查询结果集 使用复杂的<code>逻辑或 ｜</code>、<code>逻辑非 ~</code> 等操作可以借助于Q对象进行操作</p><ul><li><p>语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db.models <span class="hljs-keyword">import</span> Q<br><span class="hljs-keyword">from</span> bookstore.models <span class="hljs-keyword">import</span> Book<br><br><span class="hljs-comment"># 找出定价低于20 或 清华大学出版社 的全部书</span><br>Book.objects.<span class="hljs-built_in">filter</span>(Q(price_lt=<span class="hljs-number">20</span>)|Q(pub=<span class="hljs-string">&#x27;清华大学出版社&#x27;</span>))<br></code></pre></td></tr></table></figure></li><li><p>作用：在条件中用来实现除 and(&amp;) 以外的 or(|)、not(~)操作</p></li><li><p>运算符：</p><ul><li>&amp; 与操作</li><li>｜或操作</li><li>~ 非操作</li></ul></li></ul><h2 id="6、聚合查询和原生数据库操作"><a href="#6、聚合查询和原生数据库操作" class="headerlink" title="6、聚合查询和原生数据库操作"></a>6、聚合查询和原生数据库操作</h2><h3 id="6-1、聚合查询"><a href="#6-1、聚合查询" class="headerlink" title="6.1、聚合查询"></a>6.1、聚合查询</h3><p>聚合查询是指对一个数据表中的一个字段的数据进行部分或全部进行统计</p><p>聚合查询分为：整表聚合、分组聚合</p><h4 id="6-1-1、整表聚合"><a href="#6-1-1、整表聚合" class="headerlink" title="6.1.1、整表聚合"></a>6.1.1、整表聚合</h4><p>不带分组的聚合查询是指将全部数据进行集中统计查询</p><p>聚合函数[需要导入]:</p><pre><code class="hljs">- 导入方法：``from django.db.models import *``- 聚合函数：Sum、Avg、Count、Max、Min</code></pre><p>语法：<code>MyModel.objects.aggregate(自定义结果变量名 = 聚合函数(&#39;列&#39;))</code></p><ul><li>返回结果：结果变量名和值组成的字典<ul><li>格式为：<code>&#123;&#39;结果变量名&#39;:&#39;值&#39;&#125;</code></li></ul></li></ul><h4 id="6-1-2、分组聚合"><a href="#6-1-2、分组聚合" class="headerlink" title="6.1.2、分组聚合"></a>6.1.2、分组聚合</h4><p>分组聚合是指通过计算查询结果中每一个对象所关联的对象的集合，从而得出总计值（也可以是平均值或总和），即为查询集的每一项生成聚合</p><ul><li><p>语法：</p><ul><li><code>QuerySet.annotate(自定义结果变量名 = 聚合函数(&#39;列&#39;))</code></li></ul></li><li><p>返回值：QuerySet</p></li><li><p>步骤</p><ul><li>1、通过先用查询结果<code>MyModel.objects.values()</code> 查找查询要分组聚合的QuerySet<ul><li>MyModel.objects.values(‘列1’, ‘列2’)</li></ul></li><li>2、通过返回结果的QuerySet.annotate() 方法分组聚合得到分组结果<ul><li>QuerySet.annotate(名 &#x3D; 聚合函数(‘列’))</li></ul></li></ul></li></ul><h3 id="6-2、原生数据库操作"><a href="#6-2、原生数据库操作" class="headerlink" title="6.2、原生数据库操作"></a>6.2、原生数据库操作</h3><p>Django也支持直接用SQL语句的方式通信数据库</p><p>查询：使用<code>MyModel.objects.raw()</code>进行数据库查询操作查询</p><p>语法：<code>MyModel.objects.raw(SQL语句, 拼接参数)</code></p><p>返回值：RawQuerySet集合对象 【 只支持基础操作，比如循环 】</p><p>使用原生语句时小心SQL注入【用户通过数据上传，将恶意的SQL语句提交给服务器】</p><h4 id="cursor"><a href="#cursor" class="headerlink" title="cursor"></a>cursor</h4><p>完全跨过模型类操作数据库  -  查询&#x2F;更新&#x2F;删除</p><ul><li><p>1、导入cursor所在的包</p><ul><li><code>from django.db import connection</code></li></ul></li><li><p>2、用创建cursor类的构造函数创建cursor对象，再使用cursor对象，为保证在出现异常时能释放cursor资源，通常使用with语句进行创建操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> connection<br><br><span class="hljs-keyword">with</span> connection.cursor() <span class="hljs-keyword">as</span> cur:<br>  cur.execute(<span class="hljs-string">&#x27;执行SQL语句&#x27;</span>, <span class="hljs-string">&#x27;拼接参数&#x27;</span>)<br></code></pre></td></tr></table></figure></li></ul><h1 id="三、admin管理后台"><a href="#三、admin管理后台" class="headerlink" title="三、admin管理后台"></a>三、admin管理后台</h1><h2 id="1、介绍"><a href="#1、介绍" class="headerlink" title="1、介绍"></a>1、介绍</h2><ul><li>django提供了比较完善的后台管理数据库的借口，可供开发过程中调用和测试使用</li><li>django会搜集所有已注册的模型类，为这些模型类提供数据管理界面</li></ul><h2 id="2、admin配置步骤"><a href="#2、admin配置步骤" class="headerlink" title="2、admin配置步骤"></a>2、admin配置步骤</h2><ul><li><p>1、创建后台管理账号 - 该账号为管理后台最高权限账号</p><ul><li><code>python3 manage.py createsuperuser</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">(py36) taoaodeMacBook-Pro:mysite3 taoao$ python3 manage.py createsuperuser<br>用户名 (leave blank to use &#x27;taoao&#x27;): taoao<br>电子邮件地址: 123456@163.com<br>Password: <br>Password (again): <br>Superuser created successfully.<br>(py36) taoaodeMacBook-Pro:mysite3 taoao$ <br></code></pre></td></tr></table></figure></li><li><p>2、输入<a href="http://127.0.0.1:8000/admin/%E8%BF%9B%E5%85%A5admin%E9%A1%B5%E9%9D%A2">http://127.0.0.1:8000/admin/进入admin页面</a></p><p><img src="/img/django_img/admin.jpg" alt="admin"></p><p><img src="/img/django_img/admin2.jpg" alt="admin2"></p></li></ul><h2 id="3、注册自定义模型类"><a href="#3、注册自定义模型类" class="headerlink" title="3、注册自定义模型类"></a>3、注册自定义模型类</h2><p>若要自己定义的模型类也能在 &#x2F;admin 后台管理界面中显示和管理，需要将自己的类注册到后台管理界面</p><ul><li><p>注册步骤</p><ul><li><p>1、在应用app 的admin.py 中导入要注册和管理的模型models类，如：<code>from .models import Book</code></p><ul><li>2、调用admin.site.register方法进行注册，如：<code>admin.site.register(自定义模型类)</code></li></ul></li></ul></li></ul><p><img src="/img/django_img/%E6%B3%A8%E5%86%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E5%9E%8B%E7%B1%BB.jpg" alt="注册自定义模型类"></p><p><img src="/img/django_img/%E6%B3%A8%E5%86%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E5%9E%8B%E7%B1%BB2.jpg" alt="注册自定义模型类2"></p><h3 id="3-1、修改自定义模型类的数据样式"><a href="#3-1、修改自定义模型类的数据样式" class="headerlink" title="3.1、修改自定义模型类的数据样式"></a>3.1、修改自定义模型类的数据样式</h3><ul><li>在admin后台管理数据库中对自定义的数据记录都展示为‘xxxx object’ 类型的记录，不便于阅读和判断</li><li>在用户自定义的模型类中可以重写 def _<em>str</em>_(self)：方法解决显示问题</li></ul><h3 id="3-2、模型管理器类"><a href="#3-2、模型管理器类" class="headerlink" title="3.2、模型管理器类"></a>3.2、模型管理器类</h3><p>作用：为后台管理界面添加便于操作的新功能</p><p>说明：后台管理器类须继承自 django.contrib.admin 里的ModelAdmin 类</p><p>使用方法：</p><ul><li><p>1、在&lt;应用app&gt;&#x2F;admin.py 里定义模型管理器类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">xxxManager</span>(admin.ModelAdmin):<br>  ...<br></code></pre></td></tr></table></figure></li><li><p>2、绑定注册模型管理器类和模型类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> admin<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> *<br><br><span class="hljs-comment"># 绑定自定义模型类 与 管理器类xxxManager</span><br>admin.site.register(自定义模型类, 模型管理器类) <br></code></pre></td></tr></table></figure><p><img src="/img/django_img/%E6%A8%A1%E5%9E%8B%E7%AE%A1%E7%90%86%E5%99%A8%E7%B1%BB.jpg" alt="模型管理器类"></p><p><img src="/img/django_img/%E6%A8%A1%E5%9E%8B%E7%AE%A1%E7%90%86%E5%99%A8%E7%B1%BB2.jpg" alt="模型管理器类2"></p></li></ul><p><strong>其它功能：</strong></p><p><img src="/img/django_img/%E6%A8%A1%E5%9E%8B%E7%AE%A1%E7%90%86%E5%99%A8%E7%B1%BB%E5%85%B6%E5%AE%83%E5%8A%9F%E8%83%BD.jpg" alt="模型管理器类其它功能"></p><p><img src="/img/django_img/%E6%A8%A1%E5%9E%8B%E7%AE%A1%E7%90%86%E5%99%A8%E7%B1%BB%E5%85%B6%E5%AE%83%E5%8A%9F%E8%83%BD2.jpg" alt="模型管理器类其它功能2"></p><p>官方文档：<a href="https://docs.djangoproject.com/zh-hans/3.2/ref/contrib/admin/">https://docs.djangoproject.com/zh-hans/3.2/ref/contrib/admin/</a></p><h2 id="4、Meta内部类"><a href="#4、Meta内部类" class="headerlink" title="4、Meta内部类"></a>4、Meta内部类</h2><p>通过Meta内部类，定义模型类的属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Book</span>(models.Model):<br>title = CharField(...)<br>    <br>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">Meta</span>:<br>      db_table = <span class="hljs-string">&#x27;数据库表名&#x27;</span>  <span class="hljs-comment"># 该模型所用的数据库表的名称</span><br>        verbose_name = <span class="hljs-string">&#x27;单数名&#x27;</span>  <span class="hljs-comment"># 给模型对象的一个易于理解的名称(单数)，用于显示在 /admin 管理界面中</span><br>        verbose_name_plural = <span class="hljs-string">&#x27;复数名&#x27;</span>  <span class="hljs-comment"># 该对象复数形式的名称(复数)，用于显示在 /admin 管理界面中</span><br></code></pre></td></tr></table></figure><h1 id="四、关系映射"><a href="#四、关系映射" class="headerlink" title="四、关系映射"></a>四、关系映射</h1><h2 id="1、定义"><a href="#1、定义" class="headerlink" title="1、定义"></a>1、定义</h2><p>在关系型数据库中，通常不会把所有的数据都放在同一张表中，不易于扩展，常见的关系映射有：</p><ul><li>一对一映射</li><li>一对多映射</li><li>多对多映射</li></ul><h2 id="2、一对一映射"><a href="#2、一对一映射" class="headerlink" title="2、一对一映射"></a>2、一对一映射</h2><h3 id="2-1、创建模型类"><a href="#2-1、创建模型类" class="headerlink" title="2.1、创建模型类"></a>2.1、创建模型类</h3><ul><li><p>语法：<code>OneToOneField(类名, on_delete = xxx)</code>【on_delete ： 级联删除的规则】</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Author</span>(models.Model):<br>  ...<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Wife</span>(models.Model):<br>  属性 = models.OneToOneField(Author, on_delete = xxx)<br></code></pre></td></tr></table></figure></li><li><p>特殊字段选项【必须】</p><ul><li>on_delete   -    级联删除<ul><li>1、models.CASCADE   【 级联删除】Django模拟SQL约束<code> ON DELETE CASCADE</code>的行为，并删除包括ForeignKey的对象</li><li>2、models.PROTECT  【 删不了 】   抛出ProtectedError 以阻止被引用对象的删除，等同于MySQL默认的RESTRICT</li><li>3、SET_NULL  【 可以删 】  设置ForeignKey null，需要指定null&#x3D;True </li><li>4、SET_DEFAULT  【 可以删，将外键设置为默认值 】   将ForeignKey设置为默认值，必须制定ForeignKey的默认值</li></ul></li></ul></li></ul><h3 id="2-2、一对一中-添加数据"><a href="#2-2、一对一中-添加数据" class="headerlink" title="2.2、一对一中 添加数据"></a>2.2、一对一中 添加数据</h3><ul><li><p>1、无外建的模型类【Author】</p><ul><li><pre><code class="python">author1 = Author.objects.create(name = &#39;王老师&#39;)<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><br>- 2、有外建的模型类 【 Wife】<br><br>  - ```python<br>    <span class="hljs-comment"># 方式1   类属性名 = 实例化对象obj</span><br>    wife1 = Wife.objects.create<span class="hljs-params">(<span class="hljs-attr">name</span> = &#x27;王夫人&#x27;, <span class="hljs-attr">author</span> = author1)</span>  <span class="hljs-comment"># 关联王老师obj</span><br>    <span class="hljs-comment"># 方式2   外建字段名 = 具体的值</span><br>    wife1 = Wife.objects.create<span class="hljs-params">(<span class="hljs-attr">name</span> = &#x27;王夫人&#x27;, <span class="hljs-attr">author_id</span> = 1)</span>  <span class="hljs-comment"># 关联王老师对应的主键值</span><br></code></pre></td></tr></table></figure></code></pre></li></ul></li></ul><h3 id="2-3、一对一中-查询数据"><a href="#2-3、一对一中-查询数据" class="headerlink" title="2.3、一对一中 查询数据"></a>2.3、一对一中 查询数据</h3><ul><li><p>1、正向查询：直接通过外建属性查询，称为正向查询 </p><p><img src="/img/django_img/%E6%AD%A3%E5%90%91%E6%9F%A5%E8%AF%A2.jpg" alt="正向查询"></p></li><li><p>2、反向查询：没有外键属性的一方，可以调用反向属性查询到关联的另一方</p><ul><li>反向关联属性为：<code>实例对象.引用类名(小写)</code>，当反向引用不存在时，则会出发异常</li></ul><p><img src="/img/django_img/%E5%8F%8D%E5%90%91%E6%9F%A5%E8%AF%A2.jpg" alt="反向查询"></p></li></ul><h2 id="3、一对多映射"><a href="#3、一对多映射" class="headerlink" title="3、一对多映射"></a>3、一对多映射</h2><h3 id="3-1、创建模型类"><a href="#3-1、创建模型类" class="headerlink" title="3.1、创建模型类"></a>3.1、创建模型类</h3><ul><li><p>语法：当一个A类对象可以关联多个B类对象时.  【 ForeignKey 必须指定on_delete 模式 】</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">BanClass</span>(models.Model):  <span class="hljs-comment"># 一</span><br>  ...<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span>(models.Model):  <span class="hljs-comment"># 多</span><br>  属性 = models.ForeignKey(BanClass, on_delete=xxx)<br></code></pre></td></tr></table></figure></li></ul><h3 id="3-2、一对多中-添加数据"><a href="#3-2、一对多中-添加数据" class="headerlink" title="3.2、一对多中 添加数据"></a>3.2、一对多中 添加数据</h3><p>和 一对一 一样</p><h3 id="3-3、一对多中-查询数据"><a href="#3-3、一对多中-查询数据" class="headerlink" title="3.3、一对多中 查询数据"></a>3.3、一对多中 查询数据</h3><ul><li><p>1、正向查询  跟 一对一 一样</p></li><li><p>2、反向查询  需要用到<strong>反向属性: <code>多对象的对象名_set</code></strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">pub1 = Publisher.objects.get(name=<span class="hljs-string">&#x27;清华大学出版社&#x27;</span>)<br><span class="hljs-comment"># 方式1</span><br>books = pub1.book_set.<span class="hljs-built_in">all</span>()  <span class="hljs-comment"># 通过 book_set获取pub1 对应的多个Book数据对象</span><br><span class="hljs-comment"># 方式2</span><br><span class="hljs-comment"># books = Book.objects.filter(publisher=pub1)  # 也可以采用此方式获取</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="4、多对多映射"><a href="#4、多对多映射" class="headerlink" title="4、多对多映射"></a>4、多对多映射</h2><h3 id="4-1、创建模型类"><a href="#4-1、创建模型类" class="headerlink" title="4.1、创建模型类"></a>4.1、创建模型类</h3><p>语法：在关联的两个类中的任意一个类中，增加：<code>属性 = models.ManyToManyField(MyModel)</code></p><p>Django中无需手动创建第三张表，Django自动完成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Teacher</span>(models.Model):  <span class="hljs-comment"># 可以通过 teacher1.student_set.create新增学生 .add关联学生</span><br>  ...<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span>(models.Model):  <span class="hljs-comment"># 可以通过 student1.teachers.create新增老师 .add关联老师</span><br>  ...<br>  teachers = models.ManyToManyField(Teacher)<br></code></pre></td></tr></table></figure><h3 id="4-2、多对多中-添加数据"><a href="#4-2、多对多中-添加数据" class="headerlink" title="4.2、多对多中 添加数据"></a>4.2、多对多中 添加数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 方案1  先创建Teacher，再关联Student  # 反向添加</span><br>In [<span class="hljs-number">1</span>]: <span class="hljs-keyword">from</span> mtm.models <span class="hljs-keyword">import</span> *<br><br>In [<span class="hljs-number">2</span>]: t1 = Teacher.objects.create(name=<span class="hljs-string">&#x27;吕老师&#x27;</span>)<br><br>In [<span class="hljs-number">3</span>]: t2 = Teacher.objects.create(name=<span class="hljs-string">&#x27;王老师&#x27;</span>)<br><span class="hljs-comment"># 通过 已经创建好的老师 创建学生</span><br>In [<span class="hljs-number">4</span>]: s11 = t1.student_set.create(title=<span class="hljs-string">&#x27;Python&#x27;</span>)  <span class="hljs-comment"># 通过 student_set</span><br><span class="hljs-comment"># 通过 已经创建号的老师 关联学生</span><br>In [<span class="hljs-number">5</span>]: t2.student_set.add(book11)<br><br><span class="hljs-comment"># 方案2  先创建Student，再关联Teacher  # 正向添加</span><br>In [<span class="hljs-number">6</span>]: s1 = Student.objects.create(title=<span class="hljs-string">&#x27;林同学&#x27;</span>)<br><span class="hljs-comment"># ** obj1.属性.create()  # 通过学生 创建 老师 **</span><br>In [<span class="hljs-number">7</span>]: s1.teachers.create(name=<span class="hljs-string">&#x27;吕老师&#x27;</span>)  <br><span class="hljs-comment"># ** obj1.属性.add()  # 通过学生 关联 老师 **</span><br>In [<span class="hljs-number">8</span>]: s1.teachers.add(t11)<br></code></pre></td></tr></table></figure><h3 id="4-3、多对多中-查询数据"><a href="#4-3、多对多中-查询数据" class="headerlink" title="4.3、多对多中 查询数据"></a>4.3、多对多中 查询数据</h3><h4 id="4-3-1、正向查询。有多对多属性的对象-查-另一方"><a href="#4-3-1、正向查询。有多对多属性的对象-查-另一方" class="headerlink" title="4.3.1、正向查询。有多对多属性的对象 查 另一方"></a>4.3.1、正向查询。有多对多属性的对象 查 另一方</h4><h4 id="4-3-2、反向查询。没有多对多属性的对象-查-另一方"><a href="#4-3-2、反向查询。没有多对多属性的对象-查-另一方" class="headerlink" title="4.3.2、反向查询。没有多对多属性的对象 查 另一方"></a>4.3.2、反向查询。没有多对多属性的对象 查 另一方</h4><h1 id="五、cookies-和session"><a href="#五、cookies-和session" class="headerlink" title="五、cookies 和session"></a>五、cookies 和session</h1><h2 id="1、会话定义"><a href="#1、会话定义" class="headerlink" title="1、会话定义"></a>1、会话定义</h2><ul><li>从打开浏览器访问一个网站，到关闭浏览器结束此次访问，称之为一次会话</li><li>HTTP协议是无状态的，导致会话状态难以保持</li><li>Cookies 和Session 就是为了保持会话状态而诞生的两个存储技术</li></ul><h2 id="2、Cookies"><a href="#2、Cookies" class="headerlink" title="2、Cookies"></a>2、Cookies</h2><h3 id="2-1、定义"><a href="#2-1、定义" class="headerlink" title="2.1、定义"></a>2.1、定义</h3><p>cookies是保存在客户端浏览器上的存储空间</p><h3 id="2-2、Cookies特点"><a href="#2-2、Cookies特点" class="headerlink" title="2.2、Cookies特点"></a>2.2、Cookies特点</h3><ul><li><p><strong>cookies 在浏览器上是以键值对的形式进行存储的</strong>，键和值都是以ASCII字符串的形式存储（不能是中文字符串）</p></li><li><p>存储的数据带有生命周期</p></li><li><p>cookies 中的数据是按域存储隔离的，不同的域之间无法访问</p></li><li><p>cookies 的内部的数据会在每次访问此网址时都会携带到服务器端，如果cookies 过大会降低响应速度</p></li></ul><h3 id="2-3、Cookies的使用"><a href="#2-3、Cookies的使用" class="headerlink" title="2.3、Cookies的使用"></a>2.3、Cookies的使用</h3><h4 id="2-3-1、存储cookies"><a href="#2-3-1、存储cookies" class="headerlink" title="2.3.1、存储cookies"></a>2.3.1、存储cookies</h4><p>HttpResponse.set_cookie(key, value &#x3D; ‘’, max_age &#x3D; None, expires &#x3D; None)</p><ul><li>key：cookie的名字</li><li>value：cookie的值</li><li>max_age：cookie存活时间，单位是秒</li><li>expires：具体过期时间</li><li>当不指定max_age 和expires 时，关闭浏览器时此数据失效（二选一）</li></ul><p>示例：</p><p>在响应的时候设置：</p><p><img src="/img/django_img/set_cookies.jpg" alt="set_cookies"></p><p><img src="/img/django_img/cookies.jpg" alt="cookies"></p><p>在响应头中可以看到set-cookies的信息，<strong>用于把cookies存到本地浏览器</strong></p><p><img src="/img/django_img/set_cookies2.jpg" alt="set_cookies2"></p><h4 id="2-3-2、删除和获取cookies"><a href="#2-3-2、删除和获取cookies" class="headerlink" title="2.3.2、删除和获取cookies"></a>2.3.2、删除和获取cookies</h4><ul><li>删除Cookies<ul><li><code>HttpResponse.delete_cookie(key)</code></li><li>删除指定的key的Cookie。如果key 不存在则什么也不发生</li></ul></li><li>获取Cookies<ul><li>通过 <code>request.COOKIES</code> 绑定的字典（dict）获取客户端的COOKIES数据</li><li><code>value = request.COOKIES.get(&#39;cookies名&#39;, &#39;默认值&#39;)</code></li></ul></li></ul><p>在请求头中可以看到cookies的信息，<strong>浏览器会自动把cookie发到服务器</strong></p><p><img src="/img/django_img/get_cookies.jpg" alt="get_cookies"></p><h2 id="3、Session"><a href="#3、Session" class="headerlink" title="3、Session"></a>3、Session</h2><h3 id="3-1、定义"><a href="#3-1、定义" class="headerlink" title="3.1、定义"></a>3.1、定义</h3><p>session是在服务器上开辟一段空间用于保留浏览器和服务器交互时的重要数据</p><ul><li>实现方式<ul><li>使用session 需要在浏览器客户端启动cookie，并且在cookie中存储sessionid</li><li>每个客户端都可以在服务器端有一个独立的Session</li><li>注意：不同的请求者之间不会共享这个数据，session与请求者一一对应</li></ul></li></ul><h3 id="3-2、Session使用"><a href="#3-2、Session使用" class="headerlink" title="3.2、Session使用"></a>3.2、Session使用</h3><h4 id="3-2-1、session初始配置"><a href="#3-2-1、session初始配置" class="headerlink" title="3.2.1、session初始配置"></a>3.2.1、session初始配置</h4><ul><li><p>在settings.py中配置session</p><p>1、向INSTALLED_APPS 列表中添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">INSTALLED_APPS = [<br>  <span class="hljs-comment"># 启动 sessions 应用</span><br>  <span class="hljs-string">&#x27;django.contrib.sessions&#x27;</span>,<br>]<br></code></pre></td></tr></table></figure><p>2、向MIDDLEWARE 列表中添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">MIDDLEWARE = [<br>  <span class="hljs-comment"># 启动 Session中间件</span><br>  <span class="hljs-string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span><br>]<br></code></pre></td></tr></table></figure></li></ul><p><img src="/img/django_img/session%E9%85%8D%E7%BD%AE.jpg" alt="session配置"></p><h4 id="3-2-2、Django中使用session"><a href="#3-2-2、Django中使用session" class="headerlink" title="3.2.2、Django中使用session"></a>3.2.2、Django中使用session</h4><p>session 对象是一个类似于字典的SessionStore 类型的对象，可以用类模拟于字典的方式进行操作</p><p>session能够存储如字符串、整型、字典、列表等</p><p>1、保存session 的值到服务器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">request.session[<span class="hljs-string">&#x27;key&#x27;</span>] = value<br></code></pre></td></tr></table></figure><p><img src="/img/django_img/set_session.jpg" alt="set_session"></p><p>2、获取session的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 两种方法</span><br>value = request.session[<span class="hljs-string">&#x27;key&#x27;</span>]<br>value = request.session.get(<span class="hljs-string">&#x27;key&#x27;</span>, <span class="hljs-string">&#x27;默认值&#x27;</span>)<br></code></pre></td></tr></table></figure><p><img src="/img/django_img/session.jpg" alt="session"></p><p><img src="/img/django_img/set_session.jpg" alt="set_session"></p><p>3、删除session</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">del</span> request.session[<span class="hljs-string">&#x27;key&#x27;</span>]<br></code></pre></td></tr></table></figure><h4 id="3-2-3、settings-py-中的相关配置项"><a href="#3-2-3、settings-py-中的相关配置项" class="headerlink" title="3.2.3、settings.py 中的相关配置项"></a>3.2.3、settings.py 中的相关配置项</h4><ul><li>1、SESSION_COOKIE_AGE<ul><li>作用：指定sessionid 在cookies 中的保存时长（默认是2周），例如：</li><li><code>SESSION_COOKIE_AGE = 60 * 60 * 24 * 7 *2</code></li></ul></li><li>2、SESSION_EXPIRE_AT_BROWSER_CLOSE <ul><li>设置只要浏览器关闭时，session就失效【 默认为False 】</li></ul></li></ul><p><strong>注意：Django中的session 数据存储在数据库中，所以使用session前需要确保已经执行过 migrate</strong></p><h3 id="3-3、Django-session的问题"><a href="#3-3、Django-session的问题" class="headerlink" title="3.3、Django session的问题"></a>3.3、Django session的问题</h3><ul><li><p>1、django_session 表是单表设计；且该表数据量持续增持【浏览器故意删掉sessionid 和 过期数据未删除】</p></li><li><p>2、可以每晚执行 <code>python3 manage.py clearsessions</code> 【 该命令可删除已经过期的session数据 】</p></li></ul><h1 id="六、缓存"><a href="#六、缓存" class="headerlink" title="六、缓存"></a>六、缓存</h1><h2 id="1、缓存的定义"><a href="#1、缓存的定义" class="headerlink" title="1、缓存的定义"></a>1、缓存的定义</h2><ul><li>定义：缓存是一类可以更快的读取数据的介质统称，也指其它可以加快数据读取的存储方式。一般用来存储临时数据，常用介质的是读取速度很快的内存</li><li>意义：视图渲染有一定成本，数据库的频繁查询过高；所以对于低频变动的页面可以考虑使用缓存技术，减少实际渲染次数；用户拿到响应的时间成本会更低</li></ul><h2 id="2、缓存配置"><a href="#2、缓存配置" class="headerlink" title="2、缓存配置"></a>2、缓存配置</h2><h3 id="2-1、数据库缓存"><a href="#2-1、数据库缓存" class="headerlink" title="2.1、数据库缓存"></a>2.1、数据库缓存</h3><p><strong>将缓存的数据存储在数据库中</strong></p><p>说明：尽管存储介质没有更换，但是当把一次负责查询的结果直接存储到表中，比如多个条件的过滤查询结果，可避免重复进行复杂查询，提升效率</p><p><strong>配置：在settings.py中</strong></p><p><code>缓存配置，这里设置为数据库缓存（需要手动执行创建表的命令【python3 manage.py createcachetable 】）</code></p><p><img src="/img/django_img/%E7%BC%93%E5%AD%981.jpg" alt="缓存1"></p><h3 id="2-2、本地内存缓存"><a href="#2-2、本地内存缓存" class="headerlink" title="2.2、本地内存缓存"></a>2.2、本地内存缓存</h3><p><strong>数据缓存到服务器内存中</strong></p><p><img src="/img/django_img/%E7%BC%93%E5%AD%982.jpg" alt="缓存2"></p><h3 id="2-3、文件系统缓存"><a href="#2-3、文件系统缓存" class="headerlink" title="2.3、文件系统缓存"></a>2.3、文件系统缓存</h3><p><strong>将缓存的数据存储到本地文件中</strong></p><p><img src="/img/django_img/%E7%BC%93%E5%AD%983.jpg" alt="缓存3"></p><h2 id="3、整体缓存策略"><a href="#3、整体缓存策略" class="headerlink" title="3、整体缓存策略"></a>3、整体缓存策略</h2><h3 id="3-1、Django中使用缓存-视图函数中"><a href="#3-1、Django中使用缓存-视图函数中" class="headerlink" title="3.1、Django中使用缓存 - 视图函数中"></a>3.1、Django中使用缓存 - 视图函数中</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> django.views.decorators.cache <span class="hljs-keyword">import</span> cache_page<br><br><span class="hljs-meta">@cache_page(<span class="hljs-params"><span class="hljs-number">30</span></span>)   </span><span class="hljs-comment"># 30 -&gt;单位 s</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_view</span>(<span class="hljs-params">request</span>):<br>  ...<br></code></pre></td></tr></table></figure><h3 id="3-2、Django中使用缓存-路由中"><a href="#3-2、Django中使用缓存-路由中" class="headerlink" title="3.2、Django中使用缓存 - 路由中"></a>3.2、Django中使用缓存 - 路由中</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.views.decorators.cache <span class="hljs-keyword">import</span> cache_page<br><br>urlpatterns = [<br>   path(<span class="hljs-string">&#x27;foo/&#x27;</span>, cache_page(<span class="hljs-number">60</span>)(my_view)),  <span class="hljs-comment"># cache_page(60)</span><br>]<br></code></pre></td></tr></table></figure><h2 id="4、局部缓存策略"><a href="#4、局部缓存策略" class="headerlink" title="4、局部缓存策略"></a>4、局部缓存策略</h2>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Django</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker搭建Postgres</title>
    <link href="/2024/02/26/Docker%E6%90%AD%E5%BB%BAPostgres/"/>
    <url>/2024/02/26/Docker%E6%90%AD%E5%BB%BAPostgres/</url>
    
    <content type="html"><![CDATA[<h1 id="一、搭建Postgres"><a href="#一、搭建Postgres" class="headerlink" title="一、搭建Postgres"></a>一、搭建Postgres</h1><h2 id="1、首先拉取镜像"><a href="#1、首先拉取镜像" class="headerlink" title="1、首先拉取镜像"></a>1、首先拉取镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  ~ docker pull postgres  <br>Using default tag: latest<br>latest: Pulling from library/postgres<br>a2abf6c4d29d: Pull complete <br>e1769f49f910: Pull complete <br>33a59cfee47c: Pull complete <br>461b2090c345: Pull complete <br>8ed8ab6290ac: Pull complete <br>495e42c822a0: Pull complete <br>18e858c71c58: Pull complete <br>594792c80d5f: Pull complete <br>794976979956: Pull complete <br>eb5e1a73c3ca: Pull complete <br>6d6360292cba: Pull complete <br>131e916e1a28: Pull complete <br>757a73507e2e: Pull complete <br>Digest: sha256:f329d076a8806c0ce014ce5e554ca70f4ae9407a16bb03baa7fef287ee6371f1<br>Status: Downloaded newer image for postgres:latest<br>docker.io/library/postgres:latest<br></code></pre></td></tr></table></figure><h2 id="2、创建容器"><a href="#2、创建容器" class="headerlink" title="2、创建容器"></a>2、创建容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  ~ docker run --name postgres -e postgres_password=postgres -p 54321:5432 -itd postgres:latest<br>0a2da817f9917979cfeb50bffeb0ae301f26afc6a5b37eb6bfa0aaa806df1cef<br></code></pre></td></tr></table></figure><h2 id="3、查看容器是否创建成功"><a href="#3、查看容器是否创建成功" class="headerlink" title="3、查看容器是否创建成功"></a>3、查看容器是否创建成功</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  ~ docker ps<br>CONTAINER ID   IMAGE             COMMAND                  CREATED         STATUS         PORTS                                         NAMES<br>d55dc6eea87d   postgres:latest   &quot;docker-entrypoint.s…&quot;   4 seconds ago   Up 2 seconds   0.0.0.0:54321-&gt;5432/tcp, :::54321-&gt;5432/tcp   postgres<br></code></pre></td></tr></table></figure><h2 id="4、进入容器"><a href="#4、进入容器" class="headerlink" title="4、进入容器"></a>4、进入容器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  ~ docker exec -it postgres bash<br>root@d55dc6eea87d:/# <br></code></pre></td></tr></table></figure><h2 id="5、进入Postgres"><a href="#5、进入Postgres" class="headerlink" title="5、进入Postgres"></a>5、进入Postgres</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@d55dc6eea87d:/# psql -U postgres <br>psql (14.1 (Debian 14.1-1.pgdg110+1))<br>Type &quot;help&quot; for help.<br><br>postgres=# <br></code></pre></td></tr></table></figure><p><strong>Postgres搭建成功！</strong></p><h1 id="二、安装postgis扩展"><a href="#二、安装postgis扩展" class="headerlink" title="二、安装postgis扩展"></a>二、安装postgis扩展</h1><h2 id="1、首先进入Postgres容器内"><a href="#1、首先进入Postgres容器内" class="headerlink" title="1、首先进入Postgres容器内"></a>1、首先进入Postgres容器内</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">➜  ~ docker exec -it postgres bash<br>root@d55dc6eea87d:/# <br></code></pre></td></tr></table></figure><h2 id="2、准备工作"><a href="#2、准备工作" class="headerlink" title="2、准备工作"></a>2、准备工作</h2><h3 id="升级apt-get"><a href="#升级apt-get" class="headerlink" title="升级apt-get"></a>升级apt-get</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@d55dc6eea87d:/# apt-get update<br>Hit:1 http://security.debian.org/debian-security bullseye-security InRelease<br>Hit:2 http://apt.postgresql.org/pub/repos/apt bullseye-pgdg InRelease<br>Hit:3 http://deb.debian.org/debian bullseye InRelease<br>Hit:4 http://deb.debian.org/debian bullseye-updates InRelease<br>Reading package lists... Done<br></code></pre></td></tr></table></figure><h2 id="3、安装postgis"><a href="#3、安装postgis" class="headerlink" title="3、安装postgis"></a>3、安装postgis</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@d55dc6eea87d:/# apt-get install postgis<br>Reading package lists... Done<br>Building dependency tree... Done<br>Reading state information... Done<br>postgis is already the newest version (3.3.1+dfsg-1.pgdg110+1).<br>The following packages were automatically installed and are no longer required:<br>  postgresql-9.6 postgresql-9.6-postgis-3 postgresql-9.6-postgis-3-scripts postgresql-client-9.6 postgresql-contrib-9.6<br>Use &#x27;apt autoremove&#x27; to remove them.<br>0 upgraded, 0 newly installed, 0 to remove and 52 not upgraded.<br></code></pre></td></tr></table></figure><p><strong>查看Postgres的版本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@d55dc6eea87d:/# psql -U postgres<br>psql (14.1 (Debian 14.1-1.pgdg110+1))<br>Type &quot;help&quot; for help.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment"># 显示版本为14</span></span><br></code></pre></td></tr></table></figure><p><strong>安装指定的版本</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@d55dc6eea87d:/# apt-get install postgresql-14-postgis-3 postgresql-14-postgis-3-dbgsym postgresql-14-postgis-3-scripts<br></code></pre></td></tr></table></figure><h2 id="4、搜索下扩展是否安装"><a href="#4、搜索下扩展是否安装" class="headerlink" title="4、搜索下扩展是否安装"></a>4、搜索下扩展是否安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@d55dc6eea87d:/# find /usr -name postgis.control<br>/usr/share/postgresql/14/extension/postgis.control<br>/usr/share/postgresql/9.6/extension/postgis.control<br></code></pre></td></tr></table></figure><h2 id="5、连接Postgres，启用扩展"><a href="#5、连接Postgres，启用扩展" class="headerlink" title="5、连接Postgres，启用扩展"></a>5、连接Postgres，启用扩展</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">root@d55dc6eea87d:/# psql -U postgres<br>psql (14.1 (Debian 14.1-1.pgdg110+1))<br>Type &quot;help&quot; for help.<br><br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">postgres<span class="hljs-operator">=</span># <span class="hljs-keyword">create</span> extension postgis;<br>ERROR:  extension &quot;postgis&quot; already <span class="hljs-keyword">exists</span><br></code></pre></td></tr></table></figure><h2 id="6、测试是否启用成功"><a href="#6、测试是否启用成功" class="headerlink" title="6、测试是否启用成功"></a>6、测试是否启用成功</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql">postgres<span class="hljs-operator">=</span># <span class="hljs-keyword">select</span> postgis_full_version();<br>                                                                       postgis_full_version                                                               <br>         <br><span class="hljs-comment">-------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br> POSTGIS<span class="hljs-operator">=</span>&quot;3.3.1 3786b21&quot; [EXTENSION] PGSQL<span class="hljs-operator">=</span>&quot;140&quot; GEOS<span class="hljs-operator">=</span>&quot;3.9.0-CAPI-1.16.2&quot; PROJ<span class="hljs-operator">=</span>&quot;7.2.1&quot; LIBXML<span class="hljs-operator">=</span>&quot;2.9.10&quot; LIBJSON<span class="hljs-operator">=</span>&quot;0.15&quot; LIBPROTOBUF<span class="hljs-operator">=</span>&quot;1.3.3&quot; WAGYU<span class="hljs-operator">=</span>&quot;0.5.0 (Internal)&quot;<br>(<span class="hljs-number">1</span> <span class="hljs-type">row</span>)<br><br><br></code></pre></td></tr></table></figure><p><strong>启用postgis扩展成功</strong></p>]]></content>
    
    
    <categories>
      
      <category>安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Postgres</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL笔记汇总</title>
    <link href="/2024/02/26/MySQL%E7%AC%94%E8%AE%B0%E6%B1%87%E6%80%BB/"/>
    <url>/2024/02/26/MySQL%E7%AC%94%E8%AE%B0%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[<h2 id="一、SQL通用语法"><a href="#一、SQL通用语法" class="headerlink" title="一、SQL通用语法"></a>一、SQL通用语法</h2><h3 id="1、SQL通用语法"><a href="#1、SQL通用语法" class="headerlink" title="1、SQL通用语法"></a>1、SQL通用语法</h3><p>1、SQL语句可以单行或多行书写，以分号结尾</p><p>2、SQL语句可以使用空格&#x2F;缩进来增强语句的可读性</p><p>3、MySQL数据库的SQL语句不区分大小写，建议关键字使用大写</p><p>4、注释：</p><ul><li>单行注释：– 注释内容  或  # 注释内容（MySQL特有）</li><li>多行注释：&#x2F;* 注释内容 *&#x2F;</li></ul><h3 id="2、SQL分类"><a href="#2、SQL分类" class="headerlink" title="2、SQL分类"></a>2、SQL分类</h3><ol><li>DDL：数据定义语言，用来定义数据库对象（数据库、表、字段）</li><li>DML：数据操作语言，用来对数据库表中的数据进行增删改</li><li>DQL：数据查询语言，用来查询数据库中表的记录</li><li>DCL：数据控制语言，用来创建数据库用户、控制数据库的访问权限</li></ol><h3 id="3、DDL数据定义语言"><a href="#3、DDL数据定义语言" class="headerlink" title="3、DDL数据定义语言"></a>3、DDL数据定义语言</h3><h4 id="3-1、DDL-数据库操作"><a href="#3-1、DDL-数据库操作" class="headerlink" title="3.1、DDL-数据库操作"></a>3.1、DDL-数据库操作</h4><p>1、查询：</p><ul><li><p>查询所有数据库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> databases;<br></code></pre></td></tr></table></figure></li><li><p>查询当前数据库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> database();<br></code></pre></td></tr></table></figure></li></ul><p>2、创建：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 语法</span><br><span class="hljs-keyword">create</span> datebase [if <span class="hljs-keyword">not</span> <span class="hljs-keyword">exists</span>] 数据库名 [<span class="hljs-keyword">default</span> charset 字符集] [<span class="hljs-keyword">collate</span> 排序规则];<br><br># 举例： 创建数据库并指定默认字符集为 utf8mb4<br><span class="hljs-keyword">create</span> database 数据库名 <span class="hljs-keyword">default</span> charset utf8mb4;<br></code></pre></td></tr></table></figure><p>3、删除：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> database [if <span class="hljs-keyword">exists</span>] 数据库名;<br></code></pre></td></tr></table></figure><p>4、使用：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">use 数据库名;<br></code></pre></td></tr></table></figure><h4 id="3-2、DDL–表操作-查询"><a href="#3-2、DDL–表操作-查询" class="headerlink" title="3.2、DDL–表操作-查询"></a>3.2、DDL–表操作-查询</h4><p>1、查询当前数据库的所有表:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> tables;<br></code></pre></td></tr></table></figure><p>2、查询表结构：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">desc</span> 表名;<br></code></pre></td></tr></table></figure><p>3、查询指定表的建表语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> 表名;<br></code></pre></td></tr></table></figure><h4 id="3-3、DDL-表操作-创建"><a href="#3-3、DDL-表操作-创建" class="headerlink" title="3.3、DDL-表操作-创建"></a>3.3、DDL-表操作-创建</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span>  <span class="hljs-keyword">table</span>  表名(<br>    字段<span class="hljs-number">1</span>  字段<span class="hljs-number">1</span>类型[comment  字段<span class="hljs-number">1</span>注释],<br>    字段<span class="hljs-number">2</span>  字段<span class="hljs-number">2</span>类型[comment  字段<span class="hljs-number">2</span>注释],<br>    字段<span class="hljs-number">3</span>  字段<span class="hljs-number">3</span>类型[comment  字段<span class="hljs-number">3</span>注释],<br>    ...<br>    字段n  字段n类型[comment  字段n注释]<br>)[comment  表注释];<br></code></pre></td></tr></table></figure><h4 id="3-4、DDL-数据类型"><a href="#3-4、DDL-数据类型" class="headerlink" title="3.4、DDL-数据类型"></a>3.4、DDL-数据类型</h4><p>1、数值类型</p><table><thead><tr><th>类型</th><th>大小</th><th>有符号(SIGNED)范围</th><th>无符号(UNSIGNED)范围</th><th>描述</th></tr></thead><tbody><tr><td>TINYINT</td><td>1 byte</td><td>(-128，127)</td><td>(0，255)</td><td>小整数值</td></tr><tr><td>SMALLINT</td><td>2 bytes</td><td>(-32768，32767)</td><td>(0，65535)</td><td>大整数值</td></tr><tr><td>MEDIUMINT</td><td>3 bytes</td><td>(-8388608，8388607)</td><td>(0，16777215)</td><td>大整数值</td></tr><tr><td>INT或INTEGER</td><td>4 bytes</td><td>(-2147483648，2147483647)</td><td>(0，4294967295)</td><td>大整数值</td></tr><tr><td>BIGINT</td><td>8 bytes</td><td>(-2^63，2^63-1)</td><td>(0，2^64-1)</td><td>极大整数值</td></tr><tr><td>FLOAT</td><td>4 bytes</td><td>(-3.402823466 E+38，3.402823466351 E+38)</td><td>0 和 (1.175494351 E-38，3.402823466 E+38)</td><td>单精度浮点数值</td></tr><tr><td>DOUBLE</td><td>8 bytes</td><td>(-1.7976931348623157 E+308，1.7976931348623157 E+308)</td><td>0 和 (2.2250738585072014 E-308，1.7976931348623157 E+308)</td><td>双精度浮点数值</td></tr><tr><td>DECIMAL</td><td></td><td>依赖于M(精度)和D(标度)的值</td><td>依赖于M(精度)和D(标度)的值</td><td>小数值(精确定点数)</td></tr></tbody></table><p>2、字符串类型</p><table><thead><tr><th>类型</th><th>大小</th><th>描述</th></tr></thead><tbody><tr><td>CHAR</td><td>0-255 bytes</td><td>定长字符串</td></tr><tr><td>VARCHAR</td><td>0-65535 bytes</td><td>变长字符串</td></tr><tr><td>TINYBLOB</td><td>0-255 bytes</td><td>不超过255个字符的二进制数据</td></tr><tr><td>TINYTEXT</td><td>0-255 bytes</td><td>短文本字符串</td></tr><tr><td>BLOB</td><td>0-65 535 bytes</td><td>二进制形式的长文本数据</td></tr><tr><td>TEXT</td><td>0-65 535 bytes</td><td>长文本数据</td></tr><tr><td>MEDIUMBLOB</td><td>0-16 777 215 bytes</td><td>二进制形式的中等长度文本数据</td></tr><tr><td>MEDIUMTEXT</td><td>0-16 777 215 bytes</td><td>中等长度文本数据</td></tr><tr><td>LONGBLOB</td><td>0-4 294 967 295 bytes</td><td>二进制形式的极大文本数据</td></tr><tr><td>LONGTEXT</td><td>0-4 294 967 295 bytes</td><td>极大文本数据</td></tr></tbody></table><p>3、日期时间类型</p><table><thead><tr><th>类型</th><th>大小</th><th>范围</th><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>DATE</td><td>3</td><td>1000-01-01 至 9999-12-31</td><td>YYYY-MM-DD</td><td>日期值</td></tr><tr><td>TIME</td><td>3</td><td>-838:59:59 至 838:59:59</td><td>HH:MM:SS</td><td>时间值或持续时间</td></tr><tr><td>YEAR</td><td>1</td><td>1901 至 2155</td><td>YYYY</td><td>年份值</td></tr><tr><td>DATETIME</td><td>8</td><td>1000-01-01 00:00:00 至 9999-12-31 23:59:59</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值</td></tr><tr><td>TIMESTAMP</td><td>4</td><td>1970-01-01 00:00:01 至 2038-01-19 03:14:07</td><td>YYYY-MM-DD HH:MM:SS</td><td>混合日期和时间值，时间戳</td></tr></tbody></table><h4 id="3-5、DDL–表操作-修改"><a href="#3-5、DDL–表操作-修改" class="headerlink" title="3.5、DDL–表操作-修改"></a>3.5、DDL–表操作-修改</h4><p>1、表中新增字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">add</span> 字段名 类型(长度) [comment 注释] [约束];<br></code></pre></td></tr></table></figure><p>2、修改数据类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 modify 字段名 新数据类型(长度);<br></code></pre></td></tr></table></figure><p>3、修改字段名和字段类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 change 旧字段名 新字段名 类型[长度] [comment 注释] [约束];<br></code></pre></td></tr></table></figure><p>4、删除字段：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">drop</span> 字段名;<br></code></pre></td></tr></table></figure><p>5、修改表名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 rename <span class="hljs-keyword">to</span> 新表名;<br></code></pre></td></tr></table></figure><h4 id="3-6、DDL–表操作-删除"><a href="#3-6、DDL–表操作-删除" class="headerlink" title="3.6、DDL–表操作-删除"></a>3.6、DDL–表操作-删除</h4><p>1、删除表:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> [if <span class="hljs-keyword">exists</span>] 表名;<br></code></pre></td></tr></table></figure><p>2、删除指定表，并重新创建该表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">truncate</span> <span class="hljs-keyword">table</span> 表名;<br></code></pre></td></tr></table></figure><h3 id="4、DML数据操作语言"><a href="#4、DML数据操作语言" class="headerlink" title="4、DML数据操作语言"></a>4、DML数据操作语言</h3><h4 id="4-1、DML-添加数据"><a href="#4-1、DML-添加数据" class="headerlink" title="4.1、DML-添加数据"></a>4.1、DML-添加数据</h4><p>1、给指定字段添加数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> 表名(字段名<span class="hljs-number">1</span>，字段名<span class="hljs-number">2</span>,...) <span class="hljs-keyword">values</span>(值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>,...);<br></code></pre></td></tr></table></figure><p>2、全部字段添加数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> 表名 <span class="hljs-keyword">values</span>(值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>,...);<br></code></pre></td></tr></table></figure><p>3、批量添加数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">insert</span>  <span class="hljs-keyword">into</span>  表名(字段名<span class="hljs-number">1</span>，字段名<span class="hljs-number">2</span>,...)  <span class="hljs-keyword">values</span>(值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>,...),(值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>,...),(值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>,...),...;<br><span class="hljs-keyword">insert</span>  <span class="hljs-keyword">into</span>  表名  <span class="hljs-keyword">values</span>(值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>,...),(值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>,...),...;<br></code></pre></td></tr></table></figure><h4 id="4-2、DML-修改数据"><a href="#4-2、DML-修改数据" class="headerlink" title="4.2、DML-修改数据"></a>4.2、DML-修改数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> 表名 <span class="hljs-keyword">set</span> 字段名<span class="hljs-number">1</span><span class="hljs-operator">=</span>值<span class="hljs-number">1</span>，字段名<span class="hljs-number">2</span><span class="hljs-operator">=</span>值<span class="hljs-number">2</span>,... [<span class="hljs-keyword">where</span> 条件];<br></code></pre></td></tr></table></figure><h4 id="4-3、DML-删除数据"><a href="#4-3、DML-删除数据" class="headerlink" title="4.3、DML-删除数据"></a>4.3、DML-删除数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> 表名 [<span class="hljs-keyword">where</span> 条件];<br></code></pre></td></tr></table></figure><h3 id="5、DQL-数据查询语言"><a href="#5、DQL-数据查询语言" class="headerlink" title="5、DQL-数据查询语言"></a>5、DQL-数据查询语言</h3><h4 id="5-1、DQL-语法"><a href="#5-1、DQL-语法" class="headerlink" title="5.1、DQL-语法"></a>5.1、DQL-语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span><br>    字段列表<br><span class="hljs-keyword">from</span><br>    表名<br><span class="hljs-keyword">where</span><br>    条件列表<br><span class="hljs-keyword">group</span>  <span class="hljs-keyword">by</span><br>    分组字段列表<br><span class="hljs-keyword">having</span><br>    分组后条件列表<br><span class="hljs-keyword">order</span>  <span class="hljs-keyword">by</span><br>    排序字段列表<br>limit<br>    分页参数<br></code></pre></td></tr></table></figure><h4 id="5-2、DQL-基本查询"><a href="#5-2、DQL-基本查询" class="headerlink" title="5.2、DQL-基本查询"></a>5.2、DQL-基本查询</h4><p>1、去重<code>distinct</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> 字段列表 <span class="hljs-keyword">from</span> 表名;<br></code></pre></td></tr></table></figure><p>2、条件运算符</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">&gt;大于<br>&lt;小于<br>&gt;=大于等于<br>&lt;= 小于等于<br><span class="hljs-section">=等于</span><br>&lt;&gt; 或 != 不等于<br>between...and...在某个范围之内（含最小、最大值）<br>in(...)在in之后的列表中的值，多选一<br>like  占位符模糊匹配（_ 匹配单个字符，% 匹配多个字符）<br>is  null 是null<br>and  或  &amp;&amp;并且<br>or  或  || 或者<br>not  或  ! 非<br></code></pre></td></tr></table></figure><h4 id="5-3、DQL-聚合查询"><a href="#5-3、DQL-聚合查询" class="headerlink" title="5.3、DQL-聚合查询"></a>5.3、DQL-聚合查询</h4><p>count()、max()、min()、avg()、sum()</p><h4 id="5-4、DQL-分组查询-group-by"><a href="#5-4、DQL-分组查询-group-by" class="headerlink" title="5.4、DQL-分组查询 group by"></a>5.4、DQL-分组查询 <code>group by</code></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表名 [<span class="hljs-keyword">where</span> 条件] <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> 分组字段名 [<span class="hljs-keyword">having</span> 分组后过滤条件];<br></code></pre></td></tr></table></figure><ul><li><p>where 和 having 区别：</p></li><li><ul><li>执行时机不同：where是分组之前进行过滤，不满足where条件的不参与分组；而having是分组之后对结果进行过滤</li><li>判断条件不同：where不能对聚合函数进行判断，而having可以</li></ul></li><li><p>执行顺序：where &gt; 聚合函数 &gt; having</p></li><li><p>分组之后，查询的字段一般为聚合函数和分组字段，查询其他字段无任何意义。</p><h4 id="5-5、DQL-排序查询order-by"><a href="#5-5、DQL-排序查询order-by" class="headerlink" title="5.5、DQL-排序查询order by"></a>5.5、DQL-排序查询<code>order by</code></h4></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> 字段<span class="hljs-number">1</span> 排序方式<span class="hljs-number">1</span>,字段<span class="hljs-number">2</span> 排序方式<span class="hljs-number">2.</span>..;<br></code></pre></td></tr></table></figure><p>排序方式：</p><ul><li><p>asc升序（默认值）</p></li><li><p>desc              降序</p><h4 id="5-6、DQL-分页查询limit"><a href="#5-6、DQL-分页查询limit" class="headerlink" title="5.6、DQL-分页查询limit"></a>5.6、DQL-分页查询<code>limit</code></h4></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表名 limit 起始索引，查询记录数；<br></code></pre></td></tr></table></figure><ul><li>注意：</li><li><ul><li>起始索引从0开始，起始索引&#x3D;（查询页码 - 1）* 每页显示记录数</li><li>分页查询是数据库的方言，不同数据库有不同的实现，MySQL中是limit</li><li>如果查询的是第一页的数据，起始索引可以省略，直接简写为limit  10</li></ul></li></ul><h4 id="5-7、DQL-执行顺序"><a href="#5-7、DQL-执行顺序" class="headerlink" title="5.7、DQL-执行顺序"></a>5.7、DQL-执行顺序</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span>                   <span class="hljs-number">4</span><br>    字段列表<br><span class="hljs-keyword">from</span>                     <span class="hljs-number">1</span><br>    表名<br><span class="hljs-keyword">where</span>                    <span class="hljs-number">2</span><br>    条件列表<br><span class="hljs-keyword">group</span>  <span class="hljs-keyword">by</span>                <span class="hljs-number">3</span><br>    分组字段列表<br><span class="hljs-keyword">having</span>                    <br>    分组后条件列表<br><span class="hljs-keyword">order</span>  <span class="hljs-keyword">by</span>                <span class="hljs-number">5</span><br>    排序字段列表<br>limit                    <span class="hljs-number">6</span><br>    分页参数<br></code></pre></td></tr></table></figure><h3 id="6、数据控制语言"><a href="#6、数据控制语言" class="headerlink" title="6、数据控制语言"></a>6、数据控制语言</h3><h4 id="6-1、DCL-管理用户"><a href="#6-1、DCL-管理用户" class="headerlink" title="6.1、DCL-管理用户"></a>6.1、DCL-管理用户</h4><p>1、查询用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">use mysql;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span>;<br></code></pre></td></tr></table></figure><p>2、创建用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span> identified <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;密码&#x27;</span>;<br></code></pre></td></tr></table></figure><p>3、修改用户密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span> identified <span class="hljs-keyword">with</span> mysql_native_password <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;新密码&#x27;</span>;<br></code></pre></td></tr></table></figure><p>4、删除用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span>;<br></code></pre></td></tr></table></figure><p><strong>注意：主机名可以使用 % 通配，代表可以在任意主机访问本机的MySQL</strong></p><h4 id="6-2、DCL-权限控制"><a href="#6-2、DCL-权限控制" class="headerlink" title="6.2、DCL-权限控制"></a>6.2、DCL-权限控制</h4><h6 id="常用权限"><a href="#常用权限" class="headerlink" title="常用权限"></a>常用权限</h6><p>all、all  privileges   所有权限</p><p>select   查询数据</p><p>insert   插入数据</p><p>update  修改数据</p><p>delete删除数据</p><p>alter  修改表</p><p>drop  删除数据库&#x2F;表&#x2F;视图</p><p>create创建数据库&#x2F;表</p><p>1、查询权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> grants <span class="hljs-keyword">for</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span>;<br></code></pre></td></tr></table></figure><p>2、授予权限     </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">grant</span> 权限列表 <span class="hljs-keyword">on</span> 数据库名.表名 <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span>;<br></code></pre></td></tr></table></figure><p>3、撤销权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">revoke</span> 权限列表 <span class="hljs-keyword">on</span> 数据库名.表名 <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;主机名&#x27;</span>;<br></code></pre></td></tr></table></figure><p><strong>注意：可以用<code>*.*</code>表示所有数据库.所有表</strong></p><h2 id="二、常用函数"><a href="#二、常用函数" class="headerlink" title="二、常用函数"></a>二、常用函数</h2><h3 id="1、字符串函数"><a href="#1、字符串函数" class="headerlink" title="1、字符串函数"></a>1、字符串函数</h3><ul><li>concat(s1,s2,…sn)字符串拼接</li><li>lower(str)将字符串str全部转为小写</li><li>upper(str)将字符串str全部转为大写</li><li>lpad(str,n,pad)左填充，用字符串pad对str的左边进行填充，达到n个字符串长度</li><li>rpad(str,n,pad)右填充，用字符串pad对str的右边进行填充，达到n个字符串长度</li><li>trim(str)去掉字符串头部和尾部的空格</li><li>substring(str,start,len)返回从字符串str到start位置起的len个长度的字符串</li><li>substring_index(str,分隔符,第几个)</li></ul><h3 id="2、数值函数"><a href="#2、数值函数" class="headerlink" title="2、数值函数"></a>2、数值函数</h3><ul><li>ceil(x)向上取整</li><li>floor(x)向下取整</li><li>mod(x,y)返回x&#x2F;y的模    (取余数)</li><li>rand()返回0～1的随机数</li><li>round(x,y)求参数x的四舍五入的值，保留y位小数</li></ul><p></p><h3 id="3、日期函数"><a href="#3、日期函数" class="headerlink" title="3、日期函数"></a>3、日期函数</h3><ul><li>curdate()返回当前日期</li><li>curtime()返回当前时间</li><li>now()返回当前日期和时间</li><li>year(date)获取指定date的年份</li><li>month(date)获取指定date的月份</li><li>day(date)获取指定date的日期</li><li>date_add(date,interval  expr  type)返回一个日期&#x2F;时间值加上一个时间间隔expr后的时间值</li><li>datediff(date1,date2)返回起始时间date1和结束时间date2之间的天数</li></ul><h3 id="4、流程函数"><a href="#4、流程函数" class="headerlink" title="4、流程函数"></a>4、流程函数</h3><ul><li>if(value,t,f)如果value为true，则返回t，否则返回f</li><li>ifnull(value1,value2)如果value1不为空，返回value1，否则返回value2</li><li>case  when  [val1]  then  [res1]  …else  [default]  end如果val1为True，返回res1，…否则返回default默认值</li><li>case  [expr]  when  [val1] then  [res1]  …else  [default]  end如果expr的值等于val1，返回res1，…否则返回default默认值</li></ul><h2 id="三、约束"><a href="#三、约束" class="headerlink" title="三、约束"></a>三、约束</h2><p><strong>约束是作用于表中字段上的规则，用于限制存储在表中的数据。</strong></p><p><strong>分类：</strong></p><table><thead><tr><th>约束</th><th>描述</th><th>关键字</th></tr></thead><tbody><tr><td>非空约束</td><td>限制该字段的数据不能为null</td><td>not  null</td></tr><tr><td>唯一约束</td><td>保证该字段的所有数据都是唯一，不重复的</td><td>unique</td></tr><tr><td>主键约束</td><td>主键是一行数据的唯一标识，要求非空且唯一</td><td>primary  key</td></tr><tr><td>默认约束</td><td>保存数据时，如果未指定该字段的值，则采用默认值</td><td>default</td></tr><tr><td>检查约束(8.0.16版本之后)</td><td>保证字段值满足某一个条件</td><td>check</td></tr><tr><td>外键约束</td><td>用来让两张表的数据之间建立连接，保证数据的一致性和完整性</td><td>foreign  key</td></tr></tbody></table><p><strong>外键约束：</strong></p><h4 id="1、语法："><a href="#1、语法：" class="headerlink" title="1、语法："></a>1、语法：</h4><p>1、创建表的同时添加外键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> 表名(<br>  字段名 数据类型,<br>  ... <br>  [<span class="hljs-keyword">constraint</span>] [外键名称] <span class="hljs-keyword">foreign</span> key (外键字段名) <span class="hljs-keyword">references</span> 主表(主表列名)<br>);<br></code></pre></td></tr></table></figure><p>2、已经有表之后再添加外键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> 外键名称 <span class="hljs-keyword">foreign</span> key (外键字段名) <span class="hljs-keyword">references</span> 主表(主表列名);<br></code></pre></td></tr></table></figure><p>3、删除外键</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">drop</span> <span class="hljs-keyword">foreign</span> key 外键名称;<br></code></pre></td></tr></table></figure><h4 id="2、删除-更新行为"><a href="#2、删除-更新行为" class="headerlink" title="2、删除&#x2F;更新行为"></a>2、删除&#x2F;更新行为</h4><table><thead><tr><th>行为</th><th>说明</th></tr></thead><tbody><tr><td>no  action</td><td>当在父表中删除&#x2F;更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除&#x2F;更新。（与restrict一致）</td></tr><tr><td>restrict</td><td>当在父表中删除&#x2F;更新对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除&#x2F;更新。（与 no  action一致）</td></tr><tr><td>cascade</td><td>当在父表中删除&#x2F;更新对应记录时，首先检查该记录是否有对应外键，如果有，则也删除&#x2F;更新外键在子表中的记录。</td></tr><tr><td>set  null</td><td>当在父表中删除对应记录时，首先检查该记录是否有对应外键，如果有则设置子表中该外键的值为null（这就要求该外键允许为null）</td></tr><tr><td>set  default</td><td>父表有变更时，子表将外键列设置成一个默认的值（Innodb不支持）</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> 表名 <span class="hljs-keyword">add</span> <span class="hljs-keyword">constraint</span> 外键名称 <span class="hljs-keyword">foreign</span> key (外键字段) <span class="hljs-keyword">references</span> 主表名(主表字段名) <span class="hljs-keyword">on</span> <span class="hljs-keyword">update</span> cascade <span class="hljs-keyword">on</span> <span class="hljs-keyword">delete</span>  cascade; <br></code></pre></td></tr></table></figure><h2 id="四、多表查询"><a href="#四、多表查询" class="headerlink" title="四、多表查询"></a>四、多表查询</h2><h3 id="1、内连接-【求交集】"><a href="#1、内连接-【求交集】" class="headerlink" title="1、内连接  【求交集】"></a>1、内连接  【求交集】</h3><h4 id="1-1、隐式内连接："><a href="#1-1、隐式内连接：" class="headerlink" title="1.1、隐式内连接："></a>1.1、隐式内连接：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表<span class="hljs-number">1</span>，表<span class="hljs-number">2</span> <span class="hljs-keyword">where</span> 条件;<br></code></pre></td></tr></table></figure><h4 id="1-2、显式内连接："><a href="#1-2、显式内连接：" class="headerlink" title="1.2、显式内连接："></a>1.2、显式内连接：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表<span class="hljs-number">1</span> [<span class="hljs-keyword">inner</span>] <span class="hljs-keyword">join</span> 表<span class="hljs-number">2</span> <span class="hljs-keyword">on</span> 连接条件;<br></code></pre></td></tr></table></figure><h3 id="2、外连接"><a href="#2、外连接" class="headerlink" title="2、外连接"></a>2、外连接</h3><h4 id="2-1、左外连接查询左表的全部数据以及和右表交集的数据"><a href="#2-1、左外连接查询左表的全部数据以及和右表交集的数据" class="headerlink" title="2.1、左外连接查询左表的全部数据以及和右表交集的数据"></a>2.1、左外连接<code>查询左表的全部数据以及和右表交集的数据</code></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表<span class="hljs-number">1</span> <span class="hljs-keyword">left</span> [<span class="hljs-keyword">outer</span>] <span class="hljs-keyword">join</span> 表<span class="hljs-number">2</span> <span class="hljs-keyword">on</span> 连接条件;<br></code></pre></td></tr></table></figure><h4 id="2-2、右外连接查询右表的全部数据以及和左表交集的数据"><a href="#2-2、右外连接查询右表的全部数据以及和左表交集的数据" class="headerlink" title="2.2、右外连接查询右表的全部数据以及和左表交集的数据"></a>2.2、右外连接<code>查询右表的全部数据以及和左表交集的数据</code></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表<span class="hljs-number">1</span> <span class="hljs-keyword">right</span> [<span class="hljs-keyword">outer</span>] <span class="hljs-keyword">join</span> 表<span class="hljs-number">2</span> <span class="hljs-keyword">on</span> 连接条件;<br></code></pre></td></tr></table></figure><h3 id="3、自连接"><a href="#3、自连接" class="headerlink" title="3、自连接"></a>3、自连接</h3><p><strong>自连接查询，可以是内连接查询，也可以是外连接查询</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表A 别名<span class="hljs-number">1</span> [<span class="hljs-keyword">inner</span><span class="hljs-operator">/</span><span class="hljs-keyword">left</span><span class="hljs-operator">/</span><span class="hljs-keyword">right</span>] <span class="hljs-keyword">join</span> 表A 别名 <span class="hljs-keyword">on</span> 连接条件;<br></code></pre></td></tr></table></figure><h3 id="4、联合查询union、union-all"><a href="#4、联合查询union、union-all" class="headerlink" title="4、联合查询union、union all"></a>4、联合查询<code>union、union all</code></h3><p><strong>对于union查询，就是把多次查询的结果合并起来，形成一个新的查询结果集</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表A...<br><span class="hljs-keyword">union</span> [<span class="hljs-keyword">all</span>]<br><span class="hljs-keyword">select</span> 字段列表 <span class="hljs-keyword">from</span> 表B...<br></code></pre></td></tr></table></figure><ul><li>union all 会将全部的数据直接合并在一起，union会对合并后的数据去重</li><li>对于联合查询的多张表的列数必须保持一致，字段类型也需要保持一致</li></ul><h3 id="5、子查询"><a href="#5、子查询" class="headerlink" title="5、子查询"></a>5、子查询</h3><p>SQL语句中嵌套select语句，称为<code>嵌套查询</code>,又叫<code>子查询</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表<span class="hljs-number">1</span> <span class="hljs-keyword">where</span> column1<span class="hljs-operator">=</span>(<span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表<span class="hljs-number">2.</span>..)<br></code></pre></td></tr></table></figure><p><strong>子查询外部的语句可以是 insert &#x2F; update &#x2F; delete &#x2F; select 中的任意一个</strong></p><ul><li>根据子查询结果不同，分为：<ul><li>标量子查询（子查询结果为单个值）</li><li>列子查询（子查询结果为一列）</li><li>行子查询（子查询结果为一行）</li><li>表子查询（子查询结果为多行多列）</li></ul></li><li>根据子查询位置不同，分为：where之后、from之后、select之后</li></ul><p>5.1、标量子查询</p><ul><li>常用的操作符：&#x3D;、!&#x3D;、&gt;、&gt;&#x3D;、&lt;、&lt;&#x3D;</li></ul><p>5.2、列子查询</p><ul><li>常用的操作符：in、not in、any、some、all</li></ul><table><thead><tr><th>操作符</th><th>描述</th></tr></thead><tbody><tr><td>in</td><td>在指定的集合范围之内，多选一</td></tr><tr><td>not  in</td><td>不在指定的集合范围之内</td></tr><tr><td>any</td><td>子查询返回列表中，有任意一个满足即可</td></tr><tr><td>some</td><td>与any等同，使用some的地方都可以使用any</td></tr><tr><td>all</td><td>子查询返回列表的所有值都必须满足</td></tr></tbody></table><p>5.3、行子查询</p><ul><li>常用的操作符：&#x3D;、!&#x3D;、in、not in</li></ul><p>5.4、表子查询</p><ul><li>常用的操作符：in</li></ul><h2 id="五、事务"><a href="#五、事务" class="headerlink" title="五、事务"></a>五、事务</h2><p><strong>事务是一组操作的集合，它是一个不可分割的工作单位，事务会把所有的操作作为一个整体一起向系统提交或撤销操作请求，这些操作要么同时成功，要么同时失败</strong></p><h3 id="1、事务操作方式"><a href="#1、事务操作方式" class="headerlink" title="1、事务操作方式"></a>1、事务操作方式</h3><h4 id="1-1、方式1不常用"><a href="#1-1、方式1不常用" class="headerlink" title="1.1、方式1不常用"></a>1.1、方式1<code>不常用</code></h4><h5 id="1-1-1、查看-设置事务提交方式"><a href="#1-1-1、查看-设置事务提交方式" class="headerlink" title="1.1.1、查看&#x2F;设置事务提交方式"></a>1.1.1、查看&#x2F;设置事务提交方式</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-variable">@autocommit</span>;<br><span class="hljs-keyword">set</span> @<span class="hljs-variable">@autocommit</span><span class="hljs-operator">=</span><span class="hljs-number">0</span>;# <span class="hljs-number">0</span>:不自动提交事务<span class="hljs-number">1</span>:自动提交事务<br></code></pre></td></tr></table></figure><h5 id="1-1-2、提交事务"><a href="#1-1-2、提交事务" class="headerlink" title="1.1.2、提交事务"></a>1.1.2、提交事务</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">commit</span>;<br></code></pre></td></tr></table></figure><h5 id="1-1-3、回滚事务"><a href="#1-1-3、回滚事务" class="headerlink" title="1.1.3、回滚事务"></a>1.1.3、回滚事务</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">rollback</span>;<br></code></pre></td></tr></table></figure><h4 id="1-2、方式2"><a href="#1-2、方式2" class="headerlink" title="1.2、方式2"></a>1.2、方式2</h4><h5 id="1-2-1、开启事务"><a href="#1-2-1、开启事务" class="headerlink" title="1.2.1、开启事务"></a>1.2.1、开启事务</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">start</span> transaction;<br>或<br><span class="hljs-keyword">begin</span>;<br></code></pre></td></tr></table></figure><h5 id="1-2-2、提交事务"><a href="#1-2-2、提交事务" class="headerlink" title="1.2.2、提交事务"></a>1.2.2、提交事务</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">commit</span>;<br></code></pre></td></tr></table></figure><h5 id="1-2-3、回滚事务"><a href="#1-2-3、回滚事务" class="headerlink" title="1.2.3、回滚事务"></a>1.2.3、回滚事务</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">rollback</span>;<br></code></pre></td></tr></table></figure><h3 id="2、事务的四大特性："><a href="#2、事务的四大特性：" class="headerlink" title="2、事务的四大特性："></a>2、事务的四大特性：</h3><ul><li>原子性（Atomicity）：事务是不可分割的最小操作单元，要么全部成功，要么全部失败。</li><li>一致性（Consistency）：事务完成时，必须使所有的数据都保持一直状态。</li><li>隔离性（Isolation）：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行。</li><li>持久性（Durability）：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的。</li></ul><h3 id="3、并发事务问题："><a href="#3、并发事务问题：" class="headerlink" title="3、并发事务问题："></a>3、并发事务问题：</h3><table><thead><tr><th align="left">问题</th><th>描述</th></tr></thead><tbody><tr><td align="left">脏读</td><td>一个事务读到另外一个事务还没有提交的数据。</td></tr><tr><td align="left">不可重复读</td><td>一个事务先后读取同一条记录，但两次读取的数据不同。称为不可重复读</td></tr><tr><td align="left">幻读</td><td>一个事务按照条件查询数据时，没有对应的数据行，但是在插入数据时，又发现这行数据已经存在</td></tr></tbody></table><h3 id="4、事务隔离级别"><a href="#4、事务隔离级别" class="headerlink" title="4、事务隔离级别"></a>4、事务隔离级别</h3><p><strong>√  代表会出现</strong></p><table><thead><tr><th><strong>隔离级别</strong></th><th><strong>脏读</strong></th><th><strong>不可重复读</strong></th><th><strong>幻读</strong></th></tr></thead><tbody><tr><td><strong>Read uncommitted</strong> <strong>读未提交</strong></td><td>√</td><td>√</td><td>√</td></tr><tr><td><strong>Read committed</strong> <strong>读已提交</strong></td><td>×</td><td>√</td><td>√</td></tr><tr><td><strong>Repeatable Read(默认)</strong> <strong>可重复读</strong></td><td>×</td><td>×</td><td>√</td></tr><tr><td><strong>Serializable</strong>  <strong>串行化</strong></td><td>×</td><td>×</td><td>×</td></tr></tbody></table><h4 id="4-1、查看事务隔离级别"><a href="#4-1、查看事务隔离级别" class="headerlink" title="4.1、查看事务隔离级别"></a>4.1、查看事务隔离级别</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> @<span class="hljs-variable">@transaction_isolation</span>;<br></code></pre></td></tr></table></figure><h4 id="4-2、设置事务隔离级别"><a href="#4-2、设置事务隔离级别" class="headerlink" title="4.2、设置事务隔离级别"></a>4.2、设置事务隔离级别</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">set</span> [session<span class="hljs-operator">|</span><span class="hljs-keyword">global</span>] transaction isolation level &#123;read uncommitted<span class="hljs-operator">|</span>read committed<span class="hljs-operator">|</span>repeatable read<span class="hljs-operator">|</span>serializable&#125;；<br></code></pre></td></tr></table></figure><ul><li>session：代表只在当前会话窗口有效</li><li>global：所有客户端都有效</li></ul><p><strong>注意：事务隔离级别越高，数据越安全，但是性能越低</strong></p><hr><h2 id="六、存储引擎"><a href="#六、存储引擎" class="headerlink" title="六、存储引擎"></a>六、存储引擎</h2><p><strong>存储引擎就是存储数据、建立索引、更新&#x2F;查询数据等技术的实现方式 存储引擎是基于表的，而不是基于库的，所以存储引擎也可被称为表类型。</strong></p><p><strong>我们可以在创建表的时候，来指定选择的存储引擎，如果没有指定将自动选择默认的存储引擎。</strong></p><h3 id="1、建表时指定存储引擎"><a href="#1、建表时指定存储引擎" class="headerlink" title="1、建表时指定存储引擎"></a>1、建表时指定存储引擎</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> 表名( <br>    字段<span class="hljs-number">1</span> 字段<span class="hljs-number">1</span>类型 [COMMENT 字段<span class="hljs-number">1</span>注释], <br>    ...<br>    字段n 字段n类型 [COMMENT 字段n注释] <br>) ENGINE <span class="hljs-operator">=</span> INNODB [COMMENT 表注释];<br></code></pre></td></tr></table></figure><h3 id="2、查询当前数据库支持的存储引擎"><a href="#2、查询当前数据库支持的存储引擎" class="headerlink" title="2、查询当前数据库支持的存储引擎"></a>2、查询当前数据库支持的存储引擎</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> engines;<br></code></pre></td></tr></table></figure><h3 id="3、InnoDB"><a href="#3、InnoDB" class="headerlink" title="3、InnoDB"></a>3、InnoDB</h3><p><strong>InnoDB是一种兼顾高可靠性和高性能的通用存储引擎，在 MySQL 5.5 之后，InnoDB是默认MySQL 存储引擎。</strong></p><h4 id="3-1、特点："><a href="#3-1、特点：" class="headerlink" title="3.1、特点："></a>3.1、特点：</h4><ul><li><ul><li>DML操作遵循ACID模型，支持事务；</li><li>行级锁，提高并发访问性能；</li><li>支持外键FOREIGN KEY约束，保证数据的完整性和正确性；</li></ul></li></ul><h4 id="3-2、文件"><a href="#3-2、文件" class="headerlink" title="3.2、文件"></a>3.2、文件</h4><ul><li><ul><li><p>xxx.ibd：xxx代表的是表名，innoDB引擎的每张表都会对应这样一个表空间文件，存储该表的表结构（frm-早期的 、sdi-新版的）、数据和索引。</p></li><li><p>参数：innodb_file_per_table</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;innodb_file_per_table&#x27;</span><br></code></pre></td></tr></table></figure></li></ul></li></ul><h4 id="3-3、结构："><a href="#3-3、结构：" class="headerlink" title="3.3、结构："></a>3.3、结构：</h4><ul><li><strong>表空间</strong> : InnoDB存储引擎逻辑结构的最高层，ibd文件其实就是表空间文件，在表空间中可以包含多个Segment段。</li><li><strong>段</strong> : 表空间是由各个段组成的， 常见的段有数据段、索引段、回滚段等。InnoDB中对于段的管理，都是引擎自身完成，不需要人为对其控制，一个段中包含多个区。</li><li><strong>区</strong> : 区是表空间的单元结构，每个区的大小为1M。 默认情况下， InnoDB存储引擎页大小为16K， 即一个区中一共有64个连续的页。</li><li><strong>页</strong> : 页是组成区的最小单元，<strong>页也是InnoDB 存储引擎磁盘管理的最小单元</strong>，每个页的大小默认为 16KB。为了保证页的连续性，InnoDB 存储引擎每次从磁盘申请 4-5 个区。</li><li><strong>行</strong> : InnoDB 存储引擎是面向行的，也就是说数据是按行进行存放的，在每一行中除了定义表时所指定的字段以外，还包含两个隐藏字段。</li></ul><h3 id="4、存储引擎选择"><a href="#4、存储引擎选择" class="headerlink" title="4、存储引擎选择"></a>4、存储引擎选择</h3><p><img src="/img/mysql_img/%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E.jpg"></p><ul><li>InnoDB: 是Mysql的默认存储引擎，支持事务、外键。如果应用对事务的完整性有比较高的要求，在并发条件下要求数据的一致性，数据操作除了插入和查询之外，还包含很多的更新、删除操作，那么InnoDB存储引擎是比较合适的选择。</li><li>MyISAM ： 如果应用是以读操作和插入操作为主，只有很少的更新和删除操作，并且对事务的完整性、并发性要求不是很高，那么选择这个存储引擎是非常合适的。</li><li>MEMORY：将所有数据保存在内存中，访问速度快，通常用于临时表及缓存。MEMORY的缺陷就是对表的大小有限制，太大的表无法缓存在内存中，而且无法保障数据的安全性。</li></ul><h2 id="七、索引"><a href="#七、索引" class="headerlink" title="七、索引"></a>七、索引</h2><p><strong>索引（index）是帮助MySQL高效获取数据的数据结构(有序)。在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据， 这样就可以在这些数据结构上实现高级查找算法，这种数据结构就是索引。</strong></p><h3 id="1、索引的特点"><a href="#1、索引的特点" class="headerlink" title="1、索引的特点"></a>1、索引的特点</h3><table><thead><tr><th><strong>优势</strong></th><th><strong>劣势</strong></th></tr></thead><tbody><tr><td>提高数据检索的效率，降低数据库的IO成本</td><td>索引列也是要占用空间的。</td></tr><tr><td>通过索引列对数据进行排序，降低数据排序的成本，降低CPU的消耗</td><td>索引大大提高了查询效率，同时却也降低更新表的速度，如对表进行INSERT、UPDATE、DELETE时，效率降低。</td></tr></tbody></table><h3 id="2、索引的结构：B-Tree"><a href="#2、索引的结构：B-Tree" class="headerlink" title="2、索引的结构：B+Tree"></a>2、索引的结构：<code>B+Tree</code></h3><ul><li>二叉树缺点：顺序插入时会形成一个链表，查询性能大大降低。大数据量的情况下，层级较深，检索速度慢。</li><li>B-Tree（多路平衡查找树）</li><li>Hash：哈希索引就是采用一定的hash算法将键值换算成新的hash值映射到对应的槽位上，存储在hash表中</li></ul><p><strong>为什么InnoDB存储引擎选择使用B+Tree索引结构？</strong></p><ul><li>1、 相对于二叉树，层级更少，搜索效率高；</li><li>2、 对于B-tree，无论是叶子节点还是非叶子节点，都会保存数据，这样导致一页中存储的键值减少，指针跟着减少，要同样保存大量数据，只能增加树的高度，导致性能降低；</li><li>3、 相对Hash索引，B+tree支持范围匹配及排序操作；</li></ul><h3 id="3、索引的分类"><a href="#3、索引的分类" class="headerlink" title="3、索引的分类"></a>3、索引的分类</h3><table><thead><tr><th><strong>分类</strong></th><th><strong>含义</strong></th><th><strong>特点</strong></th><th><strong>关键字</strong></th></tr></thead><tbody><tr><td>主键索引</td><td>针对于表中主键创建的索引</td><td>默认自动创建, 只能有一个</td><td>PRIMARY</td></tr><tr><td>唯一索引</td><td>避免同一个表中某数据列中的值重复</td><td>可以有多个</td><td>UNIQUE</td></tr><tr><td>常规索引</td><td>快速定位特定数据</td><td>可以有多个</td><td></td></tr><tr><td>全文索引</td><td>全文索引查找的是文本中的关键词，而不是比较索引中的值</td><td>可以有多个</td><td>FULLTEXT</td></tr></tbody></table><p><strong>在InnoDB存储引擎中，根据索引的存储形式，又可以分为以下两种：</strong></p><table><thead><tr><th><strong>分类</strong></th><th><strong>含义</strong></th><th><strong>特点</strong></th></tr></thead><tbody><tr><td>聚集索引(Clustered Index)</td><td>将数据存储与索引放到了一块，索引结构的叶子节点保存了行数据</td><td>必须有,而且只有一个</td></tr><tr><td>二级索引(Secondary Index)</td><td>将数据与索引分开存储，索引结构的叶子节点关联的是对应的主键</td><td>可以存在多个</td></tr></tbody></table><h4 id="聚集索引选取规则"><a href="#聚集索引选取规则" class="headerlink" title="聚集索引选取规则"></a>聚集索引选取规则</h4><ul><li>如果存在主键，主键索引就是聚集索引。</li><li>如果不存在主键，将使用第一个唯一（UNIQUE）索引作为聚集索引。</li><li>如果表没有主键，或没有合适的唯一索引，则InnoDB会自动生成一个rowid作为隐藏的聚集索引。</li></ul><h4 id="面试题：InnoDB主键索引的B-tree高度为多高呢"><a href="#面试题：InnoDB主键索引的B-tree高度为多高呢" class="headerlink" title="面试题：InnoDB主键索引的B+tree高度为多高呢?"></a>面试题：<strong>InnoDB主键索引的B+tree高度为多高呢?</strong></h4><p><img src="/img/mysql_img/%E7%B4%A2%E5%BC%95.jpg"></p><p><img src="/img/mysql_img/%E7%B4%A2%E5%BC%952.jpg"></p><h3 id="4、索引语法"><a href="#4、索引语法" class="headerlink" title="4、索引语法"></a>4、索引语法</h3><h4 id="4-1、创建索引"><a href="#4-1、创建索引" class="headerlink" title="4.1、创建索引"></a>4.1、创建索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> [<span class="hljs-keyword">unique</span><span class="hljs-operator">|</span>fulltext] index 索引名 <span class="hljs-keyword">on</span> (字段名,...);<br></code></pre></td></tr></table></figure><h4 id="4-2、查看索引"><a href="#4-2、查看索引" class="headerlink" title="4.2、查看索引"></a>4.2、查看索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> index <span class="hljs-keyword">from</span> 表名;<br></code></pre></td></tr></table></figure><h4 id="4-3、删除索引"><a href="#4-3、删除索引" class="headerlink" title="4.3、删除索引"></a>4.3、删除索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> index 索引名 <span class="hljs-keyword">on</span> 表名;<br></code></pre></td></tr></table></figure><h3 id="5、SQL性能分析"><a href="#5、SQL性能分析" class="headerlink" title="5、SQL性能分析"></a>5、SQL性能分析</h3><h4 id="5-1、查看sql语句的执行频次"><a href="#5-1、查看sql语句的执行频次" class="headerlink" title="5.1、查看sql语句的执行频次"></a>5.1、查看sql语句的执行频次</h4><p>MySQL 客户端连接成功后，通过  <code>show [session|global] status  </code> 命令可以提供服务器状态信息。通过如下指令，可以查看当前数据库的INSERT、UPDATE、DELETE、SELECT的访问频次：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- session 是查看当前会话 ; </span><br><span class="hljs-comment">-- global 是查询全局数据 ; </span><br><span class="hljs-keyword">show</span> [session <span class="hljs-operator">|</span> <span class="hljs-keyword">global</span>] status <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;Com_______&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li>Com_delete: 删除次数 </li><li>Com_insert: 插入次数</li><li>Com_select: 查询次数</li><li>Com_update: 更新次数</li></ul><h4 id="5-2、慢查询日志"><a href="#5-2、慢查询日志" class="headerlink" title="5.2、慢查询日志"></a>5.2、慢查询日志</h4><p>慢查询日志记录了所有执行时间超过指定参数（long_query_time，单位:秒，默认10秒）的所有SQL语句的日志。<br>MySQL的慢查询日志默认没有开启，我们可以查看一下系统变量 slow_query_log:<code>show variables like &#39;slow_query_log&#39;;</code><br>如果要开启慢查询日志，需要在MySQL的配置文件&#x2F;etc&#x2F;my.cnf中配置如下信息：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">开启MySQL慢日志查询开关</span> <br>slow_query_log=1 <br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置慢日志的时间为2秒，SQL语句执行时间超过2秒，就会视为慢查询，记录慢查询日志</span> <br>long_query_time=2 <br></code></pre></td></tr></table></figure><p>配置完毕之后，通过以下指令重新启动MySQL服务器进行测试，查看慢日志文件中记录的信息<code>/var/lib/mysql/localhost-slow.log</code> ,   重启MySQL服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart mysqld <br></code></pre></td></tr></table></figure><p>然后，再次查看开关情况，慢查询日志就已经打开了。</p><h4 id="5-3、profile详情"><a href="#5-3、profile详情" class="headerlink" title="5.3、profile详情"></a>5.3、profile详情</h4><p>show profiles 能够在做SQL优化时帮助我们了解时间都耗费到哪里去了。通过have_profiling参数，能够看到当前MySQL是否支持profile操作：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> @<span class="hljs-variable">@have_profiling</span> ; <br></code></pre></td></tr></table></figure><p>当前MySQL是支持 profile操作的，但是开关是关闭的。可以通过set语句在session&#x2F;global级别开启profiling：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">set</span> profiling <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><p>开关已经打开了，接下来，我们所执行的SQL语句，都会被MySQL记录，并记录执行时间消耗到哪儿去了<br>执行一系列的业务SQL的操作，然后通过如下指令查看指令的执行耗时：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查看每一条SQL的耗时基本情况 </span><br><span class="hljs-keyword">show</span> profiles; <br><span class="hljs-comment">-- 查看指定query_id的SQL语句各个阶段的耗时情况 </span><br><span class="hljs-keyword">show</span> profile <span class="hljs-keyword">for</span> query query_id; <br><span class="hljs-comment">-- 查看指定query_id的SQL语句CPU的使用情况 </span><br><span class="hljs-keyword">show</span> profile cpu <span class="hljs-keyword">for</span> query query_id;<br></code></pre></td></tr></table></figure><h4 id="5-4、explain执行计划"><a href="#5-4、explain执行计划" class="headerlink" title="5.4、explain执行计划"></a>5.4、explain执行计划</h4><p>explain 或者 desc命令获取MySQL如何执行select语句的信息，包括在select语句执行过程中表现如何连接和连接的顺序。</p><p><strong>1、语法:</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"># 直接在<span class="hljs-keyword">select</span> 语句之前加上关键字 explain <span class="hljs-operator">/</span> <span class="hljs-keyword">desc</span><br>explain <span class="hljs-keyword">select</span>语句；<br></code></pre></td></tr></table></figure><p><strong>2、explain 执行计划中各个字段的含义:</strong></p><table><thead><tr><th><strong>字段</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>id</td><td>select查询的序列号，表示查询中执行select子句或者是操作表的顺序(id相同，执行顺序从上到下；id不同，值越大，越先执行)。</td></tr><tr><td>select_type</td><td>表示 SELECT 的类型，常见的取值有 SIMPLE（简单表，即不使用表连接或者子查询）、PRIMARY（主查询，即外层的查询）、UNION（UNION 中的第二个或者后面的查询语句）、SUBQUERY（SELECT&#x2F;WHERE之后包含了子查询）等</td></tr><tr><td>type*</td><td>表示连接类型，性能由好到差的连接类型为NULL、system、const、eq_ref、ref、range、 index、all 。</td></tr><tr><td>possible_key*</td><td>显示可能应用在这张表上的索引，一个或多个。</td></tr><tr><td>key*</td><td>实际使用的索引，如果为NULL，则没有使用索引。</td></tr><tr><td>key_len*</td><td>表示索引中使用的字节数， 该值为索引字段最大可能长度，并非实际使用长度，在不损失精确性的前提下， 长越短越好 。</td></tr><tr><td>rows</td><td>MySQL认为必须要执行查询的行数，在innodb引擎的表中，是一个估计值，可能并不总是准确的。</td></tr><tr><td>filtered</td><td>表示返回结果的行数占需读取行数的百分比， filtered 的值越大越好。</td></tr><tr><td>extra*</td><td>其他</td></tr></tbody></table><p>type：<code>唯一索引或主键：const</code><code>非唯一索引:ref</code></p><h3 id="6、索引使用原则"><a href="#6、索引使用原则" class="headerlink" title="6、索引使用原则"></a>6、索引使用原则</h3><h4 id="6-1、验证索引效率"><a href="#6-1、验证索引效率" class="headerlink" title="6.1、验证索引效率"></a>6.1、验证索引效率</h4><ul><li><ul><li>在未建立索引之前，执行SQL语句  查看SQL的耗时。</li><li>针对字段创建索引</li><li>再执行相同的SQL语句，再次查看SQL的耗时</li></ul></li></ul><h4 id="6-2、最左前缀法则"><a href="#6-2、最左前缀法则" class="headerlink" title="6.2、最左前缀法则"></a>6.2、最左前缀法则</h4><ul><li><ul><li>如果索引了多列（联合索引），要遵守最左前缀法则。</li><li>最左前缀法则指的是查询<strong>从索引的最左列开始，并且不跳过索引中的列。</strong></li><li>如果跳过某一列，索引将部分失效（后面的字段索引失效）</li></ul></li></ul><h4 id="6-3、索引失效情况"><a href="#6-3、索引失效情况" class="headerlink" title="6.3、索引失效情况"></a>6.3、索引失效情况</h4><h5 id="6-3-1、范围查询"><a href="#6-3-1、范围查询" class="headerlink" title="6.3.1、范围查询"></a>6.3.1、范围查询</h5><p>联合索引中，出现范围查询(&gt;、&lt;)，范围查询右侧的列索引失效。<br>在使用联合索引时，如果需要使用范围查询，尽量带上&#x3D;号 （&gt;&#x3D;、&lt;&#x3D;）</p><h5 id="6-3-2、索引列运算"><a href="#6-3-2、索引列运算" class="headerlink" title="6.3.2、索引列运算"></a>6.3.2、索引列运算</h5><p>在索引列上进行运算操作，索引将失效</p><h5 id="6-3-3、字符串不加引号"><a href="#6-3-3、字符串不加引号" class="headerlink" title="6.3.3、字符串不加引号"></a>6.3.3、字符串不加引号</h5><p>字符串类型字段使用时，不加引号，索引将失效</p><h5 id="6-3-4、模糊查询"><a href="#6-3-4、模糊查询" class="headerlink" title="6.3.4、模糊查询"></a>6.3.4、模糊查询</h5><p>如果仅仅是尾部模糊匹配，索引不会失效；<br>如果是头部模糊匹配，索引失效</p><h5 id="6-3-5、or-连接的条件"><a href="#6-3-5、or-连接的条件" class="headerlink" title="6.3.5、or 连接的条件"></a>6.3.5、or 连接的条件</h5><p>用 or 分隔开的条件，如果 or 前的条件中的列有索引，而后面的列中没有索引，那么设计的索引都不会被用到。</p><h5 id="6-3-6、数据分布影响"><a href="#6-3-6、数据分布影响" class="headerlink" title="6.3.6、数据分布影响"></a>6.3.6、数据分布影响</h5><p>如果MySQL评估使用索引会比全表更慢，则不使用索引。</p><h4 id="6-4、SQL提示："><a href="#6-4、SQL提示：" class="headerlink" title="6.4、SQL提示："></a>6.4、SQL提示：</h4><p>SQL提示是优化数据库的一个重要手段，简单来说，就是在SQL语句中加入一些人为的提示来达到优化操作的目的<br>有三个：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- use index使用哪个索引</span><br>explain <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名 use index(索引名) <span class="hljs-keyword">where</span>条件;<br><span class="hljs-comment">-- ignore index;不使用哪个索引</span><br>explain <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名 ignore index(索引名) <span class="hljs-keyword">where</span>条件;<br><span class="hljs-comment">-- force index;  必须使用哪个索引</span><br>explain <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 表名 force index(索引名) <span class="hljs-keyword">where</span>条件;<br></code></pre></td></tr></table></figure><h4 id="6-5、覆盖索引-回表查询"><a href="#6-5、覆盖索引-回表查询" class="headerlink" title="6.5、覆盖索引 回表查询"></a>6.5、覆盖索引 回表查询</h4><p>尽量使用覆盖索引，减少使用 select  *。<code>可以避免回表查询</code><br>覆盖索引：查询使用了索引，并且需要返回的列，在该索引中已经全部能都找到</p><table><thead><tr><th><strong>Extra</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>Using where; Using Index</td><td>查找使用了索引，但是需要的数据都在索引列中能找到，所以不需要回表查询数据</td></tr><tr><td>Using index condition</td><td>查找使用了索引，但是需要回表查询数据</td></tr></tbody></table><h4 id="6-6、前缀索引"><a href="#6-6、前缀索引" class="headerlink" title="6.6、前缀索引"></a>6.6、前缀索引</h4><p>当字段类型为字符串（varchar，text等）时，有时候需要索引很长的字符串，这会让索引变得很大，查询时，浪费大量的磁盘IO， 影响查询效率。此时可以只将字符串的一部分前缀，建立索引，这样可以大大节约索引空间，从而提高索引效率。<br><strong>语法：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> index 索引名 <span class="hljs-keyword">on</span> 表名(列名(n));<br></code></pre></td></tr></table></figure><p>前缀的长度：可以根据索引的选择性来决定，而选择性是指不重复的索引值（基数）和数据表的记录总数的比值，索引选择性越高则查询效率越高， 唯一索引的选择性是1，这是最好的索引选择性，性能也是最好的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> 字段名)<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(字段名) <span class="hljs-keyword">from</span> 表名;<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-keyword">distinct</span> <span class="hljs-built_in">substring</span>(字段名,第几个字符,截取几位))<span class="hljs-operator">/</span><span class="hljs-built_in">count</span>(字段名) <span class="hljs-keyword">from</span> 表名;<br></code></pre></td></tr></table></figure><h4 id="6-7、单列索引和联合索引"><a href="#6-7、单列索引和联合索引" class="headerlink" title="6.7、单列索引和联合索引"></a>6.7、单列索引和联合索引</h4><p>推荐使用联合索引（多列索引）</p><h3 id="7、索引设计原则"><a href="#7、索引设计原则" class="headerlink" title="7、索引设计原则"></a>7、索引设计原则</h3><ul><li>1). 针对于数据量较大，且查询比较频繁的表建立索引。</li><li>2). 针对于常作为查询条件（where）、排序（order by）、分组（group by）操作的字段建立索引。</li><li>3). 尽量选择区分度高的列作为索引，尽量建立唯一索引，区分度越高，使用索引的效率越高。</li><li>4). 如果是字符串类型的字段，字段的长度较长，可以针对于字段的特点，建立前缀索引。</li><li>5). 尽量使用联合索引，减少单列索引，查询时，联合索引很多时候可以覆盖索引，节省存储空间，避免回表，提高查询效率。</li><li>6). 要控制索引的数量，索引并不是多多益善，索引越多，维护索引结构的代价也就越大，会影响增删改的效率。</li><li>7). 如果索引列不能存储NULL值，请在创建表时使用NOT NULL约束它。当优化器知道每列是否包含NULL值时，它可以更好地确定哪个索引最有效地用于查询。</li></ul><h2 id="八、SQL优化"><a href="#八、SQL优化" class="headerlink" title="八、SQL优化"></a>八、SQL优化</h2><h3 id="1、插入数据"><a href="#1、插入数据" class="headerlink" title="1、插入数据"></a>1、插入数据</h3><h4 id="1-1、insert优化"><a href="#1-1、insert优化" class="headerlink" title="1.1、insert优化"></a>1.1、insert优化</h4><ul><li><ul><li>1、批量插入–（500-1000条）</li><li>2、手动提交事务</li><li>3、主键顺序插入</li></ul></li></ul><h4 id="1-2、如果一次性需要插入大批量数据-比如-几百万的记录-，使用insert语句插入性能较低，此时使用MySQL数据库的load指令进行插入。"><a href="#1-2、如果一次性需要插入大批量数据-比如-几百万的记录-，使用insert语句插入性能较低，此时使用MySQL数据库的load指令进行插入。" class="headerlink" title="1.2、如果一次性需要插入大批量数据(比如: 几百万的记录)，使用insert语句插入性能较低，此时使用MySQL数据库的load指令进行插入。"></a>1.2、如果一次性需要插入大批量数据(比如: 几百万的记录)，使用insert语句插入性能较低，此时使用MySQL数据库的<code>load</code>指令进行插入。</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">客户端连接服务端时，加上参数 -–local-infile</span> <br>mysql –-local-infile -uroot -p密码 <br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 设置全局参数local_infile为1，开启从本地加载文件导入数据的开关 </span><br><span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> local_infile <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; <br><br><span class="hljs-comment">-- 执行load指令将准备好的数据，加载到表结构中 </span><br>load data <span class="hljs-keyword">local</span> infile <span class="hljs-string">&#x27;本地文件路径&#x27;</span> <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> 表名 fields terminated <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;,&#x27;</span> lines terminate <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;\n&#x27;</span>;<br></code></pre></td></tr></table></figure><ul><li>fields terminated by 后面跟字段之间的分隔符</li><li>lines terminated by 后面跟行之间的分隔符</li></ul><p>主键顺序插入性能高于乱序插入</p><h3 id="2、主键优化"><a href="#2、主键优化" class="headerlink" title="2、主键优化"></a>2、主键优化</h3><ul><li>数据组织方式</li></ul><p>在InnoDB存储引擎中，表数据都是根据主键顺序组织存放的，这种存储方式的表称为索引组织表(index organized table IOT)。</p><ul><li>页分裂</li><li><ul><li><ul><li>页可以为空，也可以填充一半，也可以填充100%。每个页包含了2-N行数据(如果一行数据过大，会行溢出)，根据主键排列。</li><li>主键乱序插入</li></ul></li></ul></li><li>页合并</li><li><ul><li><ul><li>当删除一行记录时，实际上记录并没有被物理删除，只是记录被标记（flaged）为删除并且它的空间变得允许被其他记录声明使用。</li><li>当页中删除的记录达到 MERGE_THRESHOLD（默认为页的50%），InnoDB会开始寻找最靠近的页（前或后）看看是否可以将两个页合并以优化空间使用。</li><li>MERGE_THRESHOLD：合并页的阈值，可以自己设置，在创建表或者创建索引时指定。</li></ul></li></ul></li><li>索引设计原则：</li><li><ul><li>满足业务需求的情况下，<strong>尽量降低主键的长度</strong>。</li><li>插入数据时，<strong>尽量选择顺序插入</strong>，选择使用AUTO_INCREMENT自增主键。</li><li><strong>尽量不要使用UUID做主键或者是其他自然主键</strong>，如身份证号。</li><li>业务操作时，<strong>避免对主键的修改</strong>。</li></ul></li></ul><h3 id="3、order-by-优化"><a href="#3、order-by-优化" class="headerlink" title="3、order by 优化"></a>3、order by 优化</h3><ul><li>MySQL的排序，有两种方式：</li><li><ul><li>Using filesort : 通过表的索引或全表扫描，读取满足条件的数据行，然后在排序缓冲区sortbuffer中完成排序操作，所有不是通过索引直接返回排序结果的排序都叫 FileSort 排序。</li><li>Using index : 通过有序索引顺序扫描直接返回有序数据，这种情况即为 using index，不需要额外排序，操作效率高。</li></ul></li></ul><p>对于以上的两种排序方式，Using index的性能高，而Using filesort的性能低，我们在优化排序操作时，尽量要优化为 Using index。</p><ul><li><strong>order by优化原则:</strong></li><li><ul><li>A. 根据排序字段建立合适的索引，多字段排序时，也遵循最左前缀法则。</li><li>B. 尽量使用覆盖索引。</li><li>C. 多字段排序, 一个升序一个降序，此时需要注意联合索引在创建时的规则（ASC&#x2F;DESC）。</li><li>D. 如果不可避免的出现filesort，大数据量排序时，可以适当增大排序缓冲区大小sort_buffer_size(默认256k)。</li></ul></li></ul><h3 id="4、group-by-优化"><a href="#4、group-by-优化" class="headerlink" title="4、group by 优化"></a>4、group by 优化</h3><ul><li>A. 在分组操作时，可以通过索引来提高效率。</li><li>B. 分组操作时，索引的使用也是满足<strong>最左前缀法则</strong>的。</li></ul><h3 id="5、limit-优化"><a href="#5、limit-优化" class="headerlink" title="5、limit 优化"></a>5、limit 优化</h3><ul><li>通过 <strong>覆盖索引 + 子查询</strong> 的方式进行优化</li></ul><h3 id="6、count-优化"><a href="#6、count-优化" class="headerlink" title="6、count 优化"></a>6、count 优化</h3><ul><li>按照效率排序的话，**<code>count(字段) &lt; count(主键  id) &lt; count(1) ≈ count(*)</code>*<em>，所以尽量使用 count(</em>)。</li></ul><h3 id="7、update-优化"><a href="#7、update-优化" class="headerlink" title="7、update 优化"></a>7、update 优化</h3><ul><li>InnoDB的行锁是针对索引加的锁，不是针对记录加的锁 ,并且该索引不能失效，否则会从行锁升级为表锁 。</li><li>总结：<strong>尽量根据索引的字段设置条件，这样只是行锁</strong>。如果不是索引字段，就会升级为表锁。</li></ul><h2 id="九、-视图、存储过程、触发器"><a href="#九、-视图、存储过程、触发器" class="headerlink" title="九、 视图、存储过程、触发器"></a>九、 视图、存储过程、触发器</h2><h3 id="1、视图"><a href="#1、视图" class="headerlink" title="1、视图"></a>1、视图</h3><h4 id="1-1、视图的定义"><a href="#1-1、视图的定义" class="headerlink" title="1.1、视图的定义"></a>1.1、视图的定义</h4><ul><li>视图（View）是一种虚拟存在的表。视图中的数据并不在数据库中实际存在，行和列数据来自定义视图的查询中使用的表，并且是在使用视图时动态生成的。</li><li>通俗的讲，视图只保存了查询的SQL逻辑，不保存查询结果。所以我们在创建视图的时候，主要的工作就落在创建这条SQL查询语句上。</li></ul><h4 id="1-2、语法"><a href="#1-2、语法" class="headerlink" title="1.2、语法"></a>1.2、语法</h4><h5 id="1-2-1、创建视图"><a href="#1-2-1、创建视图" class="headerlink" title="1.2.1、创建视图"></a>1.2.1、创建视图</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> [<span class="hljs-keyword">or</span> replace] <span class="hljs-keyword">view</span> 视图名称[(列名)] <span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span>语句 [<span class="hljs-keyword">with</span> [<span class="hljs-keyword">cascaded</span><span class="hljs-operator">|</span><span class="hljs-keyword">local</span>] <span class="hljs-keyword">check</span> option]<br></code></pre></td></tr></table></figure><h5 id="1-2-2、查询视图"><a href="#1-2-2、查询视图" class="headerlink" title="1.2.2、查询视图"></a>1.2.2、查询视图</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查看创建视图语句</span><br><span class="hljs-keyword">show</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> 视图名称;<br><br><span class="hljs-comment">-- 查看视图数据</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> 视图名称...;<br></code></pre></td></tr></table></figure><h5 id="1-2-3、修改视图"><a href="#1-2-3、修改视图" class="headerlink" title="1.2.3、修改视图"></a>1.2.3、修改视图</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> [<span class="hljs-keyword">or</span> replace] <span class="hljs-keyword">view</span> 视图名称[(列名)] <span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span>语句 [<span class="hljs-keyword">with</span> [<span class="hljs-keyword">cascaded</span><span class="hljs-operator">|</span><span class="hljs-keyword">local</span>] <span class="hljs-keyword">check</span> option];<br><br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">view</span> 视图名称[(列名)] <span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span>语句 [<span class="hljs-keyword">with</span> [<span class="hljs-keyword">cascaded</span><span class="hljs-operator">|</span><span class="hljs-keyword">local</span>] <span class="hljs-keyword">check</span> option]<br></code></pre></td></tr></table></figure><h5 id="1-2-4、删除视图"><a href="#1-2-4、删除视图" class="headerlink" title="1.2.4、删除视图"></a>1.2.4、删除视图</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">view</span> [if <span class="hljs-keyword">exists</span>] 视图名称,[视图名称]...;<br></code></pre></td></tr></table></figure><h4 id="1-3、视图的检查选项"><a href="#1-3、视图的检查选项" class="headerlink" title="1.3、视图的检查选项"></a>1.3、视图的检查选项</h4><p>当使用with check option子句创建视图时，MySQL会通过视图检查正在更改的每个行，例如 插入，更新，删除，以使其符合视图的定义。 MySQL允许基于另一个视图创建视图，它还会检查依赖视图中的规则以保持一致性。为了确定检查的范围，mysql提供了两个选项： cascaded 和 local，默认值为 cascaded 。</p><h4 id="1-4、视图更新的条件"><a href="#1-4、视图更新的条件" class="headerlink" title="1.4、视图更新的条件"></a>1.4、视图更新的条件</h4><p>要使视图可更新，视图中的行与基础表中的行之间必须存在<strong>一对一</strong>的关系。如果视图包含以下任何一项，则该视图不可更新：</p><ul><li><ul><li>A. 聚合函数或窗口函数（sum()、 min()、 max()、 count()等）</li><li>B. distinct</li><li>C. group by</li><li>D. having</li><li>E. union 或者 union all</li></ul></li></ul><h4 id="1-5、视图的作用"><a href="#1-5、视图的作用" class="headerlink" title="1.5、视图的作用"></a>1.5、视图的作用</h4><p>1、简单</p><p>视图不仅可以简化用户对数据的理解，也可以简化他们的操作。那些被经常使用的查询可以被定义为视图，从而使得用户不必为以后的操作每次指定全部的条件。</p><p>2、安全</p><p>数据库可以授权，但不能授权到数据库特定行和特定的列上。通过视图用户只能查询和修改他们所能见到的数据</p><p>3、数据独立</p><p>视图可帮助用户屏蔽真实表结构变化带来的影响。</p><h3 id="2、存储过程"><a href="#2、存储过程" class="headerlink" title="2、存储过程"></a>2、存储过程</h3><h4 id="2-1、介绍"><a href="#2-1、介绍" class="headerlink" title="2.1、介绍"></a>2.1、介绍</h4><p>存储过程是事先经过编译并存储在数据库中的一段 SQL 语句的集合，调用存储过程可以简化应用开发人员的很多工作，减少数据在数据库和应用服务器之间的传输，对于提高数据处理的效率是有好处的。</p><p>存储过程思想上很简单，就是数据库 SQL 语言层面的代码封装与重用。</p><h4 id="2-2、特点"><a href="#2-2、特点" class="headerlink" title="2.2、特点"></a>2.2、特点</h4><ul><li>封装，复用 ———————–&gt; 可以把某一业务SQL封装在存储过程中，需要用到的时候直接调用即可。</li><li>可以接收参数，也可以返回数据 ——–&gt; 再存储过程中，可以传递参数，也可以接收返回值。</li><li>减少网络交互，效率提升 ————-&gt; 如果涉及到多条SQL，每执行一次都是一次网络传输。 而如果封装在存储过程中，我们只需要网络交互一次可能就可以了。</li></ul><h4 id="2-3、语法"><a href="#2-3、语法" class="headerlink" title="2.3、语法"></a>2.3、语法</h4><h5 id="2-3-1、创建存储过程"><a href="#2-3-1、创建存储过程" class="headerlink" title="2.3.1、创建存储过程"></a>2.3.1、创建存储过程</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">procedure</span> 存储过程名称（[参数列表]）<br><span class="hljs-keyword">begin</span><br>    <span class="hljs-comment">-- SQL 语句</span><br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure><h5 id="2-3-2、调用"><a href="#2-3-2、调用" class="headerlink" title="2.3.2、调用"></a>2.3.2、调用</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">call</span> 存储过程名称([参数]);<br></code></pre></td></tr></table></figure><h5 id="2-3-3、查看"><a href="#2-3-3、查看" class="headerlink" title="2.3.3、查看"></a>2.3.3、查看</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查询指定数据库的存储过程及状态信息</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> information_schema.routines <span class="hljs-keyword">where</span> routine_schema<span class="hljs-operator">=</span><span class="hljs-string">&#x27;数据库名称&#x27;</span>;<br><br><span class="hljs-comment">-- 查询某个存储过程的定义</span><br><span class="hljs-keyword">show</span> <span class="hljs-keyword">create</span> <span class="hljs-keyword">procedure</span> 存储过程名称;<br></code></pre></td></tr></table></figure><h5 id="2-3-4、删除存储过程"><a href="#2-3-4、删除存储过程" class="headerlink" title="2.3.4、删除存储过程"></a>2.3.4、删除存储过程</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">procedure</span> [if <span class="hljs-keyword">exists</span>] 存储过程名称;<br></code></pre></td></tr></table></figure><p><strong>注意：在命令行种，执行创建存储过程的SQL时，需要通过关键字delimiter指定SQL语句的结束符</strong></p><h4 id="2-4、变量"><a href="#2-4、变量" class="headerlink" title="2.4、变量"></a>2.4、变量</h4><p>在MySQL中变量分为三种类型: 系统变量、用户定义变量、局部变量。</p><h5 id="2-4-1、系统变量"><a href="#2-4-1、系统变量" class="headerlink" title="2.4.1、系统变量"></a>2.4.1、系统变量</h5><p>系统变量 是MySQL服务器提供，不是用户定义的，属于服务器层面。分为全局变量（GLOBAL）、会话变量（SESSION）。</p><p>1、查看系统变量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 查看所有系统变量</span><br><span class="hljs-keyword">show</span> [session<span class="hljs-operator">|</span><span class="hljs-keyword">global</span>] variables;<br><br><span class="hljs-comment">-- 可以通过like模糊匹配方式查找变量</span><br><span class="hljs-keyword">show</span> [session<span class="hljs-operator">|</span><span class="hljs-keyword">global</span>] variables <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;...&#x27;</span>;<br><br><span class="hljs-comment">-- 查看指定变量的值</span><br><span class="hljs-keyword">select</span> @@[session<span class="hljs-operator">|</span><span class="hljs-keyword">global</span>] 系统变量名;<br></code></pre></td></tr></table></figure><p>2、设置系统变量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">set</span> [session<span class="hljs-operator">|</span><span class="hljs-keyword">global</span>] 系统变量名<span class="hljs-operator">=</span>值;<br><span class="hljs-keyword">set</span> @@[session<span class="hljs-operator">|</span><span class="hljs-keyword">global</span>] 系统变量名<span class="hljs-operator">=</span>值;<br></code></pre></td></tr></table></figure><p><strong>注意:</strong></p><ul><li>如果没有指定SESSION&#x2F;GLOBAL，默认是SESSION，会话变量</li><li><ul><li>mysql服务重新启动之后，所设置的全局参数会失效，要想不失效，可以在 &#x2F;etc&#x2F;my.cnf 中配置</li></ul></li><li>A. 全局变量(GLOBAL): 全局变量针对于所有的会话。</li><li>B. 会话变量(SESSION): 会话变量针对于单个会话，在另外一个会话窗口就不生效了。</li></ul><h5 id="2-4-2、用户自定义变量"><a href="#2-4-2、用户自定义变量" class="headerlink" title="2.4.2、用户自定义变量"></a>2.4.2、用户自定义变量</h5><p><strong>用户定义变量</strong> 是用户根据需要自己定义的变量，用户变量不用提前声明，在用的时候直接用 <code>@变量名</code> 使用就可以。其作用域为当前连接。</p><p>1、赋值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">set</span> @变量名<span class="hljs-operator">=</span>值[,@变量名<span class="hljs-operator">=</span>值]...;<br><span class="hljs-keyword">set</span> @变量名:<span class="hljs-operator">=</span>值[,@变量名:<span class="hljs-operator">=</span>值]...;<br><span class="hljs-keyword">select</span> @变量名:<span class="hljs-operator">=</span>值[,@变量名:<span class="hljs-operator">=</span>值]...;<br><span class="hljs-keyword">select</span> 字段名 <span class="hljs-keyword">into</span> @变量名 <span class="hljs-keyword">from</span> 表名;<br></code></pre></td></tr></table></figure><p>2、使用</p><ul><li><strong>注意: 用户定义的变量无需对其进行声明或初始化，只不过获取到的值为NULL。</strong></li></ul><h5 id="2-4-3、局部变量"><a href="#2-4-3、局部变量" class="headerlink" title="2.4.3、局部变量"></a>2.4.3、局部变量</h5><p>​局部变量 是根据需要定义的在局部生效的变量，<strong>访问之前，需要 <code>declare</code> 声明</strong>。可用作存储过程内的局部变量和输入参数，局部变量的范围是在其内声明的BEGIN … END块。</p><p>1、声明</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">declare</span> 局部变量名 变量类型[<span class="hljs-keyword">default</span> ...];<br></code></pre></td></tr></table></figure><p>2、赋值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">set</span> 变量名:<span class="hljs-operator">=</span>值;<br><span class="hljs-keyword">set</span> 变量名<span class="hljs-operator">=</span>值;<br><span class="hljs-keyword">select</span> 字段名 <span class="hljs-keyword">into</span> 变量名 <span class="hljs-keyword">from</span> 表名 ...;<br></code></pre></td></tr></table></figure><h4 id="2-5、if-判断"><a href="#2-5、if-判断" class="headerlink" title="2.5、if 判断"></a>2.5、if 判断</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql">if 条件<span class="hljs-number">1</span> <span class="hljs-keyword">then</span><br>...<br>elseif 条件<span class="hljs-number">2</span> <span class="hljs-keyword">then</span><br>...<br><span class="hljs-keyword">else</span><br>...<br><span class="hljs-keyword">end</span> if;<br></code></pre></td></tr></table></figure><h4 id="2-6、参数"><a href="#2-6、参数" class="headerlink" title="2.6、参数"></a>2.6、参数</h4><p>参数的类型，主要分为以下三种：IN、OUT、INOUT。 具体的含义如下：</p><table><thead><tr><th><strong>类型</strong></th><th><strong>含义</strong></th><th><strong>备注</strong></th></tr></thead><tbody><tr><td>in</td><td>该类参数作为输入，也就是需要调用时传入值</td><td>默认</td></tr><tr><td>out</td><td>该类参数作为输出，也就是该参数可以作为返回值</td><td></td></tr><tr><td>inout</td><td>既可以作为输入参数，也可以作为输出参数</td><td></td></tr></tbody></table><p><strong>用法：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">procedure</span> 存储过程名称([<span class="hljs-keyword">in</span><span class="hljs-operator">/</span><span class="hljs-keyword">out</span><span class="hljs-operator">/</span><span class="hljs-keyword">inout</span> 参数名 参数类型])<br><span class="hljs-keyword">begin</span><br><span class="hljs-comment">-- SQL语句</span><br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure><h4 id="2-7、case-判断"><a href="#2-7、case-判断" class="headerlink" title="2.7、case 判断"></a>2.7、case 判断</h4><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">case</span>  case_value<br>    <span class="hljs-keyword">when</span>  when_value1  <span class="hljs-keyword">then</span>  statement_list1<br>    [<span class="hljs-keyword">when</span>  when_value2  <span class="hljs-keyword">then</span>  statement_list2]...<br>    [<span class="hljs-keyword">else</span>  statement_list]<br><span class="hljs-keyword">end</span>  <span class="hljs-keyword">case</span>;<br><span class="hljs-comment">-- 或</span><br><span class="hljs-keyword">case</span><br>    <span class="hljs-keyword">when</span>  search_condition1  <span class="hljs-keyword">then</span>  statement_list1<br>    [<span class="hljs-keyword">when</span>  search_condition2  <span class="hljs-keyword">then</span>  statement_list2]...<br>    [<span class="hljs-keyword">else</span>  statement_list]<br><span class="hljs-keyword">end</span>  <span class="hljs-keyword">case</span>; <br></code></pre></td></tr></table></figure><h4 id="2-8、while-循环"><a href="#2-8、while-循环" class="headerlink" title="2.8、while 循环"></a>2.8、while 循环</h4><p>while 循环是有条件的循环控制语句。满足条件后，再执行循环体中的SQL语句。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"># 先判断条件，如果条件为<span class="hljs-literal">true</span>，则执行逻辑，否则，不执行逻辑<br>while 条件 do<br>    <span class="hljs-keyword">SQL</span>逻辑<br><span class="hljs-keyword">end</span>  while;<br></code></pre></td></tr></table></figure><h4 id="2-9、repeat-循环"><a href="#2-9、repeat-循环" class="headerlink" title="2.9、repeat 循环"></a>2.9、repeat 循环</h4><p>repeat是有条件的循环控制语句，当满足条件的时候退出循环。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"># 先执行一次逻辑，然后判断逻辑是否满足，如果满足则退出；如果不满足则继续下一次循环<br>repeat <br>    <span class="hljs-keyword">SQL</span>逻辑...<br>    until 条件<br><span class="hljs-keyword">end</span> repeat;<br></code></pre></td></tr></table></figure><h4 id="2-10、loop-循环"><a href="#2-10、loop-循环" class="headerlink" title="2.10、loop 循环"></a>2.10、loop 循环</h4><p>loop实现简单的循环，如果不在SQL逻辑中增加退出循环的条件，可以用来实现简单的死循环。loop可以配合一下两个语句使用：</p><ul><li>leave：  配合循环使用，退出循环</li><li>iterate：必须用在循环中，作用是跳过当前循环剩下的语句，直接进入下一次循环。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql">[loop名:] loop<br>    <span class="hljs-keyword">SQL</span>逻辑...<br><span class="hljs-keyword">end</span> loop [loop名];<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">leave loop名;  <span class="hljs-comment">-- 退出指定标记的循环体</span><br>iterate loop名;  <span class="hljs-comment">-- 直接进入下一次循环</span><br></code></pre></td></tr></table></figure><h4 id="2-11、游标-cursor"><a href="#2-11、游标-cursor" class="headerlink" title="2.11、游标 cursor"></a>2.11、游标 <code>cursor</code></h4><p>游标（cursor）是用来存储查询结果集的数据类型，在存储过程和函数中可以使用游标对结果集进行循环的处理。游标的使用包括游标的声明、open、fetch和close。</p><p>1、声明游标</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">declare</span> 游标名称 <span class="hljs-keyword">cursor</span> <span class="hljs-keyword">for</span> 查询语句;<br></code></pre></td></tr></table></figure><p>2、打开游标</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">open</span> 游标名称;<br></code></pre></td></tr></table></figure><p>3、获取游标记录</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">fetch</span> 游标名称 <span class="hljs-keyword">into</span> 变量[,变量];<br></code></pre></td></tr></table></figure><p>4、关闭游标</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">close</span> 游标名称;<br></code></pre></td></tr></table></figure><h4 id="2-12、条件处理程序"><a href="#2-12、条件处理程序" class="headerlink" title="2.12、条件处理程序"></a>2.12、条件处理程序</h4><p>条件处理程序（Handler）可以用来定义在流程控制结构执行过程中遇到问题时相应的处理步骤。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">declare</span> handler_action条件处理程序类型 handler <span class="hljs-keyword">for</span> condition_value条件[,condition_value]...  statement;<br><br>handler_action:<br>    continue：继续执行当前程序<br>    exit：终止执行当前程序<br>condition_value：<br>    <span class="hljs-keyword">sqlstate</span>： sqlstate_value：状态码，如 <span class="hljs-number">02000</span><br>    <span class="hljs-keyword">sqlwarning</span>：所有以<span class="hljs-number">01</span>开头的<span class="hljs-keyword">sqlstate</span>代码的简写<br>    <span class="hljs-keyword">not</span> found：所有以<span class="hljs-number">02</span>开头的<span class="hljs-keyword">sqlstate</span>代码的简写<br>    <span class="hljs-keyword">sqlexception</span>：所有没有被<span class="hljs-keyword">sqlwarning</span>或<span class="hljs-keyword">not</span> found捕获的<span class="hljs-keyword">sqlstate</span>代码的简写<br></code></pre></td></tr></table></figure><h3 id="3、存储函数"><a href="#3、存储函数" class="headerlink" title="3、存储函数"></a>3、存储函数</h3><p>存储函数是有返回值的存储过程，存储函数的参数只能是in类型的。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">function</span> 存储函数名称([参数列表])<br><span class="hljs-keyword">returns</span> type [characteristic ...]<br><span class="hljs-keyword">begin</span><br>    <span class="hljs-comment">-- sql语句</span><br>    <span class="hljs-keyword">return</span> ...;<br><span class="hljs-keyword">end</span>；<br><br>characteristic说明：<br><span class="hljs-operator">-</span> <span class="hljs-keyword">deterministic</span>：相同的输入参数总是产生相同的结果<br><span class="hljs-operator">-</span> <span class="hljs-keyword">no</span> <span class="hljs-keyword">sql</span>：不包含<span class="hljs-keyword">sql</span>语句<br><span class="hljs-operator">-</span> <span class="hljs-keyword">reads</span> <span class="hljs-keyword">sql</span> data：包含读取数据的语句，但不包含写入数据的语句<br></code></pre></td></tr></table></figure><h3 id="4、触发器"><a href="#4、触发器" class="headerlink" title="4、触发器"></a>4、触发器</h3><ul><li>触发器是与表有关的数据库对象，指在insert&#x2F;update&#x2F;delete之前面(before)或之后(after)，触发并执行触发器中定义的SQL语句集合。触发器的这种特性可以协助应用在数据库端确保数据的完整性, 日志记录 , 数据校验等操作 。</li><li>使用别名 old 和 new 来引用触发器中发生变化的记录内容，这与其他的数据库是相似的。现在触发器还只支持行级触发，不支持语句级触发。</li></ul><table><thead><tr><th><strong>触发器类型</strong></th><th><strong>NEW 和 OLD</strong></th></tr></thead><tbody><tr><td>INSERT 型触发器</td><td>NEW 表示将要或者已经新增的数据</td></tr><tr><td>UPDATE 型触发器</td><td>OLD 表示修改之前的数据 , NEW 表示将要或已经修改后的数据</td></tr><tr><td>DELETE 型触发器</td><td>OLD 表示将要或者已经删除的数据</td></tr></tbody></table><p><strong>语法：</strong></p><p>1、创建触发器</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">trigger</span> 触发器名<br>before<span class="hljs-operator">/</span>after <span class="hljs-keyword">insert</span><span class="hljs-operator">/</span><span class="hljs-keyword">update</span><span class="hljs-operator">/</span><span class="hljs-keyword">delete</span><br><span class="hljs-keyword">on</span> 表名 <span class="hljs-keyword">for</span> <span class="hljs-keyword">each</span> <span class="hljs-type">row</span>  <span class="hljs-comment">-- 行级触发器</span><br><span class="hljs-keyword">begin</span><br>    触发器语句；<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure><p>2、查看</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> triggers;<br></code></pre></td></tr></table></figure><p>3、删除</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">trigger</span> [数据库名称] 触发器名称;<br></code></pre></td></tr></table></figure><h2 id="十、锁"><a href="#十、锁" class="headerlink" title="十、锁"></a>十、锁</h2><h3 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h3><p>锁是计算机协调多个进程或线程并发访问某一资源的机制。在数据库中，除传统的计算资源（CPU、RAM、I&#x2F;O）的争用以外，数据也是一种供许多用户共享的资源。如何保证数据并发访问的一致性、有效性是所有数据库必须解决的一个问题，锁冲突也是影响数据库并发访问性能的一个重要因素。从这个角度来说，锁对数据库而言显得尤其重要，也更加复杂。</p><p>MySQL中的锁，按照锁的粒度分，分为以下三类：</p><ul><li>全局锁：锁定数据库中的所有表。</li><li>表级锁：每次操作锁住整张表。</li><li>行级锁：每次操作锁住对应的行数据。</li></ul><h3 id="2、全局锁"><a href="#2、全局锁" class="headerlink" title="2、全局锁"></a>2、全局锁</h3><p>全局锁就是对整个数据库实例加锁，加锁后整个实例就处于只读状态，后续的DML的写语句，DDL语句，已经更新操作的事务提交语句都将被阻塞。</p><p>其典型的使用场景是做全库的逻辑备份，对所有的表进行锁定，从而获取一致性视图，保证数据的完整性。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 加上全局锁</span><br>flush tables <span class="hljs-keyword">with</span> read lock;<br><br><span class="hljs-comment">-- 数据备份</span><br>mysqldump <span class="hljs-operator">-</span>h主机地址 <span class="hljs-operator">-</span>u账号 <span class="hljs-operator">-</span>p密码 数据库名 <span class="hljs-operator">&gt;</span> 存储路径<br><br><span class="hljs-comment">-- 释放锁</span><br>unlock tables;<br></code></pre></td></tr></table></figure><h4 id="全局锁的特点："><a href="#全局锁的特点：" class="headerlink" title="全局锁的特点："></a>全局锁的特点：</h4><p><strong>数据库中加全局锁，是一个比较重的操作，存在以下问题：</strong></p><ul><li>1、如果在主库上备份，那么在备份期间都不能执行更新，业务基本上就得停摆。</li><li>2、如果在从库上备份，那么在备份期间从库不能执行主库同步过来的二进制日志（binlog），会导致主从延迟。</li></ul><p>在InnoDB引擎中，我们可以在备份时加上参数 –single-transaction 参数来完成不加锁的一致性数据备份。</p><p><code>mysqldump --single-transaction -u账号 –p密码 数据库名 &gt; 存储路径</code></p><h3 id="3、表级锁"><a href="#3、表级锁" class="headerlink" title="3、表级锁"></a>3、表级锁</h3><p>表级锁，每次操作锁住整张表。锁定粒度大，发生锁冲突的概率最高，并发度最低。</p><p>对于表级锁，主要分为以下三类：</p><ul><li>表锁</li><li>元数据锁（meta data lock，MDL）</li><li>意向锁</li></ul><h4 id="3-1、表锁"><a href="#3-1、表锁" class="headerlink" title="3.1、表锁"></a>3.1、表锁</h4><p>对于表锁，分为两类：</p><ul><li>表共享读锁（read lock）  读锁</li><li>表独占写锁（write lock） 写锁</li></ul><h5 id="3-1-1、语法："><a href="#3-1-1、语法：" class="headerlink" title="3.1.1、语法："></a>3.1.1、语法：</h5><ul><li>加锁：<code>lock tables 表名... read/write;</code></li><li>释放锁：<code>unlock tables;</code>  &#x2F;  <code>客户端断开连接</code></li></ul><p><strong>读锁</strong>：加了读锁之后，所有客户端只能读，不能写</p><p><strong>写锁</strong>：加了写锁之后，当前客户端可以读写，其他客户端不能读、不能写</p><p><strong>结论: 读锁不会阻塞其他客户端的读，但是会阻塞写。写锁既会阻塞其他客户端的读，又会阻塞其他客户端的写。</strong></p><h4 id="3-2、元数据锁"><a href="#3-2、元数据锁" class="headerlink" title="3 .2、元数据锁"></a>3 .2、元数据锁</h4><p>meta data lock , 元数据锁，简写MDL。</p><p>MDL加锁过程是系统自动控制，无需显式使用，在访问一张表的时候会自动加上。MDL锁主要作用是维护表元数据的数据一致性，在表上有活动事务的时候，不可以对元数据进行写入操作。<strong>为了避免DML与DDL冲突，保证读写的正确性。</strong></p><p>这里的元数据，大家可以简单理解为就是一张表的表结构。 也就是说，某一张表涉及到未提交的事务时，是不能够修改这张表的表结构的。</p><p>在MySQL5.5中引入了MDL，**当对一张表进行增删改查的时候，加MDL读锁(共享)<strong>；</strong>当对表结构进行变更操作的时候，加MDL写锁(排他)**。</p><p><strong>常见的SQL操作时，所添加的元数据锁：</strong></p><table><thead><tr><th><strong>对应SQL</strong></th><th><strong>锁类型</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>lock tables xxx read &#x2F; write</td><td>SHARED_READ_ONLY &#x2F;SHARED_NO_READ_WRITE</td><td></td></tr><tr><td>select语句 、select … lock in share mode（共享锁）</td><td>SHARED_READ</td><td>与SHARED_READ、SHARED_WRITE兼容，与EXCLUSIVE互斥</td></tr><tr><td>insert 、update、delete、select … for  update</td><td>SHARED_WRITE</td><td>与SHARED_READ、SHARED_WRITE兼容，与EXCLUSIVE互斥</td></tr><tr><td>alter table …</td><td>exclusive（排他）</td><td>与其他的MDL都互斥</td></tr></tbody></table><p><strong>查看元数据锁</strong> <code>select object_type,object_schema,object_name,lock_type,lock_duration from performance_schema.metadata_locks;</code></p><h4 id="3-3、意向锁"><a href="#3-3、意向锁" class="headerlink" title="3.3、意向锁"></a>3.3、意向锁</h4><p>为了避免DML在执行时，加的行锁与表锁的冲突，在InnoDB中引入了意向锁，使得表锁不用检查每行数据是否加锁，使用意向锁来减少表锁的检查</p><p><strong>意向锁的分类</strong></p><ul><li>意向共享锁(IS): 由语句select … lock in share mode添加 。 <strong>与表锁共享锁(read)兼容，与表锁排他锁(write)互斥</strong></li><li>意向排他锁(IX): 由insert、update、delete、select…for update添加 。<strong>与表锁共享锁(read)及排他锁(write)都互斥，意向锁之间不会互斥</strong></li></ul><p>一旦事务提交了，意向共享锁、意向排他锁，都会自动释放。</p><p><strong>查看意向锁及行锁的加锁情况：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> object_schema,object_name,index_name,lock_type,lock_mode,lock_data <span class="hljs-keyword">from</span> performance_schema.data_locks; <br></code></pre></td></tr></table></figure><h3 id="4、行级锁"><a href="#4、行级锁" class="headerlink" title="4、行级锁"></a>4、行级锁</h3><p>行级锁，每次操作锁住对应的行数据。锁定粒度最小，发生锁冲突的概率最低，并发度最高。应用在InnoDB存储引擎中。</p><p>InnoDB的数据是基于索引组织的，行锁是通过对索引上的索引项加锁来实现的，而不是对记录加的锁。对于行级锁，主要分为以下三类：</p><ul><li>行锁（Record Lock）：锁定单个行记录的锁，防止其他事务对此行进行update和delete。在RC、RR隔离级别下都支持。</li><li><ul><li>RC： read  commit<ul><li>RR:repeatable read</li></ul></li></ul></li><li>间隙锁（Gap Lock）：锁定索引记录间隙（不含该记录），确保索引记录间隙不变，防止其他事务在这个间隙进行insert，产生幻读。在RR隔离级别下都支持。</li><li>临键锁（Next-Key Lock）：行锁和间隙锁组合，同时锁住数据，并锁住数据前面的间隙Gap。在RR隔离级别下支持。</li></ul><h4 id="4-1、行锁"><a href="#4-1、行锁" class="headerlink" title="4.1、行锁"></a>4.1、行锁</h4><p>InnoDB实现了以下两种类型的行锁：</p><ul><li>共享锁（S）：允许一个事务去读一行，阻止其他事务获得相同数据集的排它锁。</li><li>排他锁（X）：允许获取排他锁的事务更新数据，阻止其他事务获得相同数据集的共享锁和排他锁。</li></ul><p>两种行锁的兼容情况</p><table><thead><tr><th>当前锁类型 ｜请求锁类型–&gt;</th><th>S（共享锁）</th><th>X（排他锁）</th></tr></thead><tbody><tr><td>S（共享锁）</td><td>兼容</td><td>冲突</td></tr><tr><td>X（排他锁）</td><td>冲突</td><td>冲突</td></tr></tbody></table><table><thead><tr><th><strong>SQL</strong></th><th><strong>行锁类型</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>INSERT …</td><td>排他锁</td><td>自动加锁</td></tr><tr><td>UPDATE …</td><td>排他锁</td><td>自动加锁</td></tr><tr><td>DELETE …</td><td>排他锁</td><td>自动加锁</td></tr><tr><td>SELECT（正常）</td><td>不加任何锁</td><td></td></tr><tr><td>SELECT … LOCK IN SHAREMODE</td><td>共享锁</td><td>需要手动在SELECT之后加LOCK IN SHARE MODE</td></tr><tr><td>SELECT … FOR UPDATE</td><td>排他锁</td><td>需要手动在SELECT之后加FOR UPDATE</td></tr></tbody></table><p>默认情况下，InnoDB在 REPEATABLE READ事务隔离级别运行，InnoDB使用 next-key 锁进行搜索和索引扫描，以防止幻读。</p><ul><li>1、针对唯一索引进行检索时，对已存在的记录进行等值匹配时，将会自动优化为行锁。</li><li>2、InnoDB的行锁是针对于索引加的锁，如果不通过索引条件检索数据，那么InnoDB将对表中的所有记录加锁，此时 就会升级为表锁。</li></ul><h4 id="4-2、间隙锁-临键锁"><a href="#4-2、间隙锁-临键锁" class="headerlink" title="4.2、间隙锁&amp;临键锁"></a>4.2、间隙锁&amp;临键锁</h4><p>默认情况下，InnoDB在 REPEATABLE READ事务隔离级别运行，InnoDB使用 next-key 锁进行搜索和索引扫描，以防止幻读。</p><ul><li>1、索引上的等值查询(唯一索引)，给不存在的记录加锁时, 优化为间隙锁</li><li>2、索引上的等值查询(非唯一普通索引)，向右遍历时最后一个值不满足查询需求时，next-key锁 退化为间隙锁。</li><li>3、索引上的范围查询(唯一索引)–会访问到不满足条件的第一个值为止。</li></ul><p><strong>注意：间隙锁唯一目的是防止其他事务插入间隙。间隙锁可以共存，一个事务采用的间隙锁不会阻止另一个事务在同一间隙上采用间隙锁。</strong></p><h2 id="十一、InnoDB引擎"><a href="#十一、InnoDB引擎" class="headerlink" title="十一、InnoDB引擎"></a>十一、InnoDB引擎</h2><h3 id="1、逻辑存储结构"><a href="#1、逻辑存储结构" class="headerlink" title="1、逻辑存储结构"></a>1、逻辑存储结构</h3><h4 id="1-1、表空间-tablespace"><a href="#1-1、表空间-tablespace" class="headerlink" title="1.1、表空间 tablespace"></a>1.1、表空间 tablespace</h4><ul><li>每张表都有一个表空间【.ibd文件】，用于存储记录、索引等数据</li><li>一个 表空间 有多个 段</li></ul><h4 id="1-2、段-segment"><a href="#1-2、段-segment" class="headerlink" title="1.2、段 segment"></a>1.2、段 segment</h4><ul><li>段分为数据段、索引段、回滚段</li><li>InnoDB是索引组织表，数据段就是B+树的叶子节点；索引段就是B+树的非叶子节点</li><li>一个短中有多个区</li></ul><h4 id="1-3、区-extent-1M"><a href="#1-3、区-extent-1M" class="headerlink" title="1.3、区 extent  1M"></a>1.3、区 extent  1M</h4><ul><li>区是表空间中的单元结构，每个区的大小为1M</li><li>一个区中有多个页</li><li>默认情况下，InnoDB存储引擎页的大小为16K，所以一个区中共有连续64个连续的页</li></ul><h4 id="1-4、页-page-16K"><a href="#1-4、页-page-16K" class="headerlink" title="1.4、页 page  16K"></a>1.4、页 page  16K</h4><ul><li>页是InnoDB存储引擎磁盘管理的最小单元</li><li>每个页的大小默认为16KB，为了保证页的连续性，InnoDB存储引擎每次从磁盘申请4-5个区</li></ul><h4 id="1-5、行-row"><a href="#1-5、行-row" class="headerlink" title="1.5、行 row"></a>1.5、行 row</h4><ul><li>行，InnoDB存储引擎数据是按行进行存放的</li><li>在行中，默认有两个隐藏字段：</li></ul>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringCloud笔记</title>
    <link href="/2024/02/26/SpringCloud%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/02/26/SpringCloud%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="一、微服务技术栈导学"><a href="#一、微服务技术栈导学" class="headerlink" title="一、微服务技术栈导学"></a>一、微服务技术栈导学</h1><h2 id="1、组件介绍"><a href="#1、组件介绍" class="headerlink" title="1、组件介绍"></a>1、组件介绍</h2><ul><li>注册中心：记录微服务中每一个服务的IP、端口、功能</li><li>配置中心：统一管理配置</li><li>服务网关：方便对用户身份做校验</li><li>分布式缓存</li><li>分布式搜索</li><li>消息队列</li><li>分布式日志服务</li><li>系统监控链路追踪</li></ul><h2 id="2、分类"><a href="#2、分类" class="headerlink" title="2、分类"></a>2、分类</h2><ul><li>微服务治理</li><li>异步通信技术</li><li>缓存技术</li><li>搜索技术</li><li>持续集成技术</li></ul><h1 id="二、认识微服务"><a href="#二、认识微服务" class="headerlink" title="二、认识微服务"></a>二、认识微服务</h1><h2 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h2><p>微服务是一种经过良好架构设计的分布式架构方案，微服务架构特征：</p><ul><li>单一职责：微服务拆分粒度更小，每一个服务都对应唯一的业务能力，做到单一职责，避免重复业务开发 </li><li>面向服务：微服务对外暴露业务接口</li><li>自治：团队独立、技术独立、数据独立、部署独立</li><li>隔离性强：服务调用做好隔离、容错、降级，避免出现级联问题</li></ul><p><img src="/img/springcloud_img/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E5%AF%B9%E6%AF%94.png" alt="微服务技术对比"></p><h2 id="SpringCloud"><a href="#SpringCloud" class="headerlink" title="SpringCloud"></a>SpringCloud</h2><p>SpringCloud 集成了各种微服务功能组件，并基于SpringBoot实现了这些组件的自动装配，从而提供了良好的开箱即用体验：</p><p><img src="/img/springcloud_img/SpringCloud%E4%BB%8B%E7%BB%8D.png" alt="SpringCloud介绍"></p><h1 id="三、服务拆分及远程调用"><a href="#三、服务拆分及远程调用" class="headerlink" title="三、服务拆分及远程调用"></a>三、服务拆分及远程调用</h1><h2 id="1、服务拆分注意事项"><a href="#1、服务拆分注意事项" class="headerlink" title="1、服务拆分注意事项"></a>1、服务拆分注意事项</h2><p>1、不同微服务，不要重复开发相同业务</p><p>2、微服务数据独立，不要访问其他微服务的数据库</p><p>3、微服务可以将自己的业务暴露为接口，供其它微服务调用</p><h2 id="2、远程调用接口"><a href="#2、远程调用接口" class="headerlink" title="2、远程调用接口"></a>2、远程调用接口</h2><p><strong>基于RestTemplate发起的http请求实现远程调用</strong></p><p><strong>http请求做远程调用是与语言无关的调用，只要知道对方的ip、端口、接口路径、请求参数即可</strong></p><h3 id="2-1、远程调用步骤"><a href="#2-1、远程调用步骤" class="headerlink" title="2.1、远程调用步骤"></a>2.1、远程调用步骤</h3><h4 id="2-1-1、在消费者注册-RestTemplate"><a href="#2-1-1、在消费者注册-RestTemplate" class="headerlink" title="2.1.1、在消费者注册 RestTemplate"></a>2.1.1、在消费者注册 RestTemplate</h4><p>启动类Application.java 中注册RestTemplate</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@MapperScan(&quot;cn.itcast.order.mapper&quot;)</span><br><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OrderApplication</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(OrderApplication.class, args);<br>    &#125;<br><br>     <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建RestTemplate，并注入Spring容器</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> RestTemplate <span class="hljs-title function_">restTemplate</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RestTemplate</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-1-2、使用RestTemplate远程调用接口"><a href="#2-1-2、使用RestTemplate远程调用接口" class="headerlink" title="2.1.2、使用RestTemplate远程调用接口"></a>2.1.2、使用RestTemplate远程调用接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OrderService</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> OrderMapper orderMapper;<br><br>  <span class="hljs-comment">// 注入RestTemplate</span><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> RestTemplate restTemplate;<br><br>    <span class="hljs-keyword">public</span> Order <span class="hljs-title function_">queryOrderById</span><span class="hljs-params">(Long orderId)</span> &#123;<br>        <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> orderMapper.findById(orderId);<br>      <br>        <span class="hljs-comment">//调用:   利用RestTemplate发送http请求 get用getForObject；post用postForObject</span><br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> restTemplate.getForObject(<span class="hljs-string">&quot;http://127.0.0.1:8081/user/&quot;</span> + order.getUserId(), User.class);<br>      <br>        order.setUser(user);<br>        <span class="hljs-keyword">return</span> order;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-2、提供者与消费者"><a href="#2-2、提供者与消费者" class="headerlink" title="2.2、提供者与消费者"></a>2.2、提供者与消费者</h3><ul><li>服务提供者：一次业务中，被其它微服务调用的服务。（提供接口给其它微服务）</li><li>服务消费者：一次业务中，调用其它微服务的服务。（调用其它微服务提供的接口）</li></ul><h1 id="四、Eureka-注册中心"><a href="#四、Eureka-注册中心" class="headerlink" title="四、Eureka 注册中心"></a>四、Eureka 注册中心</h1><h2 id="1、Eureka-原理分析"><a href="#1、Eureka-原理分析" class="headerlink" title="1、Eureka 原理分析"></a>1、Eureka 原理分析</h2><h3 id="1-1、Eureka-的作用"><a href="#1-1、Eureka-的作用" class="headerlink" title="1.1、Eureka 的作用"></a>1.1、Eureka 的作用</h3><ul><li>1、消费者如何获取服务提供者具体信息？<ul><li>1、服务提供者启动时向Eureka注册自己的信息</li><li>2、Eureka保存这些信息</li><li>3、消费者根据服务名称向Eureka拉取提供者信息</li></ul></li><li>2、如果有多个服务提供者，消费者如何选择？<ul><li>服务消费者利用负载均衡算法，从服务列表中挑选一个</li></ul></li><li>3、消费者如何感知服务提供者健康状态？<ul><li>1、服务提供者会每隔30秒向EurekaServer发送心跳请求，报告健康状态</li><li>2、Eureka会更新记录服务列表信息，心跳不正常会被剔除</li><li>3、消费者就可以拉取到最新的信息</li></ul></li></ul><h3 id="1-2、总结："><a href="#1-2、总结：" class="headerlink" title="1.2、总结："></a>1.2、总结：</h3><p>在Eureka架构中，微服务角色有两类：</p><ul><li>EurekaServer：服务端，注册中心<ul><li>记录服务信息</li><li>心跳监控</li></ul></li><li>EurekaClient：客户端<ul><li>Provider：服务提供者<ul><li>注册自己的信息到EurekaServer</li><li>每隔30秒向EurekaServer发送心跳</li></ul></li><li>Consumer：服务消费者<ul><li>根据服务名称从EurekaServer拉取服务列表</li><li>基于服务列表做负载均衡，选中一个微服务后发起远程调用</li></ul></li></ul></li></ul><h2 id="2、搭建Eureka-服务"><a href="#2、搭建Eureka-服务" class="headerlink" title="2、搭建Eureka 服务"></a>2、搭建Eureka 服务</h2><h3 id="2-1、搭建EurekaServer"><a href="#2-1、搭建EurekaServer" class="headerlink" title="2.1、搭建EurekaServer"></a>2.1、搭建EurekaServer</h3><p>1、创建项目，引入<code>spring-cloud-starter-netflix-eureka-server</code>的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>2、在启动类中Application.java中加入<code>@EnableEurekaServer</code>注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EnableEurekaServer</span><br><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">EurekaApplication</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(EurekaApplication.class, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>3、在application.yml配置文件中注册Eureka</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">10086</span>  <span class="hljs-comment"># 服务端口</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">eurekaserver</span>  <span class="hljs-comment"># eureka的服务名称</span><br><span class="hljs-attr">eureka:</span><br>  <span class="hljs-attr">client:</span><br>    <span class="hljs-attr">service-url:</span>  <span class="hljs-comment"># eureka的地址信息</span><br>      <span class="hljs-attr">defaultZone:</span> <span class="hljs-string">http://127.0.0.1:10086/eureka</span><br></code></pre></td></tr></table></figure><p>4、启动项目，在浏览器输入<code>localhost:10086</code></p><p><img src="/img/springcloud_img/Eureka%E5%90%AF%E5%8A%9F%E9%A1%B5%E9%9D%A2.png" alt="Eureka启功页面"></p><h3 id="2-2、将其它服务注册到EurekaServer-下"><a href="#2-2、将其它服务注册到EurekaServer-下" class="headerlink" title="2.2、将其它服务注册到EurekaServer 下"></a>2.2、将其它服务注册到EurekaServer 下</h3><p>1、在 <strong>提供者</strong> 服务下引入<code>spring-cloud-starter-netflix-eureka-client</code> 依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>2、在application.yml 配置文件下注册eureka</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">userservice</span>  <span class="hljs-comment"># eureka的服务名称</span><br><span class="hljs-attr">eureka:</span><br>  <span class="hljs-attr">client:</span><br>    <span class="hljs-attr">service-url:</span>  <span class="hljs-comment"># eureka的地址信息</span><br>      <span class="hljs-attr">defaultZone:</span> <span class="hljs-string">http://127.0.0.1:10086/eureka</span><br></code></pre></td></tr></table></figure><p>此时，就可以在 Eureka 中看到新注册的服务了</p><p><img src="/img/springcloud_img/Eureka%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C.png" alt="Eureka服务注册"></p><h3 id="2-3、补充：一个服务启动两个实例"><a href="#2-3、补充：一个服务启动两个实例" class="headerlink" title="2.3、补充：一个服务启动两个实例"></a>2.3、补充：一个服务启动两个实例</h3><p>首先点击最下面的<code>Services</code>，右击服务，选择 <code>Copy Configuration</code></p><p><img src="/img/springcloud_img/%E4%B8%80%E4%B8%AA%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E4%B8%A4%E4%B8%AA%E5%AE%9E%E4%BE%8B.png" alt="一个服务启动两个实例"></p><p>然后点击<code>Modify options</code> ，选择 <code>Add VM options</code></p><p><img src="/img/springcloud_img/%E4%B8%80%E4%B8%AA%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E4%B8%A4%E4%B8%AA%E5%AE%9E%E4%BE%8B2.png" alt="一个服务启动两个实例2"></p><p>之后就会多出一个 <code>VM options</code> 的文本框</p><p><img src="/img/springcloud_img/%E4%B8%80%E4%B8%AA%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E4%B8%A4%E4%B8%AA%E5%AE%9E%E4%BE%8B3.png" alt="一个服务启动两个实例3"></p><p>添加参数 <code>-Dserver.port=8082</code>，修改配置名称，点击ok</p><p><img src="/img/springcloud_img/%E4%B8%80%E4%B8%AA%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E4%B8%A4%E4%B8%AA%E5%AE%9E%E4%BE%8B4.png" alt="一个服务启动两个实例4"></p><p>最后在<code>Services</code> 下就可以看到新添加的实例</p><p><img src="/img/springcloud_img/%E4%B8%80%E4%B8%AA%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E4%B8%A4%E4%B8%AA%E5%AE%9E%E4%BE%8B5.png" alt="一个服务启动两个实例5"></p><p>启动项目，就可以在Eureka 中看到两个实例了</p><p><img src="/img/springcloud_img/%E4%B8%80%E4%B8%AA%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E4%B8%A4%E4%B8%AA%E5%AE%9E%E4%BE%8B6.png" alt="一个服务启动两个实例6"></p><h3 id="2-4、服务拉取"><a href="#2-4、服务拉取" class="headerlink" title="2.4、服务拉取"></a>2.4、服务拉取</h3><p>服务拉取是基于服务名称获取服务列表，然后再对服务列表做负载均衡</p><p>1、在 <strong>消费者</strong> 服务项目的启动类Application.java 中的RestTemplate添加负载均衡注解<code>@LoadBalanced</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Bean</span><br><span class="hljs-meta">@LoadBalanced</span><br><span class="hljs-keyword">public</span> RestTemplate <span class="hljs-title function_">restTemplate</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RestTemplate</span>();<br>&#125;<br></code></pre></td></tr></table></figure><p>2、调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;http://服务名称/接口名/&quot;</span><br> <br><span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> restTemplate.getForObject(url,User.class)<br></code></pre></td></tr></table></figure><p><img src="/img/springcloud_img/Eureka%E6%80%BB%E7%BB%93.png" alt="Eureka总结"></p><h1 id="五、Ribbon-负载均衡"><a href="#五、Ribbon-负载均衡" class="headerlink" title="五、Ribbon 负载均衡"></a>五、Ribbon 负载均衡</h1><h2 id="1、负载均衡原理"><a href="#1、负载均衡原理" class="headerlink" title="1、负载均衡原理"></a>1、负载均衡原理</h2><p><img src="/img/springcloud_img/Ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E6%B5%81%E7%A8%8B.png" alt="Ribbon负载均衡流程"></p><p><strong>源码跟踪：</strong></p><p>为什么只输入了 service 名称就可以访问了？为什么不需要获取ip和端口，这显然有人帮我们根据 service 名称，获取到了服务实例的ip和端口。它就是<code>LoadBalancerInterceptor</code>，这个类会在对 RestTemplate 的请求进行拦截，然后从 Eureka 根据服务 id 获取服务列表，随后利用负载均衡算法得到真实的服务地址信息，替换服务 id。</p><p><img src="/img/springcloud_img/Ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.png" alt="Ribbon负载均衡"></p><p><img src="/img/springcloud_img/Ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E6%B5%81%E7%A8%8B2.png" alt="Ribbon负载均衡流程2"></p><h2 id="2、负载均衡策略"><a href="#2、负载均衡策略" class="headerlink" title="2、负载均衡策略"></a>2、负载均衡策略</h2><h3 id="负载均衡策略"><a href="#负载均衡策略" class="headerlink" title="负载均衡策略"></a>负载均衡策略</h3><p>Ribbon 的负载均衡规则是一个叫做 IRule 的接口来定义的，每一个子接口都是一种规则：</p><p><img src="/img/springcloud_img/IRule%E6%8E%A5%E5%8F%A3.png" alt="IRule接口"></p><p><img src="/img/springcloud_img/Ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AD%96%E7%95%A5.png" alt="Ribbon负载均衡策略"></p><p>通过定义IRule 实现可以修改负载均衡规则，有两种方式：</p><p>方式1、代码方式：在<strong>消费者</strong> 的启动类中，定义一个新的IRule  【全局配置】</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Bean</span><br><span class="hljs-keyword">public</span> IRule <span class="hljs-title function_">randomRule</span><span class="hljs-params">()</span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RandomRule</span>(); # 可以返回不同的规则实现<br>&#125;<br></code></pre></td></tr></table></figure><p>方式2、配置文件方式：在<strong>消费者</strong> 的application.yml 配置文件中，添加新的配置也可以修改规则  【针对某个服务而言】</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 配置负载均衡规则</span><br><span class="hljs-attr">userservice:</span><br>  <span class="hljs-attr">ribbon:</span><br>    <span class="hljs-attr">NFLoadBalancerRuleClassName:</span> <span class="hljs-string">com.netflix.loadbalancer.RandomRule</span>  <span class="hljs-comment"># 负载均衡规则</span><br></code></pre></td></tr></table></figure><h2 id="3、饥饿加载"><a href="#3、饥饿加载" class="headerlink" title="3、饥饿加载"></a>3、饥饿加载</h2><p>Ribbon 默认是采用懒加载，即第一次访问时才会去创建LoadBalanceClient，请求时间会很长。而饥饿加载则会在项目启动时创建，降低第一次访问的耗时，通过下面配置开启饥饿加载：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 默认懒加载，切换成饥饿加载  -即项目启动的时候就加载指定服务</span><br><span class="hljs-attr">ribbon:</span><br>  <span class="hljs-attr">eager-load:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># 开启饥饿加载</span><br>    <span class="hljs-attr">clients:</span> <br>      <span class="hljs-bullet">-</span> <span class="hljs-string">userservice</span>  <span class="hljs-comment"># 指定对 userservice 这个服务进行饥饿加载</span><br></code></pre></td></tr></table></figure><h2 id="Ribbon-负载均衡-总结："><a href="#Ribbon-负载均衡-总结：" class="headerlink" title="Ribbon 负载均衡 总结："></a>Ribbon 负载均衡 总结：</h2><p><img src="/img/springcloud_img/Ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E6%80%BB%E7%BB%93.png" alt="Ribbon负载均衡总结"></p><h1 id="六、Nacos-注册中心"><a href="#六、Nacos-注册中心" class="headerlink" title="六、Nacos 注册中心"></a>六、Nacos 注册中心</h1><h2 id="1、安装Nacos"><a href="#1、安装Nacos" class="headerlink" title="1、安装Nacos"></a>1、安装Nacos</h2><p>进入<a href="https://github.com/alibaba/nacos/releases">GitHub的Release下载页</a>， <a href="https://pan.baidu.com/s/1mAKnFmJNkD6JLvt-wPN3dQ?pwd=rbx3">下载<code>.zip</code>压缩文件</a>，下载完成之后解压，解压完成之后进入bin目录，Windows下的启动命令是：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">startup.cmd -m standalone<br></code></pre></td></tr></table></figure><p># -m 模式   standalone：单机启动</p><p><img src="/img/springcloud_img/Nacos%E5%90%AF%E5%8A%A8.png" alt="Nacos启动"></p><p>启动完成之后就可以输入url：<code>http://192.168.0.104:8848/nacos/index.html</code>登录了，默认的账号密码都是<code>nacos</code> </p><p><img src="/img/springcloud_img/nacos%E9%A6%96%E9%A1%B5.png" alt="nacos首页"></p><h2 id="2、快速入门"><a href="#2、快速入门" class="headerlink" title="2、快速入门"></a>2、快速入门</h2><p>1、在父工程中引入<code>spring-cloud-alibaba-dependencies</code> nacos的管理依赖【管理版本】</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--springCloudAlibaba--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.2.5.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">type</span>&gt;</span>pom<span class="hljs-tag">&lt;/<span class="hljs-name">type</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>import<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>2、在服务中引入nacos依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--nacos依赖--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>3、在application.yml 配置文件中配置nacos</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span> <br>  <span class="hljs-attr">cloud:</span><br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-string">localhost:8848</span>  <span class="hljs-comment"># nacos服务地址</span><br></code></pre></td></tr></table></figure><p>启动项目，就可以在nacos的管理页面看到注册的服务了</p><p><img src="/img/springcloud_img/nacos%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.png" alt="nacos快速入门"></p><h2 id="3、Nacos-服务分级存储模型"><a href="#3、Nacos-服务分级存储模型" class="headerlink" title="3、Nacos 服务分级存储模型"></a>3、Nacos 服务分级存储模型</h2><h3 id="3-1、服务集群属性"><a href="#3-1、服务集群属性" class="headerlink" title="3.1、服务集群属性"></a>3.1、服务集群属性</h3><h4 id="提供者"><a href="#提供者" class="headerlink" title="提供者"></a>提供者</h4><p>1、修改application.yml ，</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span> <br>  <span class="hljs-attr">cloud:</span> <br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-string">localhost:8848</span>  <span class="hljs-comment"># nacos 服务端地址</span><br>      <span class="hljs-attr">discovery:</span><br>        <span class="hljs-attr">cluster-name:</span> <span class="hljs-string">HZ</span>  <span class="hljs-comment"># 配置集群名称，也就是机房位置，例如：HZ，杭州</span><br></code></pre></td></tr></table></figure><p>2、在Nacos 控制台可以看到集群变化：</p><p><img src="/img/springcloud_img/Nacos%E9%9B%86%E7%BE%A4.png" alt="# Nacos集群"></p><p><img src="/img/springcloud_img/Nacos%E9%9B%86%E7%BE%A4%E6%80%BB%E7%BB%93.png" alt="Nacos集群总结"></p><h4 id="消费者"><a href="#消费者" class="headerlink" title="消费者"></a>消费者</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span> <br>  <span class="hljs-attr">cloud:</span><br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8848</span>  <span class="hljs-comment"># nacos服务地址</span><br>      <span class="hljs-attr">discovery:</span><br>        <span class="hljs-attr">cluster-name:</span> <span class="hljs-string">HZ</span> <span class="hljs-comment"># 集群名称</span><br></code></pre></td></tr></table></figure><h3 id="3-2、NacosRule-负载均衡"><a href="#3-2、NacosRule-负载均衡" class="headerlink" title="3.2、NacosRule 负载均衡"></a>3.2、NacosRule 负载均衡</h3><h4 id="根据集群负载均衡："><a href="#根据集群负载均衡：" class="headerlink" title="根据集群负载均衡："></a>根据集群负载均衡：</h4><p>在<strong>消费者</strong>中设置负载均衡的IRule为NacosRule，这个规则会优先寻找与自己同集群的服务：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 配置负载均衡规则</span><br><span class="hljs-attr">userservice:</span><br>  <span class="hljs-attr">ribbon:</span><br>    <span class="hljs-attr">NFLoadBalancerRuleClassName:</span> <span class="hljs-string">com.alibaba.cloud.nacos.ribbon.NacosRule</span>  <span class="hljs-comment"># 负载均衡规则</span><br></code></pre></td></tr></table></figure><p><strong>总结：</strong></p><ul><li>NacosRule 负载均衡规则：<ul><li>1、优先选择同集群服务实例列表</li><li>2、本地集群找不到提供者，才会去其它集群寻找，并且会报警告</li><li>3、确定了可用实例列表后，再采用随机负载均衡挑选实例</li></ul></li></ul><h4 id="根据权重负载均衡"><a href="#根据权重负载均衡" class="headerlink" title="根据权重负载均衡"></a>根据权重负载均衡</h4><p>实际部署中会出现这样的场景：</p><ul><li>服务器设备性能有差异，部分实例所在机器性能较好，另一些较差，我们希望性能号的机器承担更多的用户请求</li></ul><p>Nacos 提供了权重配置来控制访问频率，权重越大则访问频率越高</p><p>1、在Nacos控制台可以设置实例的权重值，首先选中实例后面的编辑按钮：</p><p><img src="/img/springcloud_img/Nacos%E6%A0%B9%E6%8D%AE%E6%9D%83%E9%87%8D%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A11.png" alt="Nacos根据权重负载均衡1"></p><p>2、在这里就可以设置权重了</p><p><img src="/img/springcloud_img/Nacos%E6%A0%B9%E6%8D%AE%E6%9D%83%E9%87%8D%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A12.png" alt="Nacos根据权重负载均衡2"></p><p><strong>总结：</strong></p><ul><li>实例的权重控制<ul><li>Nacos 控制台可以设置实例的权重值，0~1 之间</li><li>同集群内的多个实例，权重越高被访问的频率越高</li><li>权重设置为0 则完全不会被访问</li></ul></li></ul><h2 id="4、Nacos-环境隔离namespace"><a href="#4、Nacos-环境隔离namespace" class="headerlink" title="4、Nacos 环境隔离namespace"></a>4、Nacos 环境隔离namespace</h2><p>Nacos 中服务存储和数据存储的最外层都是一个名为namespace 的东西，用来做最外层隔离</p><p><img src="/img/springcloud_img/Nacos%E7%8E%AF%E5%A2%83%E9%9A%94%E7%A6%BBnamespace.png" alt="Nacos环境隔离namespace"></p><p>默认只会有public 一个命名空间，可以手动在Nacos 页面中新建命名空间，ID可填可不填，如果不填会自动生成</p><p><img src="/img/springcloud_img/Nacos%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B42.png" alt="Nacos命名空间2"></p><p><img src="/img/springcloud_img/Nacos%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B43.png" alt="Nacos命名空间3"></p><p><strong>修改服务的命名空间：</strong></p><p>在application.yml 中添加namespace：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span> <br>  <span class="hljs-attr">cloud:</span><br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8848</span>  <span class="hljs-comment"># nacos服务地址</span><br>      <span class="hljs-attr">discovery:</span><br>        <span class="hljs-attr">cluster-name:</span> <span class="hljs-string">HZ</span> <span class="hljs-comment"># 集群名称</span><br>        <span class="hljs-attr">namespace:</span> <span class="hljs-string">1af3800d-f0b5-4ddf-88f3-cc09aa367d0f</span>  <span class="hljs-comment"># 命名空间  填命名空间ID</span><br></code></pre></td></tr></table></figure><p>修改完成之后，在Nacos页面中就会在对应的命名空间下显示服务了</p><p><img src="/img/springcloud_img/Nacos%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B44.png" alt="Nacos命名空间4"></p><p>此时再去发请求就会报错，因为它们不在同一个命名空间下</p><p><img src="/img/springcloud_img/Nacos%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B45.png" alt="Nacos命名空间5"></p><p><img src="/img/springcloud_img/Nacos%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B46.png" alt="Nacos命名空间6"></p><p><strong>总结：</strong></p><ul><li>Nacos 环境隔离：<ul><li>namespace 用来做环境隔离</li><li>每个namespace 都有唯一id</li><li>不同namespace 下的服务不可见</li></ul></li></ul><h2 id="5、Nacos-注册中心原理"><a href="#5、Nacos-注册中心原理" class="headerlink" title="5、Nacos 注册中心原理"></a>5、Nacos 注册中心原理</h2><h3 id="5-1、Nacos-注册中心细节分析"><a href="#5-1、Nacos-注册中心细节分析" class="headerlink" title="5.1、Nacos 注册中心细节分析"></a>5.1、Nacos 注册中心细节分析</h3><p><img src="/img/springcloud_img/Nacos%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%E7%BB%86%E8%8A%82.png" alt="Nacos注册中心细节"></p><p><strong>服务注册消费步骤：</strong></p><ul><li><p>服务提供者在 注册中心 中 注册服务信息</p></li><li><p>服务消费者定时去 注册中心中 拉取服务</p><ul><li>消费者不是每次请求都进行拉取</li><li>消费者会将拉取到的服务列表 缓存起来</li></ul></li><li><p>服务消费者拿到服务列表之后，通过负载均衡 发起远程调用</p><p><img src="/img/springcloud_img/Nacos%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%E7%BB%86%E8%8A%822.png" alt="Nacos注册中心细节2"></p></li><li><p>服务提供者：</p><ul><li>Nacos 会把服务提供者划分成 临时实例 和 非临时实例。默认情况下，所有的实例都是临时实例</li><li>临时实例在Nacos 中做检查时，采用的是心跳检测【提供者每隔一段时间，发一个请求到Nacos 中。当服务提供者不再发送请求到Nacos 中 ，Nacos 就会把这个提供者直接剔除】</li><li>非临时实例是由 Nacos主动发请求询问服务提供者 【Nacos 不会把非临时实例从列表中剔除，只是会标记为不健康】</li></ul></li><li><p>服务消费者：</p><ul><li>Eureka 采取定时拉取服务【pull】</li><li>Nacos 采取定时拉取服务 和 主动推送服务变更消息 【pull + push 两者结合】，如果Nacos发现有服务挂了，Nacos会立即发起推送给消费者</li></ul></li></ul><h3 id="5-2、临时实例和非临时实例"><a href="#5-2、临时实例和非临时实例" class="headerlink" title="5.2、临时实例和非临时实例"></a>5.2、临时实例和非临时实例</h3><p>服务注册到Nacos 时，可以选择注册为临时实例 或 非临时实例，通过下面的配置来设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span> <br>  <span class="hljs-attr">cloud:</span><br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><span class="hljs-string">:8848</span>  <span class="hljs-comment"># nacos服务地址</span><br>      <span class="hljs-attr">discovery:</span><br>        <span class="hljs-attr">cluster-name:</span> <span class="hljs-string">HZ</span> <span class="hljs-comment"># 集群名称</span><br>        <span class="hljs-attr">namespace:</span> <span class="hljs-string">1af3800d-f0b5-4ddf-88f3-cc09aa367d0f</span>  <span class="hljs-comment"># 命名空间  填命名空间ID</span><br>        <span class="hljs-attr">ephemeral:</span> <span class="hljs-literal">false</span>  <span class="hljs-comment"># 注册到Nacos时，注册为非临时实例</span><br></code></pre></td></tr></table></figure><p>非临时实例主动检测会增加服务器压力</p><p>Nacos 集群默认采用AP方式，当集群中存在非临时实例时，采用CP模式；Eureka采用AP模式</p><h1 id="七、Nacos-配置管理"><a href="#七、Nacos-配置管理" class="headerlink" title="七、Nacos 配置管理"></a>七、Nacos 配置管理</h1><h2 id="1、统一配置管理"><a href="#1、统一配置管理" class="headerlink" title="1、统一配置管理"></a>1、统一配置管理</h2><ul><li>作用：配置更改热更新</li></ul><p>增加配置步骤：</p><p><img src="/img/springcloud_img/Nacos%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E6%B7%BB%E5%8A%A0%E9%85%8D%E7%BD%AE1.png" alt="Nacos配置管理添加配置1"></p><p><img src="/img/springcloud_img/Nacos%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E5%A2%9E%E5%8A%A0%E9%85%8D%E7%BD%AE2.png" alt="Nacos配置管理增加配置2"></p><p><img src="/img/springcloud_img/Nacos%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E6%B7%BB%E5%8A%A0%E9%85%8D%E7%BD%AE3.png" alt="Nacos配置管理添加配置3"></p><h2 id="2、微服务配置拉取【微服务拉取Nacos中定义的配置】"><a href="#2、微服务配置拉取【微服务拉取Nacos中定义的配置】" class="headerlink" title="2、微服务配置拉取【微服务拉取Nacos中定义的配置】"></a>2、微服务配置拉取【微服务拉取Nacos中定义的配置】</h2><p>配置获取步骤分析：</p><ul><li>1、项目启动</li><li><strong>2、读取bootstrap.yml配置文件 【提前在 bootstrap.yml 配置文件中设置nacos 地址】</strong></li><li><strong>3、读取Nacos 中的配置文件</strong> </li><li>4、读取本地配置文件 application.yml</li><li>5、创建Spring 容器</li><li>6、加载bean</li></ul><p>在微服务中设置Nacos 配置拉取：</p><p>1、引入Nacos 的配置管理客户端依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--nacos配置管理依赖--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>2、新建 <code>bootstrap.yml</code> 配置文件，配置Nacos 配置管理的地址</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">userservice</span>  <span class="hljs-comment"># 服务名称</span><br>  <span class="hljs-attr">profiles:</span><br>    <span class="hljs-attr">active:</span> <span class="hljs-string">dev</span>  <span class="hljs-comment"># 环境</span><br>  <span class="hljs-attr">cloud:</span><br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-string">localhost:8848</span>  <span class="hljs-comment"># Nacos 地址</span><br>      <span class="hljs-attr">config:</span><br>        <span class="hljs-attr">file-extension:</span> <span class="hljs-string">yaml</span>  <span class="hljs-comment"># 文件后缀名</span><br></code></pre></td></tr></table></figure><p>启动项目查看是否使用了Nacos 中配置的内容:</p><p>1、在代码中使用Nacos 中配置的内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 注入Nacos 中的配置</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Value(&quot;$&#123;pattern.dateformat&#125;&quot;)</span><br><span class="hljs-keyword">private</span> String dateformat;<br><br><span class="hljs-meta">@GetMapping(&quot;now&quot;)</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">now</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> LocalDateTime.now().format(DateTimeFormatter.ofPattern(dateformat));<br>&#125;<br></code></pre></td></tr></table></figure><p>2、通过浏览器访问这个接口</p><p><img src="/img/springcloud_img/Nacos%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86.png" alt="Nacos配置管理"></p><p><img src="/img/springcloud_img/Nacos%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E6%80%BB%E7%BB%93.png" alt="Nacos配置管理总结"></p><h2 id="3、配置热更新"><a href="#3、配置热更新" class="headerlink" title="3、配置热更新"></a>3、配置热更新</h2><h3 id="配置自动刷新"><a href="#配置自动刷新" class="headerlink" title="配置自动刷新"></a>配置自动刷新</h3><p>Nacos 中的配置文件变更后，微服务无需重启就可以感知，不过需要通过下面两种配置实现：</p><p><strong>方式1：在 @Value 注入的变量所在类上添加注解 <code>@RefreshScope</code></strong></p><p><img src="/img/springcloud_img/Nacos%E7%83%AD%E6%9B%B4%E6%96%B0%E9%85%8D%E7%BD%AE1.png" alt="Nacos热更新配置1"></p><p>**方式2：使用 <code>@ConfigurationProperties</code> 注解 **</p><p><img src="/img/springcloud_img/Nacos%E7%83%AD%E6%9B%B4%E6%96%B02.png" alt="Nacos热更新2"></p><p><img src="/img/springcloud_img/Nacos%E7%83%AD%E6%9B%B4%E6%96%B0%E9%85%8D%E7%BD%AE3.png" alt="Nacos热更新配置3"></p><p><img src="/img/springcloud_img/Nacos%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E7%83%AD%E6%9B%B4%E6%96%B0%E9%85%8D%E7%BD%AE%E6%80%BB%E7%BB%93.png" alt="Nacos配置管理热更新配置总结"></p><h2 id="4、多环境配置共享"><a href="#4、多环境配置共享" class="headerlink" title="4、多环境配置共享"></a>4、多环境配置共享</h2><p>微服务启动时会从nacos读取多个配置文件：</p><ul><li>服务名称-环境.yaml   ，例如：userservice-dev.yaml</li><li>服务名称.yaml    ，例如： userservice.yaml</li></ul><p>无论环境如何变化，<code>服务名称.yaml</code> 这个文件一定会加载，因此多环境共享配置可以写入这个文件</p><p><strong>多种配置的优先级：</strong></p><ul><li><p>nacos 中的配置 &gt; 本地配置</p></li><li><p><code>服务名称-环境.yaml</code> &gt; <code>服务名称.yaml</code> &gt; 本地配置</p></li></ul><p><img src="/img/springcloud_img/Nacos%E5%A4%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E6%80%BB%E7%BB%93.png" alt="Nacos多环境配置总结"></p><h2 id="5、Nacos-集群搭建"><a href="#5、Nacos-集群搭建" class="headerlink" title="5、Nacos 集群搭建"></a>5、Nacos 集群搭建</h2><h3 id="5-1、集群结构图"><a href="#5-1、集群结构图" class="headerlink" title="5.1、集群结构图"></a>5.1、集群结构图</h3><p>官方给出的Nacos 集群图：</p><p><img src="/img/springcloud_img/%E5%AE%98%E6%96%B9Nacos%E9%9B%86%E7%BE%A4%E5%9B%BE.png" alt="官方Nacos集群图"></p><p>其中包含三个Nacos 节点，然后一个负载均衡器代理3个Nacos 。这里负载均衡器可以使用nginx。</p><p><img src="/img/springcloud_img/Nacos%E9%9B%86%E7%BE%A4%E5%9B%BE.png" alt="Nacos集群图"></p><p>三个Nacos 节点的地址: </p><table><thead><tr><th>节点</th><th>ip</th><th>port</th></tr></thead><tbody><tr><td>nacos1</td><td>192.168.0.104</td><td>8845</td></tr><tr><td>nacos2</td><td>192.168.0.104</td><td>8846</td></tr><tr><td>nacos3</td><td>192.168.0.104</td><td>8847</td></tr></tbody></table><h3 id="5-2、搭建集群"><a href="#5-2、搭建集群" class="headerlink" title="5.2、搭建集群"></a>5.2、搭建集群</h3><p>搭建集群的基本步骤：</p><ul><li>搭建数据库，初始化数据库表结构</li><li>下载nacos 安装包</li><li>配置nacos</li><li>启动nacos 集群</li><li>nginx 反向代理</li></ul><h4 id="5-2-1、初始化数据库"><a href="#5-2-1、初始化数据库" class="headerlink" title="5.2.1、初始化数据库"></a>5.2.1、初始化数据库</h4><p>首先新建一个数据库，命名为nacos，而后导入下面的SQL：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `config_info` (<br>  `id` <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;id&#x27;</span>,<br>  `data_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;data_id&#x27;</span>,<br>  `group_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `content` longtext <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;content&#x27;</span>,<br>  `md5` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;md5&#x27;</span>,<br>  `gmt_create` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>  `gmt_modified` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;修改时间&#x27;</span>,<br>  `src_user` text COMMENT <span class="hljs-string">&#x27;source user&#x27;</span>,<br>  `src_ip` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;source ip&#x27;</span>,<br>  `app_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `tenant_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;租户字段&#x27;</span>,<br>  `c_desc` <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `c_use` <span class="hljs-type">varchar</span>(<span class="hljs-number">64</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `effect` <span class="hljs-type">varchar</span>(<span class="hljs-number">64</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `type` <span class="hljs-type">varchar</span>(<span class="hljs-number">64</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `c_schema` text,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;config_info&#x27;</span>;<br><br><span class="hljs-comment">/******************************************/</span><br><span class="hljs-comment">/*   数据库全名 = nacos_config   */</span><br><span class="hljs-comment">/*   表名称 = config_info_aggr   */</span><br><span class="hljs-comment">/******************************************/</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `config_info_aggr` (<br>  `id` <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;id&#x27;</span>,<br>  `data_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;data_id&#x27;</span>,<br>  `group_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;group_id&#x27;</span>,<br>  `datum_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;datum_id&#x27;</span>,<br>  `content` longtext <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;内容&#x27;</span>,<br>  `gmt_modified` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;修改时间&#x27;</span>,<br>  `app_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `tenant_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;租户字段&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;增加租户字段&#x27;</span>;<br><br><br><span class="hljs-comment">/******************************************/</span><br><span class="hljs-comment">/*   数据库全名 = nacos_config   */</span><br><span class="hljs-comment">/*   表名称 = config_info_beta   */</span><br><span class="hljs-comment">/******************************************/</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `config_info_beta` (<br>  `id` <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;id&#x27;</span>,<br>  `data_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;data_id&#x27;</span>,<br>  `group_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;group_id&#x27;</span>,<br>  `app_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;app_name&#x27;</span>,<br>  `content` longtext <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;content&#x27;</span>,<br>  `beta_ips` <span class="hljs-type">varchar</span>(<span class="hljs-number">1024</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;betaIps&#x27;</span>,<br>  `md5` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;md5&#x27;</span>,<br>  `gmt_create` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>  `gmt_modified` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;修改时间&#x27;</span>,<br>  `src_user` text COMMENT <span class="hljs-string">&#x27;source user&#x27;</span>,<br>  `src_ip` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;source ip&#x27;</span>,<br>  `tenant_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;租户字段&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;config_info_beta&#x27;</span>;<br><br><span class="hljs-comment">/******************************************/</span><br><span class="hljs-comment">/*   数据库全名 = nacos_config   */</span><br><span class="hljs-comment">/*   表名称 = config_info_tag   */</span><br><span class="hljs-comment">/******************************************/</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `config_info_tag` (<br>  `id` <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;id&#x27;</span>,<br>  `data_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;data_id&#x27;</span>,<br>  `group_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;group_id&#x27;</span>,<br>  `tenant_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;tenant_id&#x27;</span>,<br>  `tag_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;tag_id&#x27;</span>,<br>  `app_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;app_name&#x27;</span>,<br>  `content` longtext <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;content&#x27;</span>,<br>  `md5` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;md5&#x27;</span>,<br>  `gmt_create` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>  `gmt_modified` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;修改时间&#x27;</span>,<br>  `src_user` text COMMENT <span class="hljs-string">&#x27;source user&#x27;</span>,<br>  `src_ip` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;source ip&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;config_info_tag&#x27;</span>;<br><br><span class="hljs-comment">/******************************************/</span><br><span class="hljs-comment">/*   数据库全名 = nacos_config   */</span><br><span class="hljs-comment">/*   表名称 = config_tags_relation   */</span><br><span class="hljs-comment">/******************************************/</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `config_tags_relation` (<br>  `id` <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;id&#x27;</span>,<br>  `tag_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;tag_name&#x27;</span>,<br>  `tag_type` <span class="hljs-type">varchar</span>(<span class="hljs-number">64</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;tag_type&#x27;</span>,<br>  `data_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;data_id&#x27;</span>,<br>  `group_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;group_id&#x27;</span>,<br>  `tenant_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;tenant_id&#x27;</span>,<br>  `nid` <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`nid`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`),<br>  KEY `idx_tenant_id` (`tenant_id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;config_tag_relation&#x27;</span>;<br><br><span class="hljs-comment">/******************************************/</span><br><span class="hljs-comment">/*   数据库全名 = nacos_config   */</span><br><span class="hljs-comment">/*   表名称 = group_capacity   */</span><br><span class="hljs-comment">/******************************************/</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `group_capacity` (<br>  `id` <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键ID&#x27;</span>,<br>  `group_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;Group ID，空字符表示整个集群&#x27;</span>,<br>  `quota` <span class="hljs-type">int</span>(<span class="hljs-number">10</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;配额，0表示使用默认值&#x27;</span>,<br>  `usage` <span class="hljs-type">int</span>(<span class="hljs-number">10</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;使用量&#x27;</span>,<br>  `max_size` <span class="hljs-type">int</span>(<span class="hljs-number">10</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,<br>  `max_aggr_count` <span class="hljs-type">int</span>(<span class="hljs-number">10</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;聚合子配置最大个数，，0表示使用默认值&#x27;</span>,<br>  `max_aggr_size` <span class="hljs-type">int</span>(<span class="hljs-number">10</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,<br>  `max_history_count` <span class="hljs-type">int</span>(<span class="hljs-number">10</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;最大变更历史数量&#x27;</span>,<br>  `gmt_create` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>  `gmt_modified` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;修改时间&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `uk_group_id` (`group_id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;集群、各Group容量信息表&#x27;</span>;<br><br><span class="hljs-comment">/******************************************/</span><br><span class="hljs-comment">/*   数据库全名 = nacos_config   */</span><br><span class="hljs-comment">/*   表名称 = his_config_info   */</span><br><span class="hljs-comment">/******************************************/</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `his_config_info` (<br>  `id` <span class="hljs-type">bigint</span>(<span class="hljs-number">64</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  `nid` <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT,<br>  `data_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  `group_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  `app_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;app_name&#x27;</span>,<br>  `content` longtext <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>  `md5` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `gmt_create` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span>,<br>  `gmt_modified` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span>,<br>  `src_user` text,<br>  `src_ip` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `op_type` <span class="hljs-type">char</span>(<span class="hljs-number">10</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `tenant_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;租户字段&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`nid`),<br>  KEY `idx_gmt_create` (`gmt_create`),<br>  KEY `idx_gmt_modified` (`gmt_modified`),<br>  KEY `idx_did` (`data_id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;多租户改造&#x27;</span>;<br><br><br><span class="hljs-comment">/******************************************/</span><br><span class="hljs-comment">/*   数据库全名 = nacos_config   */</span><br><span class="hljs-comment">/*   表名称 = tenant_capacity   */</span><br><span class="hljs-comment">/******************************************/</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `tenant_capacity` (<br>  `id` <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键ID&#x27;</span>,<br>  `tenant_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;Tenant ID&#x27;</span>,<br>  `quota` <span class="hljs-type">int</span>(<span class="hljs-number">10</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;配额，0表示使用默认值&#x27;</span>,<br>  `usage` <span class="hljs-type">int</span>(<span class="hljs-number">10</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;使用量&#x27;</span>,<br>  `max_size` <span class="hljs-type">int</span>(<span class="hljs-number">10</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;单个配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,<br>  `max_aggr_count` <span class="hljs-type">int</span>(<span class="hljs-number">10</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;聚合子配置最大个数&#x27;</span>,<br>  `max_aggr_size` <span class="hljs-type">int</span>(<span class="hljs-number">10</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值&#x27;</span>,<br>  `max_history_count` <span class="hljs-type">int</span>(<span class="hljs-number">10</span>) unsigned <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-string">&#x27;0&#x27;</span> COMMENT <span class="hljs-string">&#x27;最大变更历史数量&#x27;</span>,<br>  `gmt_create` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>  `gmt_modified` datetime <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-built_in">CURRENT_TIMESTAMP</span> COMMENT <span class="hljs-string">&#x27;修改时间&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `uk_tenant_id` (`tenant_id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;租户容量信息表&#x27;</span>;<br><br><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `tenant_info` (<br>  `id` <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;id&#x27;</span>,<br>  `kp` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;kp&#x27;</span>,<br>  `tenant_id` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">default</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;tenant_id&#x27;</span>,<br>  `tenant_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">128</span>) <span class="hljs-keyword">default</span> <span class="hljs-string">&#x27;&#x27;</span> COMMENT <span class="hljs-string">&#x27;tenant_name&#x27;</span>,<br>  `tenant_desc` <span class="hljs-type">varchar</span>(<span class="hljs-number">256</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;tenant_desc&#x27;</span>,<br>  `create_source` <span class="hljs-type">varchar</span>(<span class="hljs-number">32</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;create_source&#x27;</span>,<br>  `gmt_create` <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;创建时间&#x27;</span>,<br>  `gmt_modified` <span class="hljs-type">bigint</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> COMMENT <span class="hljs-string">&#x27;修改时间&#x27;</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`),<br>  <span class="hljs-keyword">UNIQUE</span> KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`),<br>  KEY `idx_tenant_id` (`tenant_id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8_bin COMMENT<span class="hljs-operator">=</span><span class="hljs-string">&#x27;tenant_info&#x27;</span>;<br><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `users` (<br>`username` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">PRIMARY</span> KEY,<br>`password` <span class="hljs-type">varchar</span>(<span class="hljs-number">500</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>`enabled` <span class="hljs-type">boolean</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span><br>);<br><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `roles` (<br>`username` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>`role` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br><span class="hljs-keyword">UNIQUE</span> INDEX `idx_user_role` (`username` <span class="hljs-keyword">ASC</span>, `role` <span class="hljs-keyword">ASC</span>) <span class="hljs-keyword">USING</span> BTREE<br>);<br><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `permissions` (<br>    `role` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    `resource` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    `action` <span class="hljs-type">varchar</span>(<span class="hljs-number">8</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span>,<br>    <span class="hljs-keyword">UNIQUE</span> INDEX `uk_role_permission` (`role`,`resource`,`action`) <span class="hljs-keyword">USING</span> BTREE<br>);<br><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> users (username, password, enabled) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;nacos&#x27;</span>, <span class="hljs-string">&#x27;$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu&#x27;</span>, <span class="hljs-literal">TRUE</span>);<br><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> roles (username, role) <span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;nacos&#x27;</span>, <span class="hljs-string">&#x27;ROLE_ADMIN&#x27;</span>);<br></code></pre></td></tr></table></figure><p>执行完成之后，结构如下：</p><p><img src="/img/springcloud_img/%E5%88%9D%E5%A7%8B%E5%8C%96%E6%95%B0%E6%8D%AE%E5%BA%93.png" alt="初始化数据库"></p><h4 id="5-2-2、下载nacos"><a href="#5-2-2、下载nacos" class="headerlink" title="5.2.2、下载nacos"></a>5.2.2、下载nacos</h4><p>nacos 下载地址：<a href="https://github.com/alibaba/nacos/tags">https://github.com/alibaba/nacos/tags</a></p><h4 id="5-2-3、配置nacos"><a href="#5-2-3、配置nacos" class="headerlink" title="5.2.3、配置nacos"></a>5.2.3、配置nacos</h4><p>将这个包解压到任意非中文目录下，如图：</p><p><img src="/img/springcloud_img/Nacos%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE.png" alt="Nacos集群配置"></p><p>1、进入nacos 的conf 目录，修改配置文件cluster.conf.example，重命名为 cluster.conf</p><p><img src="/img/springcloud_img/Nacos%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE2.png" alt="Nacos集群配置2"></p><p>然后在cluster.conf 中添加内容：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Text">192.168.0.104:8845<br>192.168.0.104:8846<br>192.168.0.104:8847<br></code></pre></td></tr></table></figure><p><img src="/img/springcloud_img/Nacos%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE3.png" alt="Nacos集群配置3"></p><p>2、编辑<code>application.properties</code> 配置文件</p><p><img src="/img/springcloud_img/application.properties%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%BD%8D%E7%BD%AE.png" alt="application.properties配置文件位置"></p><p><img src="/img/springcloud_img/Nacos%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE4.png" alt="Nacos集群配置4"></p><p>3、将nacos 解压文件复制三份，重命名【代表3个nacos 】</p><p><img src="/img/springcloud_img/Nacos%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE5.png" alt="Nacos集群配置5"></p><p>4、编辑application.properties 配置端口</p><p><img src="/img/springcloud_img/Nacos%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE6.png" alt="Nacos集群配置6"></p><p>5、分别启动三个nacos 节点</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd">startup.<span class="hljs-built_in">cmd</span><br></code></pre></td></tr></table></figure><p><img src="/img/springcloud_img/Nacos%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE7.png" alt="Nacos集群配置7"></p><h4 id="5-2-4、Nginx-反向代理"><a href="#5-2-4、Nginx-反向代理" class="headerlink" title="5.2.4、Nginx 反向代理"></a>5.2.4、Nginx 反向代理</h4><p>解压<a href="https://pan.baidu.com/s/1wCwprIEpCwZPxVmpD4of6w?pwd=2o6d">nginx安装包</a> ，找到conf目录，修改<code>nginx.conf</code> 文件</p><p><img src="/img/springcloud_img/Nacos%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE-Nginx%E9%85%8D%E7%BD%AE.png" alt="Nacos集群配置-Nginx配置"></p><p>修改conf&#x2F;nginx.conf文件，配置如下：【放到http{ } 括号内部】</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> nacos-cluster &#123;  <span class="hljs-comment"># 配置集群，nginx就可以对这三个地址做负载均衡</span><br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.0.104:8845</span>;<br><span class="hljs-attribute">server</span> <span class="hljs-number">192.168.0.104:8846</span>;<br><span class="hljs-attribute">server</span> <span class="hljs-number">192.168.0.104:8847</span>;<br>&#125;<br><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<span class="hljs-comment"># 反向代理 端口</span><br>    <span class="hljs-attribute">server_name</span>  localhost;<span class="hljs-comment"># 反向代理 ip</span><br><br>    <span class="hljs-section">location</span> /nacos &#123;<span class="hljs-comment"># /nacos  ： Nacos 默认路径 【只要访问了这个路径，就代理到上面的集群中】</span><br>        <span class="hljs-attribute">proxy_pass</span> http://nacos-cluster;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/img/springcloud_img/Nacos%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE-Nginx%E9%85%8D%E7%BD%AE2.png" alt="Nacos集群配置 - Nginx配置2"></p><p>启动nginx</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmd"><span class="hljs-built_in">start</span> nginx.exe<br></code></pre></td></tr></table></figure><p><img src="/img/springcloud_img/Nacos%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE-%E5%90%AF%E5%8A%A8Nginx.png" alt="Nacos集群配置 - 启动Nginx"></p><h4 id="5-2-5、配置完成，启动nacos"><a href="#5-2-5、配置完成，启动nacos" class="headerlink" title="5.2.5、配置完成，启动nacos"></a>5.2.5、配置完成，启动nacos</h4><p>浏览器输入 <code>http://localhost/nacos</code>,就可以进入nacos界面</p><h4 id="5-2-6、在Java代码中配置nacos地址"><a href="#5-2-6、在Java代码中配置nacos地址" class="headerlink" title="5.2.6、在Java代码中配置nacos地址"></a>5.2.6、在Java代码中配置nacos地址</h4><p><strong>只需要把端口号换成80 即可</strong></p><p>Java中 <code>bootstrap.yaml</code> 配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">userservice</span>  <span class="hljs-comment"># 服务名称</span><br>  <span class="hljs-attr">profiles:</span><br>    <span class="hljs-attr">active:</span> <span class="hljs-string">dev</span>  <span class="hljs-comment"># 环境</span><br>  <span class="hljs-attr">cloud:</span><br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-string">localhost:80</span>  <span class="hljs-comment"># Nacos 地址   只需要改端口</span><br>      <span class="hljs-attr">config:</span><br>        <span class="hljs-attr">file-extension:</span> <span class="hljs-string">yaml</span>  <span class="hljs-comment"># 文件后缀名</span><br></code></pre></td></tr></table></figure><h1 id="八、http客户端feign"><a href="#八、http客户端feign" class="headerlink" title="八、http客户端feign"></a>八、http客户端feign</h1><h2 id="1、基于Feign-远程调用"><a href="#1、基于Feign-远程调用" class="headerlink" title="1、基于Feign 远程调用"></a>1、基于Feign 远程调用</h2><h3 id="1-1、RestTemplate-方式调用存在的问题"><a href="#1-1、RestTemplate-方式调用存在的问题" class="headerlink" title="1.1、RestTemplate 方式调用存在的问题"></a>1.1、RestTemplate 方式调用存在的问题</h3><p>RestTemplate 发起远程调用的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">url</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;http://userservice/user/&quot;</span>+order.getUserId();<br><span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> restTemplate.getForObject(url,User.class);<br></code></pre></td></tr></table></figure><p>存在以下问题：</p><ul><li>代码可读性差，编程体验不统一</li><li>参数复杂URL难以维护</li></ul><h3 id="1-2、Feign-的介绍"><a href="#1-2、Feign-的介绍" class="headerlink" title="1.2、Feign 的介绍"></a>1.2、Feign 的介绍</h3><p>Feign 是一个声明式的http客户端，官方地址：<a href="http://github.com/OpenFeign/feign">http://github.com/OpenFeign/feign</a></p><p>其作用就是优雅的实现http请求的发送，解决RestTempalte 存在的问题</p><h3 id="1-3、定义和使用Feign-客户端"><a href="#1-3、定义和使用Feign-客户端" class="headerlink" title="1.3、定义和使用Feign 客户端"></a>1.3、定义和使用Feign 客户端</h3><p>使用Feign的步骤如下：</p><p>1、引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>2、在启动类添加<code>@EnableFeignClients</code> 注解开启Feign 功能</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EnableFeignClients</span>  <span class="hljs-comment">// 开启Feign 功能</span><br><span class="hljs-meta">@MapperScan(&quot;cn.itcast.order.mapper&quot;)</span><br><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">OrderApplication</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(OrderApplication.class, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>3、编写Feign 客户端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@FeignClient(&quot;userservice&quot;)</span>  <span class="hljs-comment">// 要调用的服务名称</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserClient</span>&#123;<br>  <span class="hljs-meta">@GetMapping(&quot;/user/&#123;id&#125;&quot;)</span><br>  User <span class="hljs-title function_">findById</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable(&quot;id&quot;)</span>Long id)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>主要是基于SpringMVC 的注解来声明远程调用的信息，比如</p><ul><li>服务名称： userservice</li><li>请求方式：GET</li><li>请求路径：&#x2F;user&#x2F;{id}</li><li>请求参数：Long id</li><li>返回值类型：User</li></ul><p>4、远程调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java">   <span class="hljs-comment">// 注入 定义的UserClient</span><br><span class="hljs-meta">@Autowired</span><br>   UserClient userClient;<br><br>   <span class="hljs-keyword">public</span> Order <span class="hljs-title function_">queryOrderById</span><span class="hljs-params">(Long orderId)</span> &#123;<br>       <span class="hljs-comment">// 1.查询订单</span><br>       <span class="hljs-type">Order</span> <span class="hljs-variable">order</span> <span class="hljs-operator">=</span> orderMapper.findById(orderId);<br><br>       <span class="hljs-comment">// 利用feign 进行远程调用</span><br>       <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> userClient.findById(order.getUserId());<br>       order.setUser(user);<br><br>       <span class="hljs-comment">// 4.返回</span><br>       <span class="hljs-keyword">return</span> order;<br>   &#125;<br></code></pre></td></tr></table></figure><h2 id="2、自定义Feign-的配置"><a href="#2、自定义Feign-的配置" class="headerlink" title="2、自定义Feign 的配置"></a>2、自定义Feign 的配置</h2><p>Feign 运行自定义配置来覆盖默认配置，可以修改的配置如下：</p><p><img src="/img/springcloud_img/Feign%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE.png" alt="Feign自定义配置"></p><p>日志级别：</p><ul><li>NONE 【默认】</li><li>BASIC  当发起http请求时，会记录请求什么时候发的，什么时候结束的，请求时间等请求基本信息</li><li>HEADERS  除了记录请求基本信息之外，还会记录请求头和响应头</li><li>FULL  除了记录请求基本信息、请求头、响应头之外，还会记录请求体，响应体</li></ul><h3 id="2-1、配置Feign-日志有两种方式："><a href="#2-1、配置Feign-日志有两种方式：" class="headerlink" title="2.1、配置Feign 日志有两种方式："></a>2.1、配置Feign 日志有两种方式：</h3><p><strong>方式一：配置文件方式</strong></p><p>1、全局生效：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">feign:</span><br><span class="hljs-attr">client:</span><br><span class="hljs-attr">config:</span><br>      <span class="hljs-attr">default:</span>  <span class="hljs-comment">#  default 全局的配置</span><br>        <span class="hljs-attr">loggerLevel:</span> <span class="hljs-string">BASIC</span>  <span class="hljs-comment"># 日志级别，BASIC 就是基本的请求和响应信息</span><br></code></pre></td></tr></table></figure><p>2、局部生效</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">feign:</span><br><span class="hljs-attr">client:</span><br><span class="hljs-attr">config:</span><br><span class="hljs-attr">userservice:</span>  <span class="hljs-comment"># 这里使用default就是全局配置，如果写的是服务名称，则是针对某个微服务的配置</span><br><span class="hljs-attr">loggerLevel:</span> <span class="hljs-string">FULL</span>  <span class="hljs-comment"># 日志级别</span><br></code></pre></td></tr></table></figure><p><strong>方式二：java代码方式</strong></p><p>1、需要先声明一个Bean：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FeignClientConfiguration</span>()&#123;<br>  <span class="hljs-meta">@Bean</span><br>  <span class="hljs-keyword">public</span> Logger.Level <span class="hljs-title function_">feignLogLevel</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-keyword">return</span> Logger.Level.BASIC;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>2.1、而后如果是全局配置，则把它放到<code>@EnableFeignClients</code> 这个注解中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EnableFeignClients(defaultConfiguration = FeignClientConfiguration.class)</span><br></code></pre></td></tr></table></figure><p>2.2、如果是局部配置，则把它放到<code>@FeignClient</code> 这个注解中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@FeignClient(value=&quot;userservice&quot;, configuration = FeignClientConfiguration.class)</span><br></code></pre></td></tr></table></figure><p><img src="/img/springcloud_img/Feign%E8%87%AA%E5%AE%9A%E4%B9%89%E6%97%A5%E5%BF%97%E9%85%8D%E7%BD%AE.png" alt="Feign 自定义日志配置"></p><h2 id="3、Feign-的性能优化"><a href="#3、Feign-的性能优化" class="headerlink" title="3、Feign 的性能优化"></a>3、Feign 的性能优化</h2><p>Feign 底层的客户端实现：</p><ul><li>URLConnection：默认实现，不支持连接池</li><li>Apache HttpClient：支持连接池</li><li>OKHttp：支持连接池</li></ul><p>因此优化Feign 的性能主要包括：</p><p>1、使用支持连接池的 代替 默认的URLConnection</p><p>2、日志级别，最好用basic 或none</p><h3 id="3-1、Feign-连接池配置"><a href="#3-1、Feign-连接池配置" class="headerlink" title="3.1、Feign 连接池配置"></a>3.1、Feign 连接池配置</h3><h4 id="3-1-1、Feign-添加HttpClient-的支持："><a href="#3-1-1、Feign-添加HttpClient-的支持：" class="headerlink" title="3.1.1、Feign 添加HttpClient 的支持："></a>3.1.1、Feign 添加HttpClient 的支持：</h4><p>1、引入依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--httpClient 的依赖--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.github.openfeign<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>feign-httpclient<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>2、配置连接池：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">feign:</span><br>  <span class="hljs-attr">httpclient:</span><br>    <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># 开启feign 对HttpClient 的支持</span><br>    <span class="hljs-attr">max-connections:</span> <span class="hljs-number">200</span>  <span class="hljs-comment"># 最大连接数</span><br>    <span class="hljs-attr">max-connections-per-route:</span> <span class="hljs-number">50</span>  <span class="hljs-comment"># 每个路径的最大连接数</span><br></code></pre></td></tr></table></figure><p><img src="/img/springcloud_img/Feign%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%80%BB%E7%BB%93.png" alt="Feign 性能优化总结"></p><h2 id="4、Feign最佳实践"><a href="#4、Feign最佳实践" class="headerlink" title="4、Feign最佳实践"></a>4、Feign最佳实践</h2><h3 id="4-1、Feign-最佳实践分析"><a href="#4-1、Feign-最佳实践分析" class="headerlink" title="4.1、Feign 最佳实践分析"></a>4.1、Feign 最佳实践分析</h3><h4 id="4-1-1、方式一（继承）：给消费者的FeignClient-和提供者的controller-定义统一的父接口作为标准"><a href="#4-1-1、方式一（继承）：给消费者的FeignClient-和提供者的controller-定义统一的父接口作为标准" class="headerlink" title="4.1.1、方式一（继承）：给消费者的FeignClient 和提供者的controller 定义统一的父接口作为标准"></a>4.1.1、方式一（继承）：给消费者的FeignClient 和提供者的controller 定义统一的父接口作为标准</h4><p><img src="/img/springcloud_img/Feign%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5-%E7%BB%A7%E6%89%BF.png" alt="Feign最佳实践-继承"></p><h4 id="4-1-2、方式二（抽取）：将FeignClient抽取为独立模块，并且把接口有关的POJO、默认的Feign配置都放到这个模块中，提供给所有消费者使用"><a href="#4-1-2、方式二（抽取）：将FeignClient抽取为独立模块，并且把接口有关的POJO、默认的Feign配置都放到这个模块中，提供给所有消费者使用" class="headerlink" title="4.1.2、方式二（抽取）：将FeignClient抽取为独立模块，并且把接口有关的POJO、默认的Feign配置都放到这个模块中，提供给所有消费者使用"></a>4.1.2、方式二（抽取）：将FeignClient抽取为独立模块，并且把接口有关的POJO、默认的Feign配置都放到这个模块中，提供给所有消费者使用</h4><p><img src="/img/springcloud_img/Feign%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5-%E7%BB%A7%E6%89%BF.png" alt="Feign最佳实践-继承"></p><p><img src="/img/springcloud_img/Feign%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E5%88%86%E6%9E%90%E6%80%BB%E7%BB%93.png" alt="Feign最佳实践分析总结"></p><h4 id="4-2、实现Feign-最佳实践"><a href="#4-2、实现Feign-最佳实践" class="headerlink" title="4.2、实现Feign 最佳实践"></a>4.2、实现Feign 最佳实践</h4><p>**抽取FeignClient **</p><p>实现最佳实践方式二的步骤如下:</p><p>1、首先创建一个modult，命名为feign-api，然后引入feign的starter依赖</p><p>2、将order-service中编写的UserClient、User、DefaultFeignConfiguration都复制到feign-api项目中</p><p>3、在order-service中引入feign-api的依赖</p><p>当定义的FeignClient不再SpringBootApplication的扫描包范围时，这些FeignClient无法使用。有两种方式解决：</p><p>方式一：指定FeignClient所在包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EnableFeignClients(basePackages=&quot;cn.itcast.feign.clients&quot;)</span><br></code></pre></td></tr></table></figure><p>方式二：指定FeignClient字节码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@EnableFeignClients(clients=&#123;UserClient.class&#125;)</span><br></code></pre></td></tr></table></figure><h1 id="九、统一网关Gateway"><a href="#九、统一网关Gateway" class="headerlink" title="九、统一网关Gateway"></a>九、统一网关Gateway</h1><h2 id="1、网关作用介绍"><a href="#1、网关作用介绍" class="headerlink" title="1、网关作用介绍"></a>1、网关作用介绍</h2><p><img src="/img/springcloud_img/%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E7%BD%91%E5%85%B3.png" alt="为什么需要网关"></p><p><strong>网关的技术实现</strong></p><p>在SpringCloud中网关的实现包括两种：</p><ul><li>gateway</li><li>zuul</li></ul><p>Zuul 是基于Servlet 的实现，属于阻塞式编程。而SpringCloudGateway 则是基于Spring5 中提供的WebFlux ，属于响应式编程的实现，具备更好的性能。</p><h2 id="2、搭建网关服务"><a href="#2、搭建网关服务" class="headerlink" title="2、搭建网关服务"></a>2、搭建网关服务</h2><p>搭建网关服务的步骤</p><p>1、创建新的module，引入SpringCloudGateway的依赖和nacos的服务注册发现依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--nacos服务注册发现依赖--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--网关gateway依赖--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>2、编写路由配置及nacos地址</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">10010</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">application:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">gateway</span><br>  <span class="hljs-attr">cloud:</span><br>    <span class="hljs-attr">nacos:</span><br>      <span class="hljs-attr">server-addr:</span> <span class="hljs-string">localhost:8848</span>  <span class="hljs-comment"># nacos地址</span><br>    <span class="hljs-attr">gateway:</span><br>      <span class="hljs-attr">routes:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">id:</span> <span class="hljs-string">user-service</span>  <span class="hljs-comment"># 路由标识</span><br>          <span class="hljs-comment"># uri： http://127.0.0.1:8081  # 路由的目标地址  http就是固定地址</span><br>          <span class="hljs-attr">uri:</span> <span class="hljs-string">lb://userservice</span>  <span class="hljs-comment"># 路由的目标地址</span><br>          <span class="hljs-attr">predicates:</span>  <span class="hljs-comment"># 路由断言，判断请求是否符合规则</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">Path=/user/**</span>  <span class="hljs-comment"># 路径断言，判断路由是否是以/user 开头，如果是，则符合</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">id:</span> <span class="hljs-string">order-service</span><br>          <span class="hljs-attr">uri:</span> <span class="hljs-string">lb://orderservice</span><br>          <span class="hljs-attr">predicates:</span><br>            <span class="hljs-bullet">-</span> <span class="hljs-string">Path=/order/**</span><br><br></code></pre></td></tr></table></figure><p><img src="/img/springcloud_img/gateway%E7%BD%91%E5%85%B3%E8%AE%BE%E7%BD%AE-%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE.png" alt="gateway网关设置-启动项目"></p><p><img src="/img/springcloud_img/gateway%E7%BD%91%E5%85%B3%E6%B5%81%E7%A8%8B.png" alt="gateway网关流程"></p><p><img src="/img/springcloud_img/gateway%E7%BD%91%E5%85%B3%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%AA%A4.png" alt="gateway网关搭建步骤"></p><h2 id="3、路由断言工厂-Route-Predicate-Factory"><a href="#3、路由断言工厂-Route-Predicate-Factory" class="headerlink" title="3、路由断言工厂 Route Predicate Factory"></a>3、路由断言工厂 Route Predicate Factory</h2><p>网关路由可以配置的内容包括：</p><ul><li>路由id：路由唯一标识</li><li>uri：路由目的地，支持 lb 和 http两种</li><li><strong>predicates：路由断言，判断请求是否符合要求，符合则转发到路由目的地</strong></li><li>filters：路由过滤器，处理请求或响应</li></ul><p>在配置文件中写的断言规则只是字符串，这些字符串会被 Predicate Factory 读取并处理，转变为路由判断的条件</p><p>例如<code>Path=/user/**</code> 是按照路径匹配，这个规则是由<code>org.springframework.cloud.gateway.handler.predicate.PathRoutePredicateFactory</code> 类来处理的</p><p><strong>Spring 提供了11种基本的Predicate工厂：</strong></p><p><img src="/img/springcloud_img/gateway%E8%B7%AF%E7%94%B1%E6%96%AD%E8%A8%80%E5%B7%A5%E5%8E%82.png" alt="gateway路由断言工厂"></p><h2 id="4、路由过滤器-GatewayFilter"><a href="#4、路由过滤器-GatewayFilter" class="headerlink" title="4、路由过滤器 GatewayFilter"></a>4、路由过滤器 GatewayFilter</h2><p>GatewayFilter 是网关种提供的一种过滤器，可以对进入网关的请求和微服务返回的响应做处理：</p><p><img src="/img/springcloud_img/gateway%E8%BF%87%E6%BB%A4%E5%99%A8.png" alt="gateway过滤器"></p><h3 id="4-1、过滤器工厂-GatewayFilterFactory"><a href="#4-1、过滤器工厂-GatewayFilterFactory" class="headerlink" title="4.1、过滤器工厂 GatewayFilterFactory"></a>4.1、过滤器工厂 GatewayFilterFactory</h3><p>Spring 提供了31种不同的路由过滤器工厂。例如：</p><p><img src="/img/springcloud_img/gateway%E8%BF%87%E6%BB%A4%E5%99%A8%E5%B7%A5%E5%8E%82.png" alt="gateway过滤器工厂"></p><p><strong>案例：</strong>给所有进入userservice 的请求添加一个请求头</p><p>给所有进入userservice 的请求添加一个请求头：Truth&#x3D;itcast is freaking awesome! </p><p>实现方式：在gateway中修改application.yml 文件，给userservice 的路由添加过滤器：</p><p><img src="/img/springcloud_img/gateway%E8%BF%87%E6%BB%A4%E5%99%A8%E6%A1%88%E4%BE%8B.png" alt="gateway过滤器案例"></p><h3 id="4-2、默认过滤器-default-filters"><a href="#4-2、默认过滤器-default-filters" class="headerlink" title="4.2、默认过滤器  default-filters"></a>4.2、默认过滤器  default-filters</h3><p>如果要对所有的路由都生效，则可以将过滤器工厂写到default-filter 下：<code>spring.cloud.gateway.default-filter</code></p><p><img src="/img/springcloud_img/gateway%E8%BF%87%E6%BB%A4%E5%99%A8-%E6%89%80%E6%9C%89%E8%B7%AF%E7%94%B1%E9%83%BD%E7%94%9F%E6%95%88.png" alt="gateway过滤器-所有路由都生效"></p><p><img src="/img/springcloud_img/gateway%E8%BF%87%E6%BB%A4%E5%99%A8-%E6%80%BB%E7%BB%93.png" alt="gateway过滤器-总结"></p><h2 id="5、全局过滤器-GlobalFilter"><a href="#5、全局过滤器-GlobalFilter" class="headerlink" title="5、全局过滤器 GlobalFilter"></a>5、全局过滤器 GlobalFilter</h2><p>全局过滤器的作用也是处理一切进入网关的请求和微服务响应，与 GatewayFilter 的作用一样</p><p>区别在于GatewayFilter 通过配置定义，处理逻辑是固定的。而GlobalFilter 的逻辑需要自己写代码实现</p><p>定义方式是实现GlobalFilter 接口</p><p><img src="/img/springcloud_img/%E5%85%A8%E5%B1%80%E8%BF%87%E6%BB%A4%E5%99%A8GlobalFilter.png" alt="全局过滤器GlobalFilter"></p><p><strong>案例：</strong>定义全局过滤器，拦截并判断用户身份</p><p>需求：定义全局过滤器，拦截请求，判断请求的参数是否满足下面条件：</p><ul><li>参数中是否有authorization，</li><li>authorization 参数值是否为admin</li></ul><p>如果同时满足则放行，否则拦截</p><p>定义一个类，实现接口<code>GlobalFilter</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.itcast.gateway;<br><br><span class="hljs-keyword">import</span> org.springframework.cloud.gateway.filter.GatewayFilterChain;<br><span class="hljs-keyword">import</span> org.springframework.cloud.gateway.filter.GlobalFilter;<br><span class="hljs-keyword">import</span> org.springframework.core.Ordered;<br><span class="hljs-keyword">import</span> org.springframework.core.annotation.Order;<br><span class="hljs-keyword">import</span> org.springframework.http.HttpStatus;<br><span class="hljs-keyword">import</span> org.springframework.http.server.reactive.ServerHttpRequest;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><span class="hljs-keyword">import</span> org.springframework.util.MultiValueMap;<br><span class="hljs-keyword">import</span> org.springframework.web.server.ServerWebExchange;<br><span class="hljs-keyword">import</span> reactor.core.publisher.Mono;<br><br><span class="hljs-comment">//@Order(-1)  // 这个过滤器的执行优先级  参数越小，优先级越高</span><br><span class="hljs-meta">@Component</span>  <span class="hljs-comment">//将这个方法注册为Spring的组件</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AuthorizeFilter</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">GlobalFilter</span>, Ordered &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> exchange</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> chain</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Mono&lt;Void&gt; <span class="hljs-title function_">filter</span><span class="hljs-params">(ServerWebExchange exchange, GatewayFilterChain chain)</span> &#123;<br>        <span class="hljs-comment">//1、获取请求参数</span><br>        <span class="hljs-type">ServerHttpRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> exchange.getRequest();<br>        MultiValueMap&lt;String, String&gt; params = request.getQueryParams();<br><br>        <span class="hljs-comment">//2、获取参数中的authorization 参数</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">auth</span> <span class="hljs-operator">=</span> params.getFirst(<span class="hljs-string">&quot;authorization&quot;</span>);<br><br>        <span class="hljs-comment">//3、判断参数值是否等于admin</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;admin&quot;</span>.equals(auth))&#123;<br>            <span class="hljs-comment">//放行</span><br>            <span class="hljs-keyword">return</span> chain.filter(exchange);<br>        &#125;<br><br>        <span class="hljs-comment">//拦截</span><br>        exchange.getResponse().setStatusCode(HttpStatus.UNAUTHORIZED); <span class="hljs-comment">//设置状态码  401：未登录</span><br>        <span class="hljs-keyword">return</span> exchange.getResponse().setComplete();<br>    &#125;<br><br>    <span class="hljs-comment">//实现 Ordered 接口，作用与注解 @Order() 一样</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getOrder</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>浏览器直接输入 <code>http://localhost:10010/order/101</code> ,会显示401</p><p><img src="/img/springcloud_img/%E6%A1%88%E4%BE%8B-%E6%9C%AA%E5%8A%A0%E5%8F%82%E6%95%B0.png" alt="案例-未加参数"></p><p>浏览器输入加上参数<code>?authorization=admin</code>，就会显示页面</p><p><img src="/img/springcloud_img/gateway%E5%85%A8%E5%B1%80%E8%BF%87%E6%BB%A4%E5%99%A8%E6%A1%88%E4%BE%8B.png" alt="gateway全局过滤器案例"></p><p><img src="/img/springcloud_img/gateway%E5%85%A8%E5%B1%80%E8%BF%87%E6%BB%A4%E5%99%A8%E6%80%BB%E7%BB%93.png" alt="gateway全局过滤器总结"></p><h2 id="6、过滤器链执行顺序"><a href="#6、过滤器链执行顺序" class="headerlink" title="6、过滤器链执行顺序"></a>6、过滤器链执行顺序</h2><p>请求进入网关会碰到三类过滤器：当前的路由过滤器、DefaultFilter、GlobalFilter</p><p>请求路由后，网关会将当前路由过滤器和DefaultFilter、GlobalFilter，合并到一个过滤器链（集合）中，排序后依次执行每个过滤器</p><p><img src="/img/springcloud_img/%E8%BF%87%E6%BB%A4%E5%99%A8%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F.png" alt="过滤器执行顺序"></p><ul><li>每一个过滤器都必须指定一个int 类型的order值，<strong>order值越小，优先级越高，执行顺序越靠前</strong></li><li>GlobalFilter 通过实现Ordered 接口，或者添加@Order 注解来指定order 值，由我们自己指定</li><li>路由过滤器和defaultFiilter的order由Spring 指定，默认是按照声明顺序从1递增</li><li>当过滤器的order 值一样时，会按照<code>defaultFilter &gt; 路由过滤器 &gt; GlobalFilter</code> 的顺序执行</li></ul><p>可以参考下面及各类的源码来查看：</p><p><img src="/img/springcloud_img/gateway%E8%BF%87%E6%BB%A4%E5%99%A8%E9%93%BE%E6%BA%90%E7%A0%81.png" alt="gateway过滤器链源码"></p><p><img src="/img/springcloud_img/gateway%E8%BF%87%E6%BB%A4%E5%99%A8%E9%93%BE%E6%80%BB%E7%BB%93.png" alt="gateway过滤器链总结"></p><h2 id="7、网关的cors-跨域配置"><a href="#7、网关的cors-跨域配置" class="headerlink" title="7、网关的cors 跨域配置"></a>7、网关的cors 跨域配置</h2><p><strong>跨域问题处理</strong></p><p>跨域：域名不一致就是跨域，主要包括：</p><ul><li>域名不同：<code>www.taobao.com</code> 和 <code>www.taobao.org</code> 和 <code>www.jd.com</code> 和 <code>miaosha.jd.com</code></li><li>域名相同，端口不同：localhost:8080 和 localhost:8081</li></ul><p>跨域问题：浏览器禁止请求的发起者与服务端发生跨域ajax 请求，请求被浏览器拦截的问题</p><p>解决方案：CORS</p><p>网关处理跨域采用的同样时CORS方案，并且只需要简单配置即可实现：</p><p><img src="/img/springcloud_img/CORS%E9%85%8D%E7%BD%AE.png" alt="CORS配置"></p><p><img src="/img/springcloud_img/Cors%E6%80%BB%E7%BB%93.png" alt="Cors总结"></p><h1 id="十、Docker"><a href="#十、Docker" class="headerlink" title="十、Docker"></a>十、Docker</h1><h2 id="1、Docker-架构"><a href="#1、Docker-架构" class="headerlink" title="1、Docker 架构"></a>1、Docker 架构</h2><h3 id="1-1、镜像和容器"><a href="#1-1、镜像和容器" class="headerlink" title="1.1、镜像和容器"></a>1.1、镜像和容器</h3><p><strong>镜像（Image）：</strong>Docker将应用程序及其所需的依赖、函数库、环境、配置等文件打包在一起，称为镜像</p><p><strong>容器（Container）：</strong>镜像中的应用程序运行后形成的进程就是<strong>容器</strong>，只是Docker会给容器做隔离，对外不可见</p><h3 id="1-2、Docker和DockerHub"><a href="#1-2、Docker和DockerHub" class="headerlink" title="1.2、Docker和DockerHub"></a>1.2、Docker和DockerHub</h3><ul><li>DockerHub：<a href="https://hub.docker.com/">DockerHub</a>是一个Docker镜像的托管平台。这样的平台称为Docker Registry</li><li>国内也有类似于DockerHub的公开服务，比如 <a href="https://c.163yun.com/dashboard?nowLang=zh#/overview">网易云镜像服务</a>、<a href="https://cr.console.aliyun.com/cn-hangzhou/instances">阿里云镜像库</a> 等</li></ul><p><img src="/img/springcloud_img/DockerHub%E4%BB%8B%E7%BB%8D.png" alt="DockerHub介绍"></p><h3 id="1-3、Docker-架构"><a href="#1-3、Docker-架构" class="headerlink" title="1.3、Docker 架构"></a>1.3、Docker 架构</h3><p>Docker是一个CS架构的程序，由两部分组成：</p><ul><li>服务端（server）：Docker守护进程，负责处理Docker指令，管理镜像、容器等</li><li>客户端（client）：通过命令或RestAPI向Docker服务端发送指令。可以在本地或远程向服务端发送指令</li></ul><p><img src="/img/springcloud_img/Docker%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84.png" alt="Docker整体架构"></p><p><img src="/img/springcloud_img/Docker%E6%9E%B6%E6%9E%84%E6%80%BB%E7%BB%93.png" alt="Docker架构总结"></p><p><strong>Docker安装步骤：</strong> <a href="https://pan.baidu.com/s/1aNGz8LjNOfqW7NLCnJZ0eg?pwd=snnz">https://pan.baidu.com/s/1aNGz8LjNOfqW7NLCnJZ0eg?pwd=snnz</a> </p><h2 id="2、Docker基本操作"><a href="#2、Docker基本操作" class="headerlink" title="2、Docker基本操作"></a>2、Docker基本操作</h2><h3 id="2-1、镜像操作"><a href="#2-1、镜像操作" class="headerlink" title="2.1、镜像操作"></a>2.1、镜像操作</h3><p><strong>镜像相关命令：</strong></p><ul><li>镜像名称一般分两部分组成：[repository]:[tag]</li><li>在没有指定tag时，默认是latest，代表最新版本的镜像</li></ul><p><strong>镜像操作命令：</strong></p><ul><li>获取镜像：<ul><li>方式1、本地获取：准备名为Dockerfile的文件，然后利用<code>docker build</code>命令构建镜像</li><li>方式2、远程拉取：通过<code>docker pull</code>从Docker Registry镜像服务器拉取</li></ul></li><li>查看镜像：<code>docker images</code></li><li>删除镜像：<code>docker rmi</code></li><li>分享镜像：<ul><li>方式1：通过<code>docker push</code> 推送镜像到Docker Registry镜像服务器</li><li>方式2：通过<code>docker save</code> 把镜像保存为一个压缩包，然后通过<code>docker load</code>把压缩包加载成镜像</li></ul></li></ul><p><img src="/img/springcloud_img/Docker%E9%95%9C%E5%83%8F%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4.png" alt="Docker镜像操作命令"></p><p><strong>案例：</strong>利用<code>docker save</code> 将nginx镜像导出磁盘，再通过<code>docker load</code> 加载回来</p><ul><li><p>步骤一：使用<code>docker save</code> 导出镜像到磁盘</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">docker save -o 导出的压缩文件路径 镜像</span><br>docker save -o nginx.tar nginx:latest<br></code></pre></td></tr></table></figure><p>导出之后，就会看到生成这个压缩文件了</p><p><img src="/img/springcloud_img/docker%E5%AF%BC%E5%87%BA%E6%96%87%E4%BB%B6.png" alt="docker把镜像导出为压缩文件"></p><p>之后把这个镜像删除</p></li><li><p>步骤二：利用<code>docker tag</code> 创建新镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">docker load -i 压缩文件路径</span><br>docker load -i nginx.tar<br></code></pre></td></tr></table></figure><p>导入之后就可以重新看到这个镜像了</p><p><img src="/img/springcloud_img/docker%E9%95%9C%E5%83%8F%E5%AF%BC%E5%85%A5.png" alt="docker镜像导入"></p></li></ul><h3 id="2-2、容器操作"><a href="#2-2、容器操作" class="headerlink" title="2.2、容器操作"></a>2.2、容器操作</h3><p><strong>容器相关命令</strong></p><p><img src="/img/springcloud_img/docker%E5%AE%B9%E5%99%A8%E6%93%8D%E4%BD%9C.png" alt="docker容器操作"></p><p><strong>案例：</strong>创建运行一个Nginx容器</p><p><strong>步骤一：</strong>去docker hub 查看Nginx 的容器运行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run --name mn -p 80:80 -d nginx<br></code></pre></td></tr></table></figure><ul><li>docker run：创建并运行一个容器</li><li>–name：给容器起一个名字</li><li>-p：端口映射【将宿主机端口与容器端口映射，冒号左侧是宿主机端口，右侧是容器端口】</li><li>-d：后台运行容器</li></ul><p><strong>步骤二：</strong>输入<code>192.168.88.130:80</code>访问nginx</p><p><img src="/img/springcloud_img/docker%E5%AE%B9%E5%99%A8%E6%A1%88%E4%BE%8B.png" alt="docker容器案例"></p><p><strong>步骤三：</strong>可以查看容器运行日志</p><p>输入 <code>docker logs 容器名</code> 就可以查看对应容器运行日志</p><p><img src="/img/springcloud_img/docker%E5%AE%B9%E5%99%A8%E6%A1%88%E4%BE%8B1.png" alt="docker容器案例1"></p><p><strong>持续查看日志：<code>docker logs -f 容器名</code></strong></p><p><strong>案例：</strong>进入Nginx容器，修改HTML文件内容，添加“你好你好”</p><p><strong>步骤一：</strong>进入容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec -it mn bash<br></code></pre></td></tr></table></figure><ul><li>docker exec：进入容器</li><li>-it：给当前进入的容器创建一个标准输入、输出终端，允许与容器交互</li><li>bash：进入容器后执行的命令，bash是一个linux终端交互命令</li></ul><p><strong>步骤二：</strong>进入nginx的HTML所在目录 <code>/usr/share/nginx/html/</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /usr/share/nginx/html/<br></code></pre></td></tr></table></figure><p><strong>步骤三：</strong>修改index.html 的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sed -i &#x27;s#Welcome to nginx#你好你好#g&#x27; index.html<br>sed -i &#x27;s#&lt;head&gt;#&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;#g&#x27; index.html<br></code></pre></td></tr></table></figure><p>修改完成后，浏览器刷新<code>192.168.88.130:80</code> 就可以看到修改好的页面</p><p><img src="/img/springcloud_img/docker%E8%BF%9B%E5%85%A5%E5%AE%B9%E5%99%A8%E6%A1%88%E4%BE%8B.png" alt="docker进入容器案例"></p><h2 id="3、数据卷操作"><a href="#3、数据卷操作" class="headerlink" title="3、数据卷操作"></a>3、数据卷操作</h2><h3 id="3-1、数据卷介绍"><a href="#3-1、数据卷介绍" class="headerlink" title="3.1、数据卷介绍"></a>3.1、数据卷介绍</h3><p>容器与数据耦合的问题</p><p><img src="/img/springcloud_img/docker%E5%AE%B9%E5%99%A8%E4%B8%8E%E6%95%B0%E6%8D%AE%E8%80%A6%E5%90%88%E9%97%AE%E9%A2%98.png" alt="docker容器与数据耦合问题"></p><p><strong>数据卷（volume）</strong>是一个虚拟目录，指向宿主机文件系统中的某个目录</p><p><img src="/img/springcloud_img/docker%E6%95%B0%E6%8D%AE%E5%8D%B7volume.png" alt="docker数据卷volume"></p><h3 id="3-2、操作数据卷"><a href="#3-2、操作数据卷" class="headerlink" title="3.2、操作数据卷"></a>3.2、操作数据卷</h3><p>数据卷操作的基本语法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker volume [COMMAND]<br></code></pre></td></tr></table></figure><p><code>docker volume</code> 命令是数据卷操作，根据命令后跟随的command 来确定下一步的操作：</p><ul><li>create          创建一个volume</li><li>inspect        显示一个或多个volume 的详细信息</li><li>ls                  列出所有的volume</li><li>prune          删除未使用的volume</li><li>rm                删除一个或多个指定的volume</li></ul><p><strong>案例：</strong>创建一个数据卷，并查看数据卷在宿主机的目录位置</p><p>1、创建数据卷</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker volume create 数据卷名称<br></code></pre></td></tr></table></figure><p>2、查看所有数据卷</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker volume ls<br></code></pre></td></tr></table></figure><p>3、查看数据卷详细信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker volume inspect 数据卷名称<br></code></pre></td></tr></table></figure><p><img src="/img/springcloud_img/docker%E6%95%B0%E6%8D%AE%E5%8D%B7-%E6%9F%A5%E7%9C%8B%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF.png" alt="docker数据卷-查看详细信息"></p><h3 id="3-3、挂载数据卷"><a href="#3-3、挂载数据卷" class="headerlink" title="3.3、挂载数据卷"></a>3.3、挂载数据卷</h3><p>在创建容器时，可以通过 -v 参数来挂载一个数据卷到某个容器目录</p><p>举例说明：<code>docker run --name mn -v html:/root/html -p 8080:80 -d nginx</code></p><ul><li>docker run        创建并运行容器</li><li>–name mn        给容器起个名字叫mn</li><li>-v html:&#x2F;root&#x2F;html        把html数据卷挂载到容器内的&#x2F;root&#x2F;html 这个目录中</li><li>-p 8080:80          把宿主机的8080端口映射到容器内的80端口</li><li>-d                         后台运行容器</li></ul><p><strong>在创建容器时挂载数据卷，如果数据卷不存在，docker会自动创建数据卷</strong></p><p><strong>案例：</strong>创建并运行一个MySQL容器，将宿主机目录直接挂载到容器</p><p>提示：目录挂载与数据卷挂载的语法时类似的：</p><ul><li>-v [宿主机目录]：[容器内目录]</li><li>-v [宿主机文件]：[容器内文件]</li></ul><p>步骤：</p><ul><li>1、拉取镜像 或 通过load命令 将 <a href="https://pan.baidu.com/s/1Ol7m54vtT6n0A5LsCrUlcg?pwd=qinp">mysql.tar</a> 加载为镜像</li><li>2、创建 &#x2F;tmp&#x2F;mysql&#x2F;data 目录 和 &#x2F;tmp&#x2F;mysql&#x2F;conf 目录，将 <a href="https://pan.baidu.com/s/1sFZEUazeAwQiNxSigtqOXA?pwd=x8y7">hmy.cnf</a> 文件上传到 &#x2F;tmp&#x2F;mysql&#x2F;conf</li><li>3、去<a href="https://hub.docker.com/">DockerHub</a> 查阅MySQL，创建并运行MySQL容器，要求：<ul><li>1、挂载 &#x2F;tmp&#x2F;mysql&#x2F;data 到mysql容器内的数据存储目录</li><li>2、挂载 &#x2F;tmp&#x2F;mysql&#x2F;conf&#x2F;hmy.cnf 到mysql容器的配置文件</li><li>3、设置MySQL密码</li></ul></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run \<br> --name mysql \<br> -e MYSQL_ROOT_PASSWORD=123 \<br> -p 3306:3306 \<br> -v /tmp/mysql/conf/hmy.cnf:/etc/mysql/conf.d/hmy.cnf \<br> -v /tmp/mysql/data:/var/lib/mysql \<br> -d \<br> mysql:5.7.25<br></code></pre></td></tr></table></figure><p><img src="/img/springcloud_img/docker%E6%95%B0%E6%8D%AE%E5%8D%B7%E6%80%BB%E7%BB%93.png" alt="docker数据卷总结"></p><h2 id="4、Dockerfile-自定义镜像"><a href="#4、Dockerfile-自定义镜像" class="headerlink" title="4、Dockerfile 自定义镜像"></a>4、Dockerfile 自定义镜像</h2><h3 id="4-1、镜像结构"><a href="#4-1、镜像结构" class="headerlink" title="4.1、镜像结构"></a>4.1、镜像结构</h3><ul><li>镜像是将应用程序及其需要的系统函数库、环境、配置、依赖打包而成</li></ul><p><img src="/img/springcloud_img/%E8%87%AA%E5%AE%9A%E4%B9%89%E9%95%9C%E5%83%8F-%E9%95%9C%E5%83%8F%E7%BB%93%E6%9E%84.png" alt="自定义镜像-镜像结构"></p><p><img src="/img/springcloud_img/%E8%87%AA%E5%AE%9A%E4%B9%89%E9%95%9C%E5%83%8F-%E9%95%9C%E5%83%8F%E7%BB%93%E6%9E%84%E6%80%BB%E7%BB%93.png" alt="自定义镜像-镜像结构总结"></p><h3 id="4-2、Dockerfile"><a href="#4-2、Dockerfile" class="headerlink" title="4.2、Dockerfile"></a>4.2、Dockerfile</h3><p><strong>什么是Dockerfile</strong></p><p><strong>Dockerfile</strong>就是一个文本文件，其中包含一个个的<strong>指令（Instruction）</strong>，用指令来说明要执行什么操作来构建镜像。每一个指令都会形成一层Layer</p><p><img src="/img/springcloud_img/Dockerfile%E6%8C%87%E4%BB%A4.png" alt="Dockerfile指令"></p><p>官方文档：<a href="https://docs.docker.com/engine/reference/builder">https://docs.docker.com/engine/reference/builder</a></p><p><strong>案例：</strong>基于Ubuntu镜像构建一个新镜像，运行一个java项目</p><ul><li><p>步骤1：新建一个空文件夹 docker-demo</p></li><li><p>步骤2：拷贝 <a href="https://pan.baidu.com/s/1Na8Oq5dVyUugkpxUSJLQug?pwd=a34g">docker-demo.jar</a>文件到 docker-demo 这个目录</p></li><li><p>步骤3：拷贝 <a href="https://pan.baidu.com/s/16Tcjz3IDyKOOanRgCAid7w?pwd=azh2">jdk8.tar.gz</a> 文件到 docker-demo 这个目录</p></li><li><p>步骤4：拷贝 <a href="https://pan.baidu.com/s/1Y_7kSGHDEgRgQimpWtgmLg?pwd=smcr">Dockerfile</a> 到 docker-demo 这个目录</p></li><li><p>步骤5：进入 docker-demo</p></li><li><p>步骤6：运行命令：<code>docker build -t javaweb:1.0 .</code></p></li><li><p>步骤7：创建并运行容器：<code>docker run --name web -p 8090:8090 -d javaweb:1.0</code></p></li><li><p>步骤8：浏览器输入<code>192.168.88.130:8090/hello/count</code> ，就可以看到容器成功启动了</p><p><img src="/img/springcloud_img/Dockerfile%E6%A1%88%E4%BE%8B.png" alt="Dockerfile案例"></p></li></ul><p>也可以基于 现有的 <code>java:8-alpine</code>镜像来构建新镜像，来运行java项目</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text"># Dockerfile文件<br># 指定基础镜像<br>FROM java:8-alpine<br><br>COPY ./docker-demo.jar /tmp/app.jar<br><br># 暴露端口<br>EXPOSE 8090<br># 入口，java项目的启动命令<br>ENTRYPOINT java -jar /tmp/app.jar<br></code></pre></td></tr></table></figure><p><img src="/img/springcloud_img/%E8%87%AA%E5%AE%9A%E4%B9%89Dockerfile%E6%80%BB%E7%BB%93.png" alt="自定义Dockerfile总结"></p><h2 id="5、DockerCompose"><a href="#5、DockerCompose" class="headerlink" title="5、DockerCompose"></a>5、DockerCompose</h2><h3 id="5-1、什么是DockerCompose"><a href="#5-1、什么是DockerCompose" class="headerlink" title="5.1、什么是DockerCompose"></a>5.1、什么是DockerCompose</h3><ul><li><p>Docker Compose 可以基于Compose 文件快速的部署分布式应用，而无需手动一个个创建和运行容器</p></li><li><p>Compose 文件是一个文本文件，通过指令定义集群中的每个容器如何运行</p><p><img src="/img/springcloud_img/DockerCompose%E7%A4%BA%E4%BE%8B.png" alt="DockerCompose示例"></p><p>DockerCompose的详细语法参考官网：<a href="https://docs.docker.com/compose/compose-file/">https://docs.docker.com/compose/compose-file/</a></p></li></ul><h3 id="5-2、安装DockerCompose"><a href="#5-2、安装DockerCompose" class="headerlink" title="5.2、安装DockerCompose"></a>5.2、安装DockerCompose</h3><p>参考：<a href="https://pan.baidu.com/s/1siBIEQyhp1Ni5DTOaP62vg?pwd=h5ff">https://pan.baidu.com/s/1siBIEQyhp1Ni5DTOaP62vg?pwd=h5ff</a></p><p><img src="/img/springcloud_img/DockerCompose%E6%80%BB%E7%BB%93.png" alt="DockerCompose总结"></p><h2 id="6、Docker镜像仓库"><a href="#6、Docker镜像仓库" class="headerlink" title="6、Docker镜像仓库"></a>6、Docker镜像仓库</h2><h3 id="常见镜像仓库服务"><a href="#常见镜像仓库服务" class="headerlink" title="常见镜像仓库服务"></a>常见镜像仓库服务</h3><p>镜像仓库（Docker Registry ）有公共的和私有的两种形式：</p><ul><li>公共仓库：例如Docker官方的<a href="https://hub.docker.com/">Docker Hub</a>，国内也有一些云服务商提供类似于Docker Hub 的公开服务，比如<a href="https://c.163.com/hub">网易云镜像服务</a>、<a href="https://hub.daocloud.io/">DaoCloud</a><a href="https://hub.daocloud.io/"> </a><a href="https://hub.daocloud.io/">镜像服务</a>、<a href="https://cr.console.aliyun.com/">阿里云镜像服务</a>等。</li><li>除了使用公开仓库外，用户还可以在本地搭建私有 DockerRegistry。企业自己的镜像最好是采用私有DockerRegistry来实现。</li></ul><h3 id="私有镜像仓库"><a href="#私有镜像仓库" class="headerlink" title="私有镜像仓库"></a>私有镜像仓库</h3><p><strong>参考：</strong><a href="https://pan.baidu.com/s/1siBIEQyhp1Ni5DTOaP62vg?pwd=h5ff">https://pan.baidu.com/s/1siBIEQyhp1Ni5DTOaP62vg?pwd=h5ff</a></p><h3 id="在私有镜像仓库推送或拉取镜像"><a href="#在私有镜像仓库推送或拉取镜像" class="headerlink" title="在私有镜像仓库推送或拉取镜像"></a>在私有镜像仓库推送或拉取镜像</h3><p>推送镜像到私有镜像服务必须先tag，步骤如下：</p><p>①重新tag本地镜像，名称前缀为私有仓库的地址：ip:8080&#x2F;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker tag 镜像名 私有仓库地址/自定义新镜像名<br></code></pre></td></tr></table></figure><p>②推送镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker push 私有仓库地址/自定义新镜像名<br></code></pre></td></tr></table></figure><p>③拉取镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull 私有仓库地址/自定义新镜像名<br></code></pre></td></tr></table></figure><p><img src="/img/springcloud_img/docker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E6%80%BB%E7%BB%93.png" alt="docker私有仓库总结"></p><h1 id="十一、服务异步通讯"><a href="#十一、服务异步通讯" class="headerlink" title="十一、服务异步通讯"></a>十一、服务异步通讯</h1><h2 id="1、概念"><a href="#1、概念" class="headerlink" title="1、概念"></a>1、概念</h2><h3 id="1-、同步通讯的优缺点"><a href="#1-、同步通讯的优缺点" class="headerlink" title="(1)、同步通讯的优缺点"></a>(1)、同步通讯的优缺点</h3><p>微服务间基于Feign 的调用就属于同步方式，存在一些问题</p><p><img src="/img/springcloud_img/%E5%90%8C%E6%AD%A5%E8%B0%83%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98.png" alt="同步调用的问题"></p><p><img src="/img/springcloud_img/%E5%90%8C%E6%AD%A5%E8%B0%83%E7%94%A8%E5%AD%98%E5%9C%A8%E7%9A%84%E9%97%AE%E9%A2%98.png" alt="同步调用存在的问题"></p><p><img src="/img/springcloud_img/%E5%90%8C%E6%AD%A5%E8%B0%83%E7%94%A8%E6%80%BB%E7%BB%93.png" alt="同步调用总结"></p><h3 id="2-、异步调用的优缺点"><a href="#2-、异步调用的优缺点" class="headerlink" title="(2)、异步调用的优缺点"></a>(2)、异步调用的优缺点</h3><p>异步调用常见实现就是事件驱动模式</p><p><img src="/img/springcloud_img/%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8.png" alt="事件驱动"></p><p>优势一：服务解耦</p><p>优势二：性能提升，吞吐量提高</p><p>优势三：服务没有强依赖，不担心级联失败问题</p><p>优势四：流量削峰</p><p><img src="/img/springcloud_img/%E5%BC%82%E6%AD%A5%E9%80%9A%E4%BF%A1%E6%80%BB%E7%BB%93.png" alt="异步通信总结"></p><h3 id="3-、MQ"><a href="#3-、MQ" class="headerlink" title="(3)、MQ"></a>(3)、MQ</h3><p>MQ（MessageQueue），中文是消息队列，字面来看就是存放消息的队列。也就是事件驱动架构中的Broker</p><p><img src="/img/springcloud_img/MQ%E4%BB%8B%E7%BB%8D.png" alt="MQ介绍"></p><h2 id="2、RabbitMQ"><a href="#2、RabbitMQ" class="headerlink" title="2、RabbitMQ"></a>2、RabbitMQ</h2><h3 id="2-1、RabbitMQ概述"><a href="#2-1、RabbitMQ概述" class="headerlink" title="2.1、RabbitMQ概述"></a>2.1、RabbitMQ概述</h3><p>RabbitMQ 是基于Erlang 语言开发的开源消息通信中间件，官网地址：<a href="https://www.rabbitmq.com/">https://www.rabbitmq.com/</a></p><p>安装RabbitMQ，参考：<a href="https://pan.baidu.com/s/16VoS-DNodUxa7KMibN3Dgw?pwd=2sv4">https://pan.baidu.com/s/16VoS-DNodUxa7KMibN3Dgw?pwd=2sv4</a></p><p>安装完成之后，浏览器输入：<code>192.168.88.130:15672</code>,就可以进入rabbitmq了</p><p><img src="/img/springcloud_img/rabbitmq%E5%AE%89%E8%A3%85.png" alt="rabbitmq安装"></p><p>其中：</p><ul><li>Overview 是总览，显示rabbitmq的一些节点信息</li><li>Connections 是连接，消息发送者和消息接收者都应该和RabbitMQ建立连接</li><li>Channels 是通道，建立连接之后，一定要创建通道，然后生产者和接收者才能基于Channels 完成消息的发送和接收</li><li>Exchanges 是交换机，是消息的路由器</li><li>Queues 是队列，用来做消息存储</li><li>Admin 是管理，可以管理当前用户信息</li></ul><p><strong>RabbtiMQ结构</strong></p><p><img src="/img/springcloud_img/RabbtiMQ%E7%BB%93%E6%9E%84.png" alt="RabbtiMQ结构"></p><p><img src="/img/springcloud_img/RabbitMQ%E6%80%BB%E7%BB%93.png" alt="RabbitMQ总结"></p><h3 id="2-2、MQ的常见消息模型"><a href="#2-2、MQ的常见消息模型" class="headerlink" title="2.2、MQ的常见消息模型"></a>2.2、MQ的常见消息模型</h3><p>MQ的官方文档中给出了5个MQ的Demo示例，对应了几种不同的用法：</p><p><img src="/img/springcloud_img/RabbitMQ%E5%B8%B8%E8%A7%81%E6%B6%88%E6%81%AF%E6%A8%A1%E5%9E%8B.png" alt="RabbitMQ常见消息模型"></p><p><strong>HelloWorld案例</strong></p><p>官方的HelloWorld是基于最基础的消息队列模型来实现的，只包括三个角色：</p><ul><li><p>publisher：消息发布者，将消息发送到队列queue</p></li><li><p>queue：消息队列，负责接收并缓存消息</p></li><li><p>consumer：订阅队列，处理队列中的消息</p><p><img src="/img/springcloud_img/RabbitMQ-HelloWorld%E6%A1%88%E4%BE%8B.png" alt="RabbitMQ-HelloWorld案例"></p></li></ul><p><img src="/img/springcloud_img/RabbitMQ-%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B%E6%80%BB%E7%BB%93.png" alt="RabbitMQ-简单案例总结"></p><h2 id="3、SpringAMQP"><a href="#3、SpringAMQP" class="headerlink" title="3、SpringAMQP"></a>3、SpringAMQP</h2><h3 id="3-1、基本介绍"><a href="#3-1、基本介绍" class="headerlink" title="3.1、基本介绍"></a>3.1、基本介绍</h3><p><strong>什么是SpringAMQP</strong></p><p>SpringAmqp的官方地址：<a href="https://spring.io/projects/spring-amqp">https://spring.io/projects/spring-amqp</a></p><p><img src="/img/springcloud_img/SpringAMQP%E4%BB%8B%E7%BB%8D.png" alt="SpringAMQP介绍"></p><h3 id="3-2、HelloWorld模型"><a href="#3-2、HelloWorld模型" class="headerlink" title="3.2、HelloWorld模型"></a>3.2、HelloWorld模型</h3><p><strong>案例：</strong>利用SpringAMQP实现HelloWorld终端额基础消息队列功能</p><ul><li><p>1、在父工程中引入 spring-amqp 的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--AMQP依赖，包含RabbitMQ--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、在 publisher 服务中利用RabbitTemplate 发送消息到 simple.queue 这个队列</p><ul><li><p>1、在 publisher 服务中编写application.yml ，添加mq连接信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">rabbitmq:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.88</span><span class="hljs-number">.130</span>  <span class="hljs-comment"># 主机名</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">5672</span>  <span class="hljs-comment"># 端口</span><br>    <span class="hljs-attr">virtual-host:</span> <span class="hljs-string">/itcast</span>  <span class="hljs-comment"># 虚拟主机</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">itcast</span>  <span class="hljs-comment"># 用户名</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-number">123321</span>  <span class="hljs-comment"># 密码</span><br></code></pre></td></tr></table></figure></li><li><p>2、注入<code>RabbitTemplate</code>，发送消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> RabbitTemplate rabbitTemplate;<br>    <br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testSendMessage2SimpleQueue</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">queue</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;simple.queue&quot;</span>;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;hello , Spring AMQP !!&quot;</span>;<br>    rabbitTemplate.convertAndSend(queue,message);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>3、此时，在RabbitMQ中就可以看到发送的消息了</p><p><img src="/img/springcloud_img/RabbitMQ-HelloWorld%E6%B6%88%E6%81%AF%E7%A4%BA%E4%BE%8B.png" alt="RabbitMQ-HelloWorld消息示例"></p><p><img src="/img/springcloud_img/SpringAMQP%E5%85%A5%E9%97%A8%E6%80%BB%E7%BB%93.png" alt="SpringAMQP入门总结"></p></li></ul></li><li><p>3、在 consumer 服务中编写消费逻辑，绑定 simple.queue 这个队列</p><ul><li><p>1、在consumer 服务中编写 application.yml，添加mq 连接信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">rabbitmq:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.88</span><span class="hljs-number">.130</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">5672</span><br>    <span class="hljs-attr">virtual-host:</span> <span class="hljs-string">/itcast</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">itcast</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-number">123321</span><br></code></pre></td></tr></table></figure></li><li><p>2、监听消息：在consumer 服务中新建一个类，编写消费逻辑</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpringRabbitListener</span> &#123;<br><br>    <span class="hljs-meta">@RabbitListener(queues = &quot;simple.queue&quot;)</span>  <span class="hljs-comment">//queues = 队列名称</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">listenSimpleQueue</span><span class="hljs-params">(String msg)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;消费者接收到 simple.queue 的消息：【&quot;</span> + msg + <span class="hljs-string">&quot;】&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>3、然后启动Spring，就可以看到接收到的消息了</p><p><img src="/img/springcloud_img/SpringAMQP-consumer%E6%8E%A5%E6%94%B6%E6%B6%88%E6%81%AF.png" alt="SpringAMQP-consumer接收消息"></p></li></ul></li></ul><p><strong>消息接收者在接收到消息之后，队列中的消息就没有了</strong></p><p><img src="/img/springcloud_img/SpringAMQP%E6%8E%A5%E6%94%B6%E6%B6%88%E6%81%AF%E6%80%BB%E7%BB%93.png" alt="SpringAMQP接收消息总结"></p><h3 id="3-3、WorkQueue模型"><a href="#3-3、WorkQueue模型" class="headerlink" title="3.3、WorkQueue模型"></a>3.3、WorkQueue模型</h3><p><strong>WorkQueue 工作队列</strong></p><p>WorkQueue工作队列，可以提高消息处理速度，避免队列消息堆积</p><p><img src="/img/springcloud_img/workqueue%E5%B7%A5%E4%BD%9C%E9%98%9F%E5%88%97.png" alt="workqueue工作队列"></p><p><strong>案例：</strong>模拟WorkQueue，实现一个队列绑定多个消费者</p><p>基本思路:</p><ul><li><p>1、在publisher 服务中定义测试方法，每秒产生50条消息，发送到 simple.queue</p><p><img src="/img/springcloud_img/WorkQueue%E6%B6%88%E6%81%AF%E5%8F%91%E9%80%81%E8%80%85.png" alt="WorkQueue消息发送者"></p></li><li><p>2、在consumer 服务中定义两个消息监听者，都监听simple.queue 队列</p><p>消费者1每秒处理50条消息，消费者2每秒处理10条消息</p><p><img src="/img/springcloud_img/WorkQueue%E6%B6%88%E6%81%AF%E6%8E%A5%E6%94%B6%E8%80%85.png" alt="WorkQueue消息接收者"></p></li></ul><p><strong>消息预取限制：</strong></p><p>修改application.yaml 文件，设置preFetch 这个值，可以控制预取消息的上限：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">rabbitmq:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.88</span><span class="hljs-number">.130</span>  <span class="hljs-comment"># 主机名</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">5672</span>  <span class="hljs-comment"># 端口</span><br>    <span class="hljs-attr">virtual-host:</span> <span class="hljs-string">/itcast</span>  <span class="hljs-comment"># 虚拟主机</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">itcast</span>  <span class="hljs-comment"># 用户名</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-number">123321</span>  <span class="hljs-comment"># 密码</span><br>    <span class="hljs-attr">listener:</span><br>      <span class="hljs-attr">simple:</span><br>        <span class="hljs-attr">prefetch:</span> <span class="hljs-number">1</span>  <span class="hljs-comment"># 每次只能获取一条消息，处理完成才能获取下一条消息</span><br></code></pre></td></tr></table></figure><p><img src="/img/springcloud_img/WorkQueue%E6%80%BB%E7%BB%93.png" alt="WorkQueue总结"></p><h3 id="3-4、发布订阅模型介绍"><a href="#3-4、发布订阅模型介绍" class="headerlink" title="3.4、发布订阅模型介绍"></a>3.4、发布订阅模型介绍</h3><p><strong>发布（Publish）、订阅（SubScribe）</strong></p><p>发布订阅模式与之前案例的区别就是允许将同一消息发送给多个消费者。实现方式是加入了exchange（交换机）</p><p><img src="/img/springcloud_img/SpringAMQP%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85%E6%A8%A1%E5%9E%8B.png" alt="SpringAMQP发布订阅模型"></p><p>常见exchange 类型包括：</p><ul><li>Fanout：广播</li><li>Direct：路由</li><li>Topic：话题</li></ul><p><strong>注意：</strong>exchange 负责消息路由，而不是存储，路由失败则消息丢失</p><h3 id="3-5、发布订阅-Fanout-Exchange"><a href="#3-5、发布订阅-Fanout-Exchange" class="headerlink" title="3.5、发布订阅 - Fanout Exchange"></a>3.5、发布订阅 - Fanout Exchange</h3><p>Fanout Exchange 会将接收到的消息路由到每一个跟其绑定的queue</p><p><img src="/img/springcloud_img/FanoutExchange%E6%A8%A1%E5%9E%8B.png" alt="FanoutExchange模型"></p><p><strong>案例：</strong>利用SpringAMQP 演示FanoutExchange 的使用</p><p><img src="/img/springcloud_img/FanoutExchange%E6%A1%88%E4%BE%8B%E6%A8%A1%E5%9E%8B.png" alt="FanoutExchange案例模型"></p><p>实现思路：</p><ul><li>1、在consumer 服务中，利用代码声明队列、交换机，并将两者绑定</li><li>2、在consumer 服务中，编写两个消费者方法，分别监听两个队列：fanout.queue1、fanout.queue2</li><li>3、在publisher 中编写测试方法，向交换机 itcast.fanout 发送消息</li></ul><p><strong>步骤：</strong></p><ul><li><p>步骤1：在consumer 服务中声明Exchange、Queue、Binding</p><p>SpringAMQP 提供了声明交换机、队列、绑定关系的API，例如交换机的API：</p><p><img src="/img/springcloud_img/ExchangeAPI.png" alt="ExchangeAPI"></p><p>在consumer服务创建一个类，添加@Configuration注解，并声明FanoutExchange、Queue和绑定关系对象Binding</p><p><img src="/img/springcloud_img/FanoutExchange%E6%B6%88%E8%B4%B9%E8%80%85%E9%85%8D%E7%BD%AE%E7%B1%BB.png" alt="FanoutExchange消费者配置类"></p><p>此时启动消费者服务，就可以在RabbitMQ页面中看到声明的交换机和队列了</p><p><img src="/img/springcloud_img/FanoutExchange%E4%BA%A4%E6%8D%A2%E6%9C%BA.png" alt="FanoutExchange交换机"></p><p><img src="/img/springcloud_img/FanoutExchange%E9%98%9F%E5%88%97.png" alt="FanoutExchange队列"></p></li><li><p>步骤2：在consumer 服务中监听消息</p><p><img src="/img/springcloud_img/FanoutExchange%E6%B6%88%E8%B4%B9%E8%80%85%E7%9B%91%E5%90%AC%E9%98%9F%E5%88%97.png" alt="FanoutExchange消费者监听队列"></p></li><li><p>步骤3：在publisher 服务中发送消息到交换机</p><p><img src="/img/springcloud_img/FanoutExchange%E5%8F%91%E9%80%81%E8%80%85%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF.png" alt="FanoutExchange发送者发送消息"></p></li></ul><p>然后发送者发送消息，在所有的消费者中都可以接收到消息了</p><p><img src="/img/springcloud_img/FanoutExchange%E4%BA%A4%E6%8D%A2%E6%9C%BA%E6%80%BB%E7%BB%93.png" alt="FanoutExchange交换机总结"></p><h3 id="3-6、发布订阅-DirectExchange"><a href="#3-6、发布订阅-DirectExchange" class="headerlink" title="3.6、发布订阅 - DirectExchange"></a>3.6、发布订阅 - DirectExchange</h3><p>Direct Exchange 会将接收到的消息根据规则路由到指定的Queue，因此称为路由模式（routes）</p><ul><li>每一个Queue 都与Exchange 设置BindingKey</li><li>发布者发送消息时，指定消息的RoutingKey</li><li>Exchange 将消息路由到BindingKey 与消息RoutingKey 一致的队列</li></ul><p><img src="/img/springcloud_img/DirectExchange%E6%A8%A1%E5%9E%8B.png" alt="DirectExchange模型"></p><p><strong>案例：</strong>利用SpringAMQP 演示DirectExchange 的使用</p><p>实现思路:</p><ul><li><p>1、利用 <code>@RabbitListener</code> 声明Exchange、Bean、BindingKey</p></li><li><p>2、在consumer 服务中，编写两个消费者方法，分别监听两个队列：direct.queue1、direct.queue2</p></li><li><p>3、在publisher 服务中编写测试方法，向交换机 itcast.direct 发送消息</p><p><img src="/img/springcloud_img/DirectExchange%E6%A1%88%E4%BE%8B%E5%AE%9E%E7%8E%B0%E6%80%9D%E8%B7%AF.png" alt="DirectExchange案例实现思路"></p></li></ul><p><strong>步骤：</strong></p><ul><li><p>步骤1：在consumer 服务中，编写两个消费者方法，分别监听direct.queue1、direct.queue2，并利用 @RabbitListener 声明Exchange、Queue、RoutingKey</p><p><img src="/img/springcloud_img/DirectExchange%E6%B6%88%E6%81%AF%E6%B6%88%E8%B4%B9%E8%80%85.png" alt="DirectExchange消息消费者"></p></li><li><p>步骤2：在publisher 服务中编写测试方法，向交换机 itcast.direct 发送消息</p></li></ul><p><img src="/img/springcloud_img/DirectExchange%E6%B6%88%E6%81%AF%E5%8F%91%E9%80%81%E8%80%85%E6%A1%88%E4%BE%8B.png" alt="DirectExchange消息发送者案例"></p><p><img src="/img/springcloud_img/Direct%E4%BA%A4%E6%8D%A2%E6%9C%BA%E6%80%BB%E7%BB%93.png" alt="Direct交换机总结"></p><h3 id="3-7、发布订阅-TopicExchange"><a href="#3-7、发布订阅-TopicExchange" class="headerlink" title="3.7、发布订阅 - TopicExchange"></a>3.7、发布订阅 - TopicExchange</h3><p>TopicExchange 与DirectExchange 类似，区别在于RoutingKey 必须是多个单词的列表，并且以 <code>.</code> 分割</p><p>Queue 与Exchange 指定BindingKey 时可以使用通配符：</p><p>#  代指0或多个单词</p><p>* 代指一个单词</p><p><img src="/img/springcloud_img/TopicExchange%E6%A8%A1%E5%9E%8B.png" alt="TopicExchange模型"></p><p><strong>案例：</strong>利用SpringAMQP 演示TopicExchange 的使用</p><p>实现思路：</p><p><img src="/img/springcloud_img/TopicExchange%E6%A1%88%E4%BE%8B%E6%A8%A1%E5%9E%8B.png" alt="TopicExchange案例模型"></p><ul><li><p>1、在consumer服务中，编写两个消费者方法，分别监听两个消息：topic.queue1、topic.queue2，并利用@RabbitListener 声明Exchange、Queue、RoutingKey</p><p><img src="/img/springcloud_img/TopicExchange%E6%B6%88%E8%B4%B9%E8%80%85.png" alt="TopicExchange消费者"></p></li><li><p>2、在publisher 服务中编写测试方法。向itcast.topic 发送消息</p><p><img src="/img/springcloud_img/TopicExchange%E6%B6%88%E6%81%AF%E5%8F%91%E9%80%81%E8%80%85.png" alt="TopicExchange消息发送者"></p></li></ul><p><img src="/img/springcloud_img/TopicExchange%E6%80%BB%E7%BB%93.png" alt="TopicExchange总结"></p><h3 id="3-8、消息转换器"><a href="#3-8、消息转换器" class="headerlink" title="3.8、消息转换器"></a>3.8、消息转换器</h3><p>Spring对消息对象的处理是由<code>org.springframework.amqp.support.converter.MessageConverter</code>来处理的。而默认实现是<code>SimpleMessageConverter</code>，基于JDK的<code>ObjectOutputStream</code>完成序列化。</p><p>如果要修改只需要定义一个<code>MessageConverter</code> 类型的Bean即可。推荐用JSON方式序列化，步骤如下：</p><ul><li><p>1、引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jackson-databind<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、在发送者服务声明MessageConverter：</p><p><img src="/img/springcloud_img/SpringAMQP%E6%B6%88%E6%81%AF%E8%BD%AC%E6%8D%A2%E5%99%A8.png" alt="SpringAMQP消息转换器"></p></li></ul><p><img src="/img/springcloud_img/SpringAMQP%E6%B6%88%E6%81%AF%E8%BD%AC%E6%8D%A2%E5%99%A8%E6%80%BB%E7%BB%93.png" alt="SpringAMQP消息转换器总结"></p><h1 id="十二、分布式搜索"><a href="#十二、分布式搜索" class="headerlink" title="十二、分布式搜索"></a>十二、分布式搜索</h1><h2 id="1、初识elasticsearch"><a href="#1、初识elasticsearch" class="headerlink" title="1、初识elasticsearch"></a>1、初识elasticsearch</h2><p><strong>什么是elasticsearch</strong></p><p>elasticsearch 是一款非常强大的开源搜索引擎，可以帮助从海量数据中快速找到需要的内容</p><p>elasticsearch 结合kibana、Logstash、Beats，也就是elastic stack（ELK）。被广泛应用在日志数据分析、实时监控等领域</p><p>elasticsearch 是elastic stack 的核心，负责存储、搜索、分析数据</p><p><img src="/img/springcloud_img/elasticsearch.png" alt="elasticsearch"></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot2</title>
    <link href="/2024/02/26/SpringBoot2/"/>
    <url>/2024/02/26/SpringBoot2/</url>
    
    <content type="html"><![CDATA[<ul><li>视频：<a href="https://www.bilibili.com/video/BV15b4y1a7yG/?spm_id_from=333.337.search-card.all.click&vd_source=e710048bca758289bcc6b7e0e07eec72">https://www.bilibili.com/video/BV15b4y1a7yG/?spm_id_from=333.337.search-card.all.click&amp;vd_source=e710048bca758289bcc6b7e0e07eec72</a></li><li>文档：<a href="https://docs.spring.io/spring-boot/docs/2.7.12/reference/html/features.html#features.spring-application">https://docs.spring.io/spring-boot/docs/2.7.12/reference/html/features.html#features.spring-application</a></li></ul><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="1、入门案例"><a href="#1、入门案例" class="headerlink" title="1、入门案例"></a>1、入门案例</h2><p>阿里云镜像：<a href="http://start.aliyun.com/">http://start.aliyun.com</a></p><ul><li><p>starter：</p><ul><li>SpringBoot中常见项目名称，定义了当前项目使用的所有依赖坐标，以达到<strong>减少依赖配置</strong>的目的</li></ul></li><li><p>parent：</p><ul><li>所有SpringBoot项目要继承的项目，定义了若干个坐标版本号（依赖管理，而非依赖），以达到<strong>减少依赖冲突</strong>的目的</li><li>spring-boot-starter-parent 各版本间存在着诸多坐标版本不同</li></ul></li><li><p>引导类：</p><ul><li>SpringBoot的引导类是Boot工程的执行入口，运行main方法就可以启动项目</li><li>SpringBoot工程运行后初始化Spring容器，扫描引导类所在的包，加载bean</li></ul></li><li><p>内嵌Tomacat：</p><ul><li>SpringBoot内置了三款服务器：tomcat（默认）、jetty、undertow</li><li>内嵌Tomcat服务器是SpringBoot辅助功能之一</li><li>内嵌Tomcat工作原理：是将Tomcat服务器作为对象运行，并将该对象交给Spring容器管理</li><li>变更内嵌服务器的思想：是在pom文件中通过<code>&lt;exclusions&gt;</code>标签去除现有服务器，再通过<code>&lt;dependency&gt;</code>标签添加新的服务器。如何更换服务器：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>  <br><span class="hljs-comment">&lt;!--maven排除依赖：exclusions标签 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br><span class="hljs-comment">&lt;!--排除tomcat服务器依赖--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!--使用jetty服务器--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-jetty<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="2、基础配置"><a href="#2、基础配置" class="headerlink" title="2、基础配置"></a>2、基础配置</h2><p><strong>复制工程：</strong></p><p><img src="/img/springboot2_img/%E5%A4%8D%E5%88%B6%E9%A1%B9%E7%9B%AE.jpg" alt="复制项目"></p><p>然后修改项目中pom文件的<code>&lt;artifactld&gt;</code>标准中内容为项目名,并且删除<code>&lt;name&gt;、&lt;description&gt;</code> 这两个标签</p><p><img src="/img/springboot2_img/%E5%A4%8D%E5%88%B6%E5%B7%A5%E7%A8%8B%E4%B9%8B%E4%BF%AE%E6%94%B9pom.jpg" alt="复制工程之修改pom"></p><p>在项目的文件夹下，只留下src文件夹和pom文件就行</p><p><img src="/img/springboot2_img/%E5%A4%8D%E5%88%B6%E9%A1%B9%E7%9B%AE%E4%B9%8B%E5%88%A0%E9%99%A4%E6%97%A0%E7%94%A8%E6%96%87%E4%BB%B6.jpg" alt="复制项目之删除无用文件"></p><h3 id="1、属性配置"><a href="#1、属性配置" class="headerlink" title="1、属性配置"></a>1、属性配置</h3><p>SpringBoot内置属性查询：<a href="https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties">https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties</a></p><h3 id="2、配置文件分类"><a href="#2、配置文件分类" class="headerlink" title="2、配置文件分类"></a>2、配置文件分类</h3><p>三种格式的配置文件的优先级：properties格式 &gt; yml格式 &gt; yaml格式</p><p>不同配置文件中相同配置按照加载优先级相互覆盖，不同配置文件中不同配置全部保留</p><h3 id="3、yaml文件格式"><a href="#3、yaml文件格式" class="headerlink" title="3、yaml文件格式"></a>3、yaml文件格式</h3><ul><li>大小写敏感</li><li>属性层级关系使用多行描述，每行结尾使用冒号结束</li><li>使用缩进表示层级关系，同层级左侧对齐，只允许使用空格（不允许使用Tab键）</li><li>属性值前面添加空格（属性名与属性值之间使用冒号+空格作为分隔）</li></ul><h3 id="4、yaml数据读取"><a href="#4、yaml数据读取" class="headerlink" title="4、yaml数据读取"></a>4、yaml数据读取</h3><h4 id="1-单一属性数据"><a href="#1-单一属性数据" class="headerlink" title="1.单一属性数据"></a>1.单一属性数据</h4><p>使用注解<code>@Value</code>读取单个数据，属性名引用方式：**<code>@Value(&quot;$&#123;一级属性名.二级属性名……&#125;&quot;)</code>**</p><h4 id="2-读取全部数据"><a href="#2-读取全部数据" class="headerlink" title="2.读取全部数据"></a>2.读取全部数据</h4><p>如果定义的数据量过大，SpringBoot提供了一个对象，能够把所有的数据都封装到这一个对象中，这个对象叫做Environment；</p><p>使用自动装配注解可以将所有的yaml数据封装到这个对象中;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> *读取yml中的全部数据</span><br><span class="hljs-comment"> * 使用自动装配将所有的数据封装到对象Environment中</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> Environment env;<br></code></pre></td></tr></table></figure><p>使用<code>对象名.getProperty(yml中定义的key)</code>获取对应的值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">country</span> <span class="hljs-operator">=</span> env.getProperty(<span class="hljs-string">&quot;country&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="3-yml中的数据引用"><a href="#3-yml中的数据引用" class="headerlink" title="3.yml中的数据引用"></a>3.yml中的数据引用</h4><p>在同一个yml中可以使用<code>$&#123;属性名&#125;</code>引用属性值</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">baseDir:</span> <span class="hljs-string">/usr/local/fire</span><br> <br><span class="hljs-attr">center:</span><br>    <span class="hljs-attr">dataDir:</span> <span class="hljs-string">$&#123;baseDir&#125;/data</span><br>    <span class="hljs-attr">tmpDir:</span> <span class="hljs-string">$&#123;baseDir&#125;/tmp</span><br>    <span class="hljs-attr">logDir:</span> <span class="hljs-string">$&#123;baseDir&#125;/log</span><br>    <span class="hljs-attr">msgDir:</span> <span class="hljs-string">$&#123;baseDir&#125;/msgDir</span><br></code></pre></td></tr></table></figure><p>如果属性中出现转义字符，可以使用双引号包裹起来作为字符解析。</p><p>如果不加双引号，代表的是原字符串。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">baseDir:</span> <span class="hljs-string">c:\file</span><br> <br><span class="hljs-attr">center:</span><br>    <span class="hljs-attr">dataDir:</span> <span class="hljs-string">$&#123;baseDir&#125;\tmp</span>                 <span class="hljs-comment"># c:\file\tmp</span><br>    <span class="hljs-attr">dataDir:</span> <span class="hljs-string">&quot;$&#123;baseDir&#125;\tmp&quot;</span>               <span class="hljs-comment"># c:\filemp</span><br></code></pre></td></tr></table></figure><h4 id="4、将配置文件中的属性值绑定到Java对象中-主流写法-ConfigurationProperties注解"><a href="#4、将配置文件中的属性值绑定到Java对象中-主流写法-ConfigurationProperties注解" class="headerlink" title="4、将配置文件中的属性值绑定到Java对象中 (主流写法) @ConfigurationProperties注解"></a><strong>4、将配置文件中的属性值绑定到Java对象中 (主流写法) <code>@ConfigurationProperties</code>注解</strong></h4><p><strong><code>@ConfigurationProperties(prefix = &quot;datasource&quot;)</code></strong> : Spring Boot中用于绑定配置文件中的属性值到Java对象中的注解。prefix属性用于指定配置文件中的属性前缀，绑定时会自动匹配前缀相同的属性值到Java对象中。例如，prefix为”datasource”，则配置文件中的属性名需要以”datasource.”开头</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># application.yml</span><br><br><span class="hljs-attr">datasource:</span><br>  <span class="hljs-attr">driver:</span> <span class="hljs-string">com.mysql.jdbc.Driver</span><br>  <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost/springboot_db</span><br>  <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>  <span class="hljs-attr">password:</span> <span class="hljs-number">123456</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// MyDataSource.java</span><br><br><span class="hljs-meta">@Component</span>  <span class="hljs-comment">// 这个bean被Spring管理</span><br><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;datasource&quot;)</span>  <span class="hljs-comment">// Spring Boot中用于绑定配置文件中的属性值到Java对象中的注解。prefix属性用于指定配置文件中的属性前缀，绑定时会自动匹配前缀相同的属性值到Java对象中。例如，prefix为&quot;datasource&quot;，则配置文件中的属性名需要以&quot;datasource.&quot;开头</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyDataSource</span> &#123;<br>    <span class="hljs-keyword">private</span> String driver;<br>    <span class="hljs-keyword">private</span> String url;<br>    <span class="hljs-keyword">private</span> String username;<br>    <span class="hljs-keyword">private</span> String password;<br>    <span class="hljs-comment">//getter和setter</span><br>&#125;<br></code></pre></td></tr></table></figure><p>Spring Boot会自动将配置文件中以”datasource.”开头的属性值绑定到DataSourceConfig对象中的对应属性上。我们可以在其他的Java类中使用<code>@Autowired</code>注解来注入这个对象，从而获取配置文件中的属性值。</p><h2 id="3、整合第三方技术"><a href="#3、整合第三方技术" class="headerlink" title="3、整合第三方技术"></a>3、整合第三方技术</h2><h3 id="1、整合JUnit"><a href="#1、整合JUnit" class="headerlink" title="1、整合JUnit"></a>1、整合JUnit</h3><h5 id="1、导入测试对应的starter（SpringBoot自动导入了）"><a href="#1、导入测试对应的starter（SpringBoot自动导入了）" class="headerlink" title="1、导入测试对应的starter（SpringBoot自动导入了）"></a>1、导入测试对应的starter（SpringBoot自动导入了）</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="2、测试类使用-SpringBootTest注解修饰（SpringBoot自带了）"><a href="#2、测试类使用-SpringBootTest注解修饰（SpringBoot自带了）" class="headerlink" title="2、测试类使用@SpringBootTest注解修饰（SpringBoot自带了）"></a>2、测试类使用<code>@SpringBootTest</code>注解修饰（SpringBoot自带了）</h5><h5 id="3、使用-Autowired自动装配的形式添加要测试的对象"><a href="#3、使用-Autowired自动装配的形式添加要测试的对象" class="headerlink" title="3、使用@Autowired自动装配的形式添加要测试的对象"></a>3、使用<code>@Autowired</code>自动装配的形式添加要测试的对象</h5><h3 id="2、整合MyBatis"><a href="#2、整合MyBatis" class="headerlink" title="2、整合MyBatis"></a>2、整合MyBatis</h3><ul><li>核心配置：数据库连接相关信息（连什么？连谁？什么权限？）</li><li>映射配置：SQL映射（xml &#x2F; 注解）</li></ul><h4 id="1、导入对应的starter"><a href="#1、导入对应的starter" class="headerlink" title="1、导入对应的starter"></a>1、导入对应的starter</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--pom.xml--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-j<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>runtime<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2、配置数据源"><a href="#2、配置数据源" class="headerlink" title="2、配置数据源"></a>2、配置数据源</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># application.yml</span><br><span class="hljs-comment"># 配置数据库相关连接信息---dataSource对象</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://主机:端口/数据库?serverTimezone=UTC</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">用户名</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">密码</span><br></code></pre></td></tr></table></figure><h4 id="3、编写接口"><a href="#3、编写接口" class="headerlink" title="3、编写接口"></a>3、编写接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">BookDao</span> &#123;<br>    <span class="hljs-meta">@Select(&quot;select * from t_user where id = #&#123;id&#125;&quot;)</span><br>    Book <span class="hljs-title function_">getById</span><span class="hljs-params">(Integer id)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4、测试"><a href="#4、测试" class="headerlink" title="4、测试"></a>4、测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Springboot05MybatisApplicationTests</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    BookDao bookDao;<br>    <br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">contextLoads</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">Book</span> <span class="hljs-variable">book</span> <span class="hljs-operator">=</span> bookDao.getById(<span class="hljs-number">9</span>);<br>        System.out.println(<span class="hljs-string">&quot;book = &quot;</span> + book);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3、整合MyBaits-plus"><a href="#3、整合MyBaits-plus" class="headerlink" title="3、整合MyBaits-plus"></a>3、整合MyBaits-plus</h3><h4 id="1、引入依赖"><a href="#1、引入依赖" class="headerlink" title="1、引入依赖"></a>1、引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-j<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>runtime<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--mybatis-plus--&gt;</span><br><span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/com.baomidou/mybatis-plus --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.4.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2、配置数据源-1"><a href="#2、配置数据源-1" class="headerlink" title="2、配置数据源"></a>2、配置数据源</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># application.yml</span><br><span class="hljs-comment"># 配置数据库相关连接信息---dataSource对象</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://主机:端口/数据库?serverTimezone=UTC</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">用户名</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">密码</span><br><br><span class="hljs-comment"># 设置MyBatis-plus相关配置</span><br><span class="hljs-comment"># 指定数据库表名的前缀为t_</span><br><span class="hljs-attr">mybatis-plus:</span><br>  <span class="hljs-attr">global-config:</span><br>    <span class="hljs-attr">db-config:</span><br>      <span class="hljs-attr">table-prefix:</span> <span class="hljs-string">t_</span><br></code></pre></td></tr></table></figure><h4 id="3、Mapper中继承BaseMapper接口"><a href="#3、Mapper中继承BaseMapper接口" class="headerlink" title="3、Mapper中继承BaseMapper接口"></a>3、Mapper中继承BaseMapper接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 使用mybatis-plus 很多基础的方法都在BaseMapper&lt;T&gt;接口中定义好了，使用的时候直接继承BaseMapper就行</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserDao</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BaseMapper</span>&lt;User&gt; &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4、测试-1"><a href="#4、测试-1" class="headerlink" title="4、测试"></a>4、测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Springboot06MybatisplusApplicationTests</span> &#123;<br><br><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> UserDao userDao;<br><br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">contextLoads</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> userDao.selectById(<span class="hljs-number">10</span>);<br>System.out.println(<span class="hljs-string">&quot;user = &quot;</span> + user);<br>&#125;<br><br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">testGetAll</span><span class="hljs-params">()</span>&#123;<br>List&lt;User&gt; users = userDao.selectList(<span class="hljs-literal">null</span>);<br>users.forEach(System.out::println);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4、整合Druid"><a href="#4、整合Druid" class="headerlink" title="4、整合Druid"></a>4、整合Druid</h3><h4 id="1、引入druid依赖"><a href="#1、引入druid依赖" class="headerlink" title="1、引入druid依赖"></a>1、引入druid依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-j<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>runtime<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--引入druid--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.6<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2、配置数据源-2"><a href="#2、配置数据源-2" class="headerlink" title="2、配置数据源"></a>2、配置数据源</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 方式1：不推荐</span><br><span class="hljs-comment">#spring:</span><br><span class="hljs-comment">#  datasource:</span><br><span class="hljs-comment">#    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="hljs-comment">#    url: jdbc:mysql://主机:端口/数据库?serverTimezone=UTC</span><br><span class="hljs-comment">#    username: 用户名</span><br><span class="hljs-comment">#    password: 密码</span><br><span class="hljs-comment">#    type: com.alibaba.druid.pool.DruidDataSource  # 指定Druid数据源</span><br><br><span class="hljs-comment"># 方式2：推荐</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">druid:</span>   <span class="hljs-comment"># 在这里多一层</span><br>        <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br>        <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://主机:端口/数据库?serverTimezone=UTC</span><br>        <span class="hljs-attr">username:</span> <span class="hljs-string">用户名</span><br>        <span class="hljs-attr">password:</span> <span class="hljs-string">密码</span><br></code></pre></td></tr></table></figure><h4 id="3、其他"><a href="#3、其他" class="headerlink" title="3、其他"></a>3、其他</h4><p>其他方面与整合MyBatis一样</p><h2 id="4、基于SpringBoot的SSMP整合案例"><a href="#4、基于SpringBoot的SSMP整合案例" class="headerlink" title="4、基于SpringBoot的SSMP整合案例"></a>4、基于SpringBoot的SSMP整合案例</h2><h3 id="1、创建工程，引入依赖"><a href="#1、创建工程，引入依赖" class="headerlink" title="1、创建工程，引入依赖"></a>1、创建工程，引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- pom.xml --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-j<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>runtime<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--mybatis-plus--&gt;</span><br><span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/com.baomidou/mybatis-plus --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.4.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--druid--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.6<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># application.yml</span><br><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">80</span><br></code></pre></td></tr></table></figure><h3 id="2、创建数据库表"><a href="#2、创建数据库表" class="headerlink" title="2、创建数据库表"></a>2、创建数据库表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-comment">-- Table structure for tbl_book</span><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-keyword">DROP</span> <span class="hljs-keyword">TABLE</span> IF <span class="hljs-keyword">EXISTS</span> `tbl_book`;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `tbl_book`  (<br>  `id` <span class="hljs-type">int</span>(<span class="hljs-number">11</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT,<br>  `type` <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `description` <span class="hljs-type">varchar</span>(<span class="hljs-number">255</span>) <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> utf8 <span class="hljs-keyword">COLLATE</span> utf8_general_ci <span class="hljs-keyword">NULL</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`) <span class="hljs-keyword">USING</span> BTREE<br>) ENGINE <span class="hljs-operator">=</span> InnoDB AUTO_INCREMENT <span class="hljs-operator">=</span> <span class="hljs-number">51</span> <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> <span class="hljs-operator">=</span> utf8 <span class="hljs-keyword">COLLATE</span> <span class="hljs-operator">=</span> utf8_general_ci ROW_FORMAT <span class="hljs-operator">=</span> <span class="hljs-keyword">Dynamic</span>;<br> <br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-comment">-- Records of tbl_book</span><br><span class="hljs-comment">-- ----------------------------</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `tbl_book` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;计算机理论&#x27;</span>, <span class="hljs-string">&#x27;Spring实战 第5版&#x27;</span>, <span class="hljs-string">&#x27;Spring入门经典教程，深入理解Spring原理技术内幕&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `tbl_book` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;计算机理论&#x27;</span>, <span class="hljs-string">&#x27;Spring 5核心原理与30个类手写实战&#x27;</span>, <span class="hljs-string">&#x27;十年沉淀之作，手写Spring精华思想&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `tbl_book` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">3</span>, <span class="hljs-string">&#x27;计算机理论&#x27;</span>, <span class="hljs-string">&#x27;Spring 5 设计模式&#x27;</span>, <span class="hljs-string">&#x27;深入Spring源码剖析Spring源码中蕴含的10大设计模式&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `tbl_book` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">4</span>, <span class="hljs-string">&#x27;计算机理论&#x27;</span>, <span class="hljs-string">&#x27;Spring MVC+MyBatis开发从入门到项目实战&#x27;</span>, <span class="hljs-string">&#x27;全方位解析面向Web应用的轻量级框架，带你成为Spring MVC开发高手&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `tbl_book` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">5</span>, <span class="hljs-string">&#x27;计算机理论&#x27;</span>, <span class="hljs-string">&#x27;轻量级Java Web企业应用实战&#x27;</span>, <span class="hljs-string">&#x27;源码级剖析Spring框架，适合已掌握Java基础的读者&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `tbl_book` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">6</span>, <span class="hljs-string">&#x27;计算机理论&#x27;</span>, <span class="hljs-string">&#x27;Java核心技术 卷I 基础知识（原书第11版）&#x27;</span>, <span class="hljs-string">&#x27;Core Java 第11版，Jolt大奖获奖作品，针对Java SE9、10、11全面更新&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `tbl_book` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">7</span>, <span class="hljs-string">&#x27;计算机理论&#x27;</span>, <span class="hljs-string">&#x27;深入理解Java虚拟机&#x27;</span>, <span class="hljs-string">&#x27;5个维度全面剖析JVM，大厂面试知识点全覆盖&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `tbl_book` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">8</span>, <span class="hljs-string">&#x27;计算机理论&#x27;</span>, <span class="hljs-string">&#x27;Java编程思想（第4版）&#x27;</span>, <span class="hljs-string">&#x27;Java学习必读经典,殿堂级著作！赢得了全球程序员的广泛赞誉&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `tbl_book` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">9</span>, <span class="hljs-string">&#x27;计算机理论&#x27;</span>, <span class="hljs-string">&#x27;零基础学Java（全彩版）&#x27;</span>, <span class="hljs-string">&#x27;零基础自学编程的入门图书，由浅入深，详解Java语言的编程思想和核心技术&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `tbl_book` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">10</span>, <span class="hljs-string">&#x27;市场营销&#x27;</span>, <span class="hljs-string">&#x27;直播就该这么做：主播高效沟通实战指南&#x27;</span>, <span class="hljs-string">&#x27;李子柒、李佳琦、薇娅成长为网红的秘密都在书中&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `tbl_book` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">11</span>, <span class="hljs-string">&#x27;市场营销&#x27;</span>, <span class="hljs-string">&#x27;直播销讲实战一本通&#x27;</span>, <span class="hljs-string">&#x27;和秋叶一起学系列网络营销书籍&#x27;</span>);<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> `tbl_book` <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">12</span>, <span class="hljs-string">&#x27;市场营销&#x27;</span>, <span class="hljs-string">&#x27;直播带货：淘宝、天猫直播从新手到高手&#x27;</span>, <span class="hljs-string">&#x27;一本教你如何玩转直播的书，10堂课轻松实现带货月入3W+&#x27;</span>);<br></code></pre></td></tr></table></figure><h3 id="3、实体类快速开发—–lombok"><a href="#3、实体类快速开发—–lombok" class="headerlink" title="3、实体类快速开发—–lombok"></a>3、实体类快速开发—–lombok</h3><h4 id="3-1、引入依赖"><a href="#3-1、引入依赖" class="headerlink" title="3.1、引入依赖"></a>3.1、引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--lombok--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-2、在实体类上加上注解-Data"><a href="#3-2、在实体类上加上注解-Data" class="headerlink" title="3.2、在实体类上加上注解@Data"></a>3.2、在实体类上加上注解<code>@Data</code></h4><p>可以为当前实体类在编译期设置对应的get&#x2F;set方法，toString方法，hashCode方法，equals方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> lombok.Data;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Book</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer id;<br>    <span class="hljs-keyword">private</span> String type;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> String description;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4、数据层标准开发（基础MyBatisPlus）"><a href="#4、数据层标准开发（基础MyBatisPlus）" class="headerlink" title="4、数据层标准开发（基础MyBatisPlus）"></a>4、数据层标准开发（基础MyBatisPlus）</h3><h4 id="1、在application-yml文件中配置表前缀和表的id的策略"><a href="#1、在application-yml文件中配置表前缀和表的id的策略" class="headerlink" title="1、在application.yml文件中配置表前缀和表的id的策略"></a>1、在application.yml文件中配置表前缀和表的id的策略</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># MyBatisPlus相关配置</span><br><span class="hljs-attr">mybatis-plus:</span><br>  <span class="hljs-attr">global-config:</span><br>    <span class="hljs-attr">db-config:</span><br>      <span class="hljs-attr">table-prefix:</span> <span class="hljs-string">tbl_</span>   <span class="hljs-comment"># 表前缀</span><br>      <span class="hljs-attr">id-type:</span> <span class="hljs-string">auto</span>  <span class="hljs-comment"># 数据库的自增策略。</span><br></code></pre></td></tr></table></figure><h4 id="2、编写一个接口实现BaseMapper，并指定泛型"><a href="#2、编写一个接口实现BaseMapper，并指定泛型" class="headerlink" title="2、编写一个接口实现BaseMapper，并指定泛型"></a>2、编写一个接口实现BaseMapper，并指定泛型</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;<br><span class="hljs-keyword">import</span> com.example.springboot.domain.Book;<br><span class="hljs-keyword">import</span> org.apache.ibatis.annotations.Mapper;<br><br><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">BookDao</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BaseMapper</span>&lt;Book&gt; &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="3、测试"><a href="#3、测试" class="headerlink" title="3、测试"></a>3、测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BookDaoTestCase</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> BookDao bookDao;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testgetById</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">Book</span> <span class="hljs-variable">book</span> <span class="hljs-operator">=</span> bookDao.selectById(<span class="hljs-number">1</span>);  <span class="hljs-comment">// 根据id查询单个</span><br>        System.out.println(<span class="hljs-string">&quot;book = &quot;</span> + book);<br>    &#125;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testSave</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">Book</span> <span class="hljs-variable">book</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Book</span>();<br>        book.setType(<span class="hljs-string">&quot;测试数据123&quot;</span>);<br>        book.setName(<span class="hljs-string">&quot;测试数据123&quot;</span>);<br>        book.setDescription(<span class="hljs-string">&quot;测试数据123&quot;</span>);<br>        bookDao.insert(book);  <span class="hljs-comment">//新增。需要配置id的策略</span><br>    &#125;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testUpdate</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">Book</span> <span class="hljs-variable">book</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Book</span>();<br>        book.setId(<span class="hljs-number">51</span>);<br>        book.setType(<span class="hljs-string">&quot;测试数据324234&quot;</span>);<br>        book.setName(<span class="hljs-string">&quot;测试数据43423423&quot;</span>);<br>        book.setDescription(<span class="hljs-string">&quot;测试数据123&quot;</span>);<br>        bookDao.updateById(book);  <span class="hljs-comment">//根据id修改</span><br>    &#125;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testDelete</span><span class="hljs-params">()</span> &#123;<br>        bookDao.deleteById(<span class="hljs-number">51</span>);  <span class="hljs-comment">// 根据id删除</span><br>    &#125;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testGetAll</span><span class="hljs-params">()</span> &#123;<br>        List&lt;Book&gt; books = bookDao.selectList(<span class="hljs-literal">null</span>);  <span class="hljs-comment">// 查询所有</span><br>        books.forEach(System.out::println);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4、开启MyBatisPlus运行日志"><a href="#4、开启MyBatisPlus运行日志" class="headerlink" title="4、开启MyBatisPlus运行日志"></a>4、开启MyBatisPlus运行日志</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># MyBatisPlus相关配置</span><br><span class="hljs-attr">mybatis-plus:</span><br>  <span class="hljs-attr">global-config:</span><br>    <span class="hljs-attr">db-config:</span><br>      <span class="hljs-attr">table-prefix:</span> <span class="hljs-string">tbl_</span>   <span class="hljs-comment"># 表前缀</span><br>      <span class="hljs-attr">id-type:</span> <span class="hljs-string">auto</span>  <span class="hljs-comment"># 数据库的自增策略。</span><br>  <span class="hljs-attr">configuration:</span><br>    <span class="hljs-attr">log-impl:</span> <span class="hljs-string">org.apache.ibatis.logging.stdout.StdOutImpl</span>  <span class="hljs-comment"># 标准输出，将日志信息输出到控制台</span><br></code></pre></td></tr></table></figure><h4 id="5、MyBatisPlus分页"><a href="#5、MyBatisPlus分页" class="headerlink" title="5、MyBatisPlus分页"></a>5、MyBatisPlus分页</h4><h5 id="1、创建一个配置类，配置MyBaitisPlus的拦截器"><a href="#1、创建一个配置类，配置MyBaitisPlus的拦截器" class="headerlink" title="1、创建一个配置类，配置MyBaitisPlus的拦截器"></a>1、创建一个配置类，配置MyBaitisPlus的拦截器</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.springboot.config;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.plugins.MybatisPlusInterceptor;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.plugins.inner.PaginationInnerInterceptor;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><span class="hljs-meta">@Configuration</span>  <span class="hljs-comment">//这是一个配置类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MPConfig</span>&#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * MyBatisPlus的拦截器，作用是分页，也就是在sql语句后面拼接limit</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> MybatisPlusInterceptor <span class="hljs-title function_">mybatisPlusInterceptor</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-type">MybatisPlusInterceptor</span> <span class="hljs-variable">interceptor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MybatisPlusInterceptor</span>();<br>        interceptor.addInnerInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">PaginationInnerInterceptor</span>());  <span class="hljs-comment">//作用是分页，也就是在sql语句后面拼接limit</span><br>        <span class="hljs-keyword">return</span> interceptor;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="2、使用"><a href="#2、使用" class="headerlink" title="2、使用"></a>2、使用</h5><p><img src="/img/springboot2_img/MyBatisPlus%E5%88%86%E9%A1%B5%E6%B5%8B%E8%AF%95.jpg" alt="MyBatisPlus分页测试"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">testGetPage</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">IPage</span> <span class="hljs-variable">page</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Page</span>(<span class="hljs-number">2</span>,<span class="hljs-number">5</span>);<br>    bookDao.selectPage(page, <span class="hljs-literal">null</span>);<br>    System.out.println(page.getCurrent());  <span class="hljs-comment">// 当前页码</span><br>    System.out.println(page.getSize());  <span class="hljs-comment">// 每页记录数</span><br>    System.out.println(page.getTotal());  <span class="hljs-comment">// 总记录数</span><br>    System.out.println(page.getPages());  <span class="hljs-comment">// 总页数</span><br>    System.out.println(page.getRecords());  <span class="hljs-comment">// 查询出来的详细数据</span><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="6、MyBatisPlus条件查询"><a href="#6、MyBatisPlus条件查询" class="headerlink" title="6、MyBatisPlus条件查询"></a>6、MyBatisPlus条件查询</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 有两种写法，QueryWrapper和LambdaQueryWrapper，推荐第二种</span><br><span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testGetByCondition</span><span class="hljs-params">()</span> &#123;  <span class="hljs-comment">// 按条件查询</span><br>        <span class="hljs-comment">//QueryWrapper就是查询条件</span><br>        QueryWrapper&lt;Book&gt; qw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        qw.like(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;Spring&quot;</span>);  <span class="hljs-comment">//查询name中包含Spring的数据</span><br>        List&lt;Book&gt; books = bookDao.selectList(qw);<br>        books.forEach(System.out::println);<br>    &#125;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testGetByCondition2</span><span class="hljs-params">()</span> &#123;  <span class="hljs-comment">// 按条件查询</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Spring&quot;</span>;<br>        <span class="hljs-comment">//LambdaQueryWrapper也是查询条件</span><br>        LambdaQueryWrapper&lt;Book&gt; lqw = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LambdaQueryWrapper</span>&lt;&gt;();<br>        lqw.like(name != <span class="hljs-literal">null</span>, Book::getName, name);  <span class="hljs-comment">//查询name中包含Spring的数据。第一个参数是布尔值，true就拼接like，false不拼接。可不写。</span><br>        List&lt;Book&gt; books = bookDao.selectList(lqw);<br>        books.forEach(System.out::println);<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="5、业务层开发（快速开发——MyBatisPlus）"><a href="#5、业务层开发（快速开发——MyBatisPlus）" class="headerlink" title="5、业务层开发（快速开发——MyBatisPlus）"></a>5、业务层开发（快速开发——MyBatisPlus）</h3><ul><li>Service层接口定义与数据层接口定义具有较大区别。举例：<ul><li>业务层：<code>login(String username,String password)</code></li><li>数据层：<code>selectByUsernameAndPassword(String username,String password)</code></li></ul></li></ul><p>快速开发方案：</p><ul><li>使用MyBatisPlus提供的业务层通用接口（<code>IService&lt;T&gt;</code>）与业务层通用实现类（<code>ServiceImpl&lt;M,T&gt;</code>）</li><li>可以在通用类基础上做功能重载或功能追加</li><li>注意重载时不要覆盖原始操作，避免原始提供的功能丢失</li></ul><h4 id="5-1、定义接口-继承IService接口"><a href="#5-1、定义接口-继承IService接口" class="headerlink" title="5.1、定义接口,继承IService接口"></a>5.1、定义接口,继承IService接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.service.IService;<br><span class="hljs-keyword">import</span> com.example.springboot.domain.Book;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">BookService</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">IService</span>&lt;Book&gt; &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="5-2、定义实现类，继承ServiceImpl类，实现上一步定义的接口"><a href="#5-2、定义实现类，继承ServiceImpl类，实现上一步定义的接口" class="headerlink" title="5.2、定义实现类，继承ServiceImpl类，实现上一步定义的接口"></a>5.2、定义实现类，继承ServiceImpl类，实现上一步定义的接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;<br><span class="hljs-keyword">import</span> com.example.springboot.dao.BookDao;<br><span class="hljs-keyword">import</span> com.example.springboot.domain.Book;<br><span class="hljs-keyword">import</span> com.example.springboot.service.BookService;<br><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BookServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;BookDao, Book&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">BookService</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6、表现层开发"><a href="#6、表现层开发" class="headerlink" title="6、表现层开发"></a>6、表现层开发</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.springboot.controller;<br><br><span class="hljs-keyword">import</span> com.example.springboot.domain.Book;<br><span class="hljs-keyword">import</span> com.example.springboot.service.IBookService;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.*;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/books&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BookController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> IBookService bookService;<br><br>    <span class="hljs-meta">@GetMapping</span><br>    <span class="hljs-keyword">public</span> List&lt;Book&gt; <span class="hljs-title function_">getAll</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> bookService.list();<br>    &#125;<br><br>    <span class="hljs-meta">@PostMapping</span><br>    <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">save</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> Book book)</span> &#123;<br>        <span class="hljs-keyword">return</span> bookService.save(book);<br>    &#125;<br><br>    <span class="hljs-meta">@PutMapping</span><br>    <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">update</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> Book book)</span> &#123;<br>        <span class="hljs-keyword">return</span> bookService.updateById(book);<br>    &#125;<br><br>    <span class="hljs-meta">@DeleteMapping(&quot;/&#123;id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">delete</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Integer id)</span> &#123;<br>        <span class="hljs-keyword">return</span> bookService.removeById(id);<br>    &#125;<br><br>    <span class="hljs-meta">@GetMapping(&quot;/&#123;id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> Book <span class="hljs-title function_">getById</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Integer id)</span> &#123;<br>        <span class="hljs-keyword">return</span> bookService.getById(id);<br>    &#125;<br><br>    <span class="hljs-meta">@GetMapping(&quot;/&#123;currentPage&#125;/&#123;pageSize&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> IPage&lt;Book&gt; <span class="hljs-title function_">getPage</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> <span class="hljs-type">int</span> currentPage,<span class="hljs-meta">@PathVariable</span> <span class="hljs-type">int</span> pageSize)</span>&#123;<br>        <span class="hljs-keyword">return</span> bookService.getPage(currentPage,pageSize);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="7、表现层消息一致性处理"><a href="#7、表现层消息一致性处理" class="headerlink" title="7、表现层消息一致性处理"></a>7、表现层消息一致性处理</h3><ul><li>设计表现层返回结果的模型类，用于后端与前端进行数据格式同意，也称为<font color=#3271ae><strong>前后端数据协议</strong></font></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Result</span>&lt;T&gt; &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> code;<br>    <span class="hljs-keyword">private</span> String message;<br>    <span class="hljs-keyword">private</span> T data;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Result</span><span class="hljs-params">()</span> &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Result</span><span class="hljs-params">(<span class="hljs-type">int</span> code, String message)</span> &#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.message = message;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Result</span><span class="hljs-params">(<span class="hljs-type">int</span> code, String message, T data)</span> &#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.message = message;<br>        <span class="hljs-built_in">this</span>.data = data;<br>    &#125;<br><br>    <span class="hljs-comment">// 省略getter和setter方法</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">success</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Result</span>&lt;&gt;(<span class="hljs-number">200</span>, <span class="hljs-string">&quot;success&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">success</span><span class="hljs-params">(T data)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Result</span>&lt;&gt;(<span class="hljs-number">200</span>, <span class="hljs-string">&quot;success&quot;</span>, data);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; Result&lt;T&gt; <span class="hljs-title function_">error</span><span class="hljs-params">(<span class="hljs-type">int</span> code, String message)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Result</span>&lt;&gt;(code, message);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8、异常消息处理"><a href="#8、异常消息处理" class="headerlink" title="8、异常消息处理"></a>8、异常消息处理</h3><p>只需要定义一个统一异常处理的类，并使用<code>@ControllerAdvice</code>注解来标注这个类；然后在这个类中定义不同的方法，方法的返回值也是返回给前端的模型类，使用<code>@ExceptionHandler</code>注解标注具体的各个方法。就可以解决发生异常时返回给前端的数据格式不统一的问题了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestControllerAdvice</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GlobalExceptionHandler</span> &#123;<br><br>    <span class="hljs-meta">@ExceptionHandler(Exception.class)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">handleException</span><span class="hljs-params">(Exception e)</span> &#123;<br>        <span class="hljs-type">Result</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Result</span>();<br>        result.setCode(<span class="hljs-string">&quot;500&quot;</span>);<br>        result.setMessage(<span class="hljs-string">&quot;服务器出现异常，请稍后再试&quot;</span>);<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="实用1"><a href="#实用1" class="headerlink" title="实用1"></a>实用1</h1><h2 id="1、打包与运行"><a href="#1、打包与运行" class="headerlink" title="1、打包与运行"></a>1、打包与运行</h2><h3 id="1、windows操作"><a href="#1、windows操作" class="headerlink" title="1、windows操作"></a>1、windows操作</h3><h4 id="1、SpringBoot项目快速启动（Windows版）"><a href="#1、SpringBoot项目快速启动（Windows版）" class="headerlink" title="1、SpringBoot项目快速启动（Windows版）"></a>1、SpringBoot项目快速启动（Windows版）</h4><ul><li><p>①、对SpringBoot项目打包（执行Maven构建指令package）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mvn package<br></code></pre></td></tr></table></figure></li><li><p>②、运行项目（执行启动指令）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">java -jar springboot.jar<br></code></pre></td></tr></table></figure></li><li><p>注意事项：</p><p>jar支持命令行启动需要依赖maven插件支持，要确定打包时是否具有SpringBoot对应的maven插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h4 id="2、Windows端口被占用"><a href="#2、Windows端口被占用" class="headerlink" title="2、Windows端口被占用"></a>2、Windows端口被占用</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查询端口</span><br>netstat -ano<br><span class="hljs-meta prompt_"># </span><span class="language-bash">查询指定端口</span><br>netstat -ano | findstr &quot;端口号&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">根据进程PID查询进程名称</span><br>tasklist | findstr &quot;进程PID号&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">根据PID杀死任务</span><br>taskkill /F /PID &quot;进程PID号&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">根据进程名称杀死任务</span><br>taskkill -f -t -im &quot;进程名称&quot;<br></code></pre></td></tr></table></figure><h3 id="2、Linux启动jar包"><a href="#2、Linux启动jar包" class="headerlink" title="2、Linux启动jar包"></a>2、Linux启动jar包</h3><p>跟Windows一样</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">java -jar springboot_08_ssmp-0.0.1-SNAPSHOT.jar<br></code></pre></td></tr></table></figure><h2 id="2、配置文件相关"><a href="#2、配置文件相关" class="headerlink" title="2、配置文件相关"></a>2、配置文件相关</h2><h3 id="1、临时属性设置"><a href="#1、临时属性设置" class="headerlink" title="1、临时属性设置"></a>1、临时属性设置</h3><h4 id="1-1、命令行设置临时属性"><a href="#1-1、命令行设置临时属性" class="headerlink" title="1.1、命令行设置临时属性"></a>1.1、命令行设置临时属性</h4><ul><li>使用jar命令启动SpringBoot工程时可以使用临时属性替换配置文件中的属性</li><li>临时属性添加方式：<code>java -jar 工程名.jar --属性名=值</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">java -jar springboot_08_ssmp-0.0.1-SNAPSHOT.jar --server.port=8080<br></code></pre></td></tr></table></figure><ul><li>如果携带多个属性，使用空格分隔</li><li>临时属性必须是当前boot工程支持的属性，否则设置无效</li></ul><h4 id="1-2、在IDEA中设置临时属性"><a href="#1-2、在IDEA中设置临时属性" class="headerlink" title="1.2、在IDEA中设置临时属性"></a>1.2、在IDEA中设置临时属性</h4><p><img src="/img/springboot2_img/%E7%BC%96%E8%BE%91%E9%85%8D%E7%BD%AE.jpg" alt="编辑配置"></p><p><img src="/img/springboot2_img/%E7%BC%96%E8%BE%91%E9%85%8D%E7%BD%AE2.jpg" alt="编辑配置2"></p><p><img src="/img/springboot2_img/%E7%BC%96%E8%BE%91%E9%85%8D%E7%BD%AE3.jpg" alt="编辑配置3"></p><p><img src="/img/springboot2_img/%E7%BC%96%E8%BE%91%E9%85%8D%E7%BD%AE4.jpg" alt="编辑配置4"></p><p>之后在启动项目时，就会自动加载在上面配置的内容了</p><h4 id="1-3、启动类相关知识"><a href="#1-3、启动类相关知识" class="headerlink" title="1.3、启动类相关知识"></a>1.3、启动类相关知识</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// SpringBoot的启动类</span><br><br><span class="hljs-keyword">import</span> org.springframework.boot.SpringApplication;<br><span class="hljs-keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><br><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SSMPApplication</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;  <span class="hljs-comment">// main方法的这个args参数就是我们手动设置的这些命令行参数。</span><br>SpringApplication.run(SSMPApplication.class, args);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>SpringApplication.run(SSMPApplication.class, args);</code>就是SpringBoot项目的入口方法</p><ul><li>这里的第二个参数<code>args</code>是一个字符串数组，用于传递命令行参数。例如指定配置文件的路径、设置日志级别等等。这些参数在应用程序中被main方法的args数组读取和使用。</li><li><code>args</code>参数是可选的，如果不需要传递命令行参数，则可以省略。在这种情况下，<code>args</code>默认为一个空数组。</li></ul><h3 id="2、配置文件等级"><a href="#2、配置文件等级" class="headerlink" title="2、配置文件等级"></a>2、配置文件等级</h3><p>SpringBoot中4级配置文件：</p><ul><li>1级：jar包外：config&#x2F;application.yml 用于运维经理整体调控    <strong><font color=#3271ae>【最高】</font></strong></li><li>2级：jar包外：application.yml 用于运维人员配置涉密线上环境</li><li>3级：classpath：config&#x2F;application.yml 用于项目经理整体调控</li><li>4级：classpath：application.yml 用于开发人员本机开发与测试      <strong><font color=#3271ae>【最低】</font></strong></li></ul><p>作用：</p><ul><li>1级与2级是系统打包后设置通用属性，1级常用于运维经理进行线上整体项目部署方案调控</li><li>3级与4级用于系统开发阶段设置通用属性，3级常用于项目经理进行整体项目属性调控</li></ul><p>多层级配置文件间的属性采用叠加并覆盖的形式作用于程序</p><h3 id="3、自定义配置文件"><a href="#3、自定义配置文件" class="headerlink" title="3、自定义配置文件"></a>3、自定义配置文件</h3><p>配置文件可以修改名称和路径，有两种方式：</p><ul><li><p>方式1：使用<code>--spring.config.name=配置文件名</code>（不用写文件扩展名）</p><p><img src="/img/springboot2_img/%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B61.jpg" alt="自定义配置文件方式1"></p></li><li><p>方式2：使用<code>--spring.config.location=classpath:/配置文件名</code>（要写扩展名，可以配置多个，中间使用逗号分隔）</p><p><img src="/img/springboot2_img/%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B62.jpg" alt="自定义配置文件方式2"></p></li></ul><blockquote><ul><li>单服务器项目：使用自定义配置文件需求较低</li><li>多服务器项目：使用自定义配置文件需求较高，将所有配置文件放置在同一个目录中，统一管理</li><li>基于SpringCloud技术：所有的服务器将不再设置配置文件，而是通过配置中心进行设定，动态加载配置信息</li></ul></blockquote><h2 id="3、多环境开发"><a href="#3、多环境开发" class="headerlink" title="3、多环境开发"></a>3、多环境开发</h2><h3 id="1、yaml版多环境开发"><a href="#1、yaml版多环境开发" class="headerlink" title="1、yaml版多环境开发"></a>1、yaml版多环境开发</h3><h4 id="1-1、在同一个yaml文件中设置多环境"><a href="#1-1、在同一个yaml文件中设置多环境" class="headerlink" title="1.1、在同一个yaml文件中设置多环境"></a>1.1、在同一个yaml文件中设置多环境</h4><blockquote><ul><li>yaml格式中设置多环境使用 <code>---</code> 区分环境设置边界</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">&gt;#</span> <span class="hljs-string">应用哪个环境</span><br><span class="hljs-string">&gt;spring:</span><br><span class="hljs-string">&gt;profiles:</span><br> <span class="hljs-attr">active:</span> <span class="hljs-string">dev</span><br><span class="hljs-string">&gt;---</span> <br><span class="hljs-string">&gt;#</span> <span class="hljs-string">设置环境</span><br><span class="hljs-string">&gt;#</span> <span class="hljs-string">生产环境</span><br><span class="hljs-string">&gt;server:</span><br><span class="hljs-string">&gt;port:</span> <span class="hljs-number">80</span><br><span class="hljs-string">&gt;spring:</span><br><span class="hljs-string">&gt;config:</span><br> <span class="hljs-attr">activate:</span><br>   <span class="hljs-attr">on-profile:</span> <span class="hljs-string">pro</span><br><span class="hljs-string">&gt;---</span><br><span class="hljs-string">&gt;#</span> <span class="hljs-string">开发环境</span><br><span class="hljs-string">&gt;server:</span><br><span class="hljs-string">&gt;port:</span> <span class="hljs-number">81</span><br><span class="hljs-string">&gt;spring:</span><br><span class="hljs-string">&gt;config:</span><br> <span class="hljs-attr">activate:</span><br>   <span class="hljs-attr">on-profile:</span> <span class="hljs-string">dev</span><br><span class="hljs-string">&gt;---</span><br><span class="hljs-string">&gt;#</span> <span class="hljs-string">测试环境</span><br><span class="hljs-string">&gt;server:</span><br><span class="hljs-string">&gt;port:</span> <span class="hljs-number">82</span><br><span class="hljs-string">&gt;spring:</span><br><span class="hljs-string">&gt;config:</span><br> <span class="hljs-attr">activate:</span><br>   <span class="hljs-attr">on-profile:</span> <span class="hljs-string">test</span><br></code></pre></td></tr></table></figure></blockquote><h4 id="1-2、在多个yaml文件中设置多环境"><a href="#1-2、在多个yaml文件中设置多环境" class="headerlink" title="1.2、在多个yaml文件中设置多环境"></a>1.2、在多个yaml文件中设置多环境</h4><blockquote><p>使用不同的配置文件：可以为不同的环境（例如开发、测试、生产）创建不同的配置文件，例如 <code>application-dev.yaml</code>、<code>application-test.yaml</code>、<code>application-prod.yaml</code>，然后通过设置 <code>spring.profiles.active</code> 属性来指定当前使用的环境，例如 <code>spring.profiles.active=dev</code>。Spring Boot会自动加载对应的配置文件</p></blockquote><h3 id="2、properties版多环境开发"><a href="#2、properties版多环境开发" class="headerlink" title="2、properties版多环境开发"></a>2、properties版多环境开发</h3><blockquote><p>使用不同的配置文件：可以为不同的环境（例如开发、测试、生产）创建不同的配置文件，例如 <code>application-dev.properties</code>、<code>application-test.properties</code>、<code>application-prod.properties</code>，然后通过设置 <code>spring.profiles.active</code> 属性来指定当前使用的环境，例如 <code>spring.profiles.active=dev</code>。Spring Boot会自动加载对应的配置文件</p></blockquote><h3 id="3、多环境开发独立配置文件书写技巧"><a href="#3、多环境开发独立配置文件书写技巧" class="headerlink" title="3、多环境开发独立配置文件书写技巧"></a>3、多环境开发独立配置文件书写技巧</h3><ul><li><p>根据功能对配置文件中的信息进行拆分，并制作成独立的配置文件，命名规则如下</p><ul><li>application-devDB.yml</li><li>application-devRedis.yml</li><li>application-devMVC.yml</li></ul></li><li><p>使用include属性在激活指定环境的情况下，同时对多个环境进行加载使其生效，多个环境间只用逗号分隔</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">profiles:</span><br>    <span class="hljs-attr">active:</span> <span class="hljs-string">dev</span><br>    <span class="hljs-attr">include:</span> <span class="hljs-string">devDB,devMVC</span>  <br></code></pre></td></tr></table></figure><ul><li>当主环境dev与其他环境有相同属性时，主环境属性生效；</li><li>其他环境中有相同属性时，最后加载的环境属性生效</li></ul></li><li><p>也能使用group属性替代include属性，可以定义多种著环境与子环境的包含关系，降低配置书写量【比include好】</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">profiles:</span><br>    <span class="hljs-attr">active:</span> <span class="hljs-string">dev</span><br>    <span class="hljs-attr">group:</span>  <span class="hljs-comment"># 也可以使用group   </span><br>      <span class="hljs-attr">&quot;dev&quot;:</span> <span class="hljs-string">devDB,devMVC</span><br>      <span class="hljs-attr">&quot;pro&quot;:</span> <span class="hljs-string">proDB,proMVC</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="4、多环境开发控制"><a href="#4、多环境开发控制" class="headerlink" title="4、多环境开发控制"></a>4、多环境开发控制</h3><h4 id="Maven与SpringBoot多环境配置"><a href="#Maven与SpringBoot多环境配置" class="headerlink" title="Maven与SpringBoot多环境配置"></a>Maven与SpringBoot多环境配置</h4><h5 id="①、Maven中设置多环境属性"><a href="#①、Maven中设置多环境属性" class="headerlink" title="①、Maven中设置多环境属性"></a>①、Maven中设置多环境属性</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--设置多环境--&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">profiles</span>&gt;</span><br>      <span class="hljs-comment">&lt;!--环境1--&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>          <span class="hljs-comment">&lt;!--唯一标识 id--&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>env_dev<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">profile.active</span>&gt;</span>dev<span class="hljs-tag">&lt;/<span class="hljs-name">profile.active</span>&gt;</span>  <span class="hljs-comment">&lt;!--之后要在springboot的配置文件中引用这个标签--&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br>      <span class="hljs-comment">&lt;!--环境2--&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>env_pro<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">profile.active</span>&gt;</span>pro<span class="hljs-tag">&lt;/<span class="hljs-name">profile.active</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br>          <span class="hljs-comment">&lt;!--设定生效--&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">activation</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">activeByDefault</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">activeByDefault</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">activation</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">profiles</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="②、SpringBoot中引用Maven属性"><a href="#②、SpringBoot中引用Maven属性" class="headerlink" title="②、SpringBoot中引用Maven属性"></a>②、SpringBoot中引用Maven属性</h5><p>在配置文件中使用<code>@..@</code> 占位符读取Maven对应的配置属性值</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">profiles:</span><br>    <span class="hljs-attr">active:</span> <span class="hljs-string">@profile.active@</span>  <span class="hljs-comment"># 读取maven中定义的环境</span><br>    <span class="hljs-attr">group:</span><br>      <span class="hljs-attr">&quot;dev&quot;:</span> <span class="hljs-string">devDB,devMVC</span><br>      <span class="hljs-attr">&quot;pro&quot;:</span> <span class="hljs-string">proDB,proMVC</span><br></code></pre></td></tr></table></figure><h5 id="③、执行Maven打包指令"><a href="#③、执行Maven打包指令" class="headerlink" title="③、执行Maven打包指令"></a>③、执行Maven打包指令</h5><p>就可以看到jar包中的application.yml中是我们配置好的环境了</p><p><img src="/img/springboot2_img/Maven%E9%85%8D%E7%BD%AESpringBoot%E5%A4%9A%E7%8E%AF%E5%A2%83.jpg" alt="Maven配置SpringBoot多环境"></p><h2 id="4、日志"><a href="#4、日志" class="headerlink" title="4、日志"></a>4、日志</h2><h3 id="1、日志基础"><a href="#1、日志基础" class="headerlink" title="1、日志基础"></a>1、日志基础</h3><h4 id="1、代码中使用日志工具记录日志"><a href="#1、代码中使用日志工具记录日志" class="headerlink" title="1、代码中使用日志工具记录日志"></a>1、代码中使用日志工具记录日志</h4><h5 id="①、添加日志记录操作"><a href="#①、添加日志记录操作" class="headerlink" title="①、添加日志记录操作"></a>①、添加日志记录操作</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.slf4j.Logger;<br><span class="hljs-keyword">import</span> org.slf4j.LoggerFactory;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><br><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/books&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BookController</span> &#123;<br><br>    <span class="hljs-comment">//1、创建记录日志的对象</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Logger</span> <span class="hljs-variable">log</span> <span class="hljs-operator">=</span> LoggerFactory.getLogger(BookController.class);<br><br>    <span class="hljs-meta">@GetMapping</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">hello</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;springboot ........&quot;</span>);<br><br>        <span class="hljs-comment">//2、使用</span><br>        log.debug(<span class="hljs-string">&quot;debug....&quot;</span>);<br>        log.info(<span class="hljs-string">&quot;info....&quot;</span>);<br>        log.warn(<span class="hljs-string">&quot;warn....&quot;</span>);<br>        log.error(<span class="hljs-string">&quot;error.....&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;hello...&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><ul><li>可以使用大括号 <code>&#123;&#125;</code> 作为占位符的标识符，例如：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;log.info(<span class="hljs-string">&quot;User &#123;&#125; logged in.&quot;</span>, username);<br>&gt;log.info(<span class="hljs-string">&quot;User &#123;&#125; password is &#123;&#125;.&quot;</span>, username, password);<br></code></pre></td></tr></table></figure><ul><li><p>日志级别：</p></li><li><p>TRACE：运行堆栈信息，使用率低</p></li><li><p>DEBUG：程序员调试代码使用</p></li><li><p>INFO：记录运维过程数据</p></li><li><p>WARN：记录运维过程报警数据</p></li><li><p>ERROR：记录错误堆栈信息</p></li><li><p>FATAL：灾难信息，合并计入ERROR中</p></li></ul></blockquote><h5 id="②、设置日志输出级别"><a href="#②、设置日志输出级别" class="headerlink" title="②、设置日志输出级别"></a>②、设置日志输出级别</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># application.yml</span><br><br><span class="hljs-comment"># 开启debug模式，输出调试信息，常用于检查系统运行状况</span><br><span class="hljs-comment">#de<span class="hljs-doctag">bug:</span> true</span><br><br><span class="hljs-comment"># 设置日志级别，</span><br><span class="hljs-attr">logging:</span><br>  <span class="hljs-comment"># 设置分组，对某个组设置日志级别</span><br>  <span class="hljs-attr">group:</span><br>    <span class="hljs-attr">fenzu1:</span> <span class="hljs-string">org.example.springboot.service,</span> <span class="hljs-string">org.example.springboot.dao</span><br>    <span class="hljs-attr">fenzu2:</span> <span class="hljs-string">org.example.springboot.controller</span><br>  <span class="hljs-attr">level:</span><br><span class="hljs-comment">#    root: info  # root表示根节点，即整体应用日志级别</span><br><span class="hljs-comment">#    org.example.springboot.controller: debug  # 设置某个包的日志级别</span><br>    <span class="hljs-attr">fenzu2:</span> <span class="hljs-string">error</span>  <span class="hljs-comment"># 对某个组设置日志级别</span><br></code></pre></td></tr></table></figure><blockquote><p><strong>优化日志对象创建代码</strong></p><p>使用lombok提供的注解<code>@Slf4j</code>简化开发，减少日志对象的声明操作，为类快速添加日志对象</p><p>使用这个注解可以替代 <code> private static final Logger log = LoggerFactory.getLogger(BookController2.class);</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br>&gt;<span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br>&gt;<span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br>&gt;<span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><br>&gt;<span class="hljs-meta">@RestController</span><br>&gt;<span class="hljs-meta">@RequestMapping(&quot;/books2&quot;)</span><br>&gt;<span class="hljs-meta">@Slf4j</span>  <span class="hljs-comment">//使用这个注解可以替代  private static final Logger log = LoggerFactory.getLogger(BookController2.class);</span><br>&gt;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BookController2</span> &#123;<br><br>&gt;<span class="hljs-meta">@GetMapping</span><br>&gt;<span class="hljs-keyword">public</span> String <span class="hljs-title function_">hello</span><span class="hljs-params">()</span> &#123;<br>&gt;System.out.println(<span class="hljs-string">&quot;springboot ........&quot;</span>);<br><br>&gt;<span class="hljs-comment">//使用</span><br>&gt;log.debug(<span class="hljs-string">&quot;debug....&quot;</span>);<br>&gt;log.info(<span class="hljs-string">&quot;info....&quot;</span>);<br>&gt;log.warn(<span class="hljs-string">&quot;warn....&quot;</span>);<br>&gt;log.error(<span class="hljs-string">&quot;error.....&quot;</span>);<br>&gt;<span class="hljs-keyword">return</span> <span class="hljs-string">&quot;hello...&quot;</span>;<br>&gt;&#125;<br>&gt;&#125;<br></code></pre></td></tr></table></figure></blockquote><h4 id="2、日志输出格式控制"><a href="#2、日志输出格式控制" class="headerlink" title="2、日志输出格式控制"></a>2、日志输出格式控制</h4><p><img src="/img/springboot2_img/%E6%97%A5%E5%BF%97%E8%BE%93%E5%87%BA%E6%A0%BC%E5%BC%8F.jpg" alt="日志输出格式"></p><ul><li>PID：进程ID，用于表明当前操作所处的进程，当多服务同时记录日志时，该值可用于协助调试程序</li><li>所属类&#x2F;接口名：当前显示信息为SpringBoot重写后的信息，名称过长时，简化包名书写为首字母，甚至直接删除</li></ul><blockquote><ul><li>在Spring Boot的日志记录中，使用了一些常见的占位符来格式化日志消息。以下是一些常用的占位符及其解释：</li></ul><ol><li><code>%d</code>: 用于输出日期和时间。可以通过指定格式来自定义日期时间的显示方式。例如：<ul><li><code>%d&#123;yyyy-MM-dd HH:mm:ss&#125;</code>: 输出格式为年-月-日 时:分:秒。</li><li><code>%d&#123;yyyy-MM-dd&#125;</code>: 输出格式为年-月-日。</li></ul></li><li><code>%p</code>: 用于输出日志级别。日志级别可以是DEBUG、INFO、WARN、ERROR等。例如：<ul><li><code>%p</code>: 输出日志级别的名称（如INFO）。</li><li><code>%5p</code>: 输出日志级别的名称，固定宽度为5个字符，右对齐。</li></ul></li><li><code>%c</code>: 用于输出日志的类名。例如：<ul><li><code>%c</code>: 输出完整的类名（包括包名）。</li><li><code>%c&#123;1&#125;</code>: 输出类名的最后一个组件（不包括包名）。</li></ul></li><li><code>%t</code>: 用于输出线程名。例如：<ul><li><code>%t</code>: 输出线程的名称。</li></ul></li><li><code>%m</code>: 用于输出日志消息。例如：<ul><li><code>%m</code>: 输出日志消息的内容。</li></ul></li><li><code>%n</code>: 用于输出换行符。</li><li><code>%r</code>: 用于输出从应用程序启动到输出日志的时间（以毫秒为单位）。</li><li><code>%F</code>: 用于输出日志消息所在的文件名。</li><li><code>%L</code>: 用于输出日志消息所在的行号。</li><li><code>%M</code>: 用于输出日志消息所在的方法名。</li><li><code>%X</code>: 用于输出MDC（Mapped Diagnostic Context）的内容。MDC可以用于在不同的日志事件中传递上下文信息。</li><li><code>%%</code>: 用于输出百分号。</li></ol><p>这些占位符可以在Spring Boot的配置文件中使用：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">&gt;#</span> <span class="hljs-string">application.yml</span><br><br><span class="hljs-string">&gt;#</span> <span class="hljs-string">设置日志输出格式</span><br><span class="hljs-string">&gt;logging:</span><br> <span class="hljs-attr">pattern:</span><br>   <span class="hljs-attr">console:</span> <span class="hljs-string">&quot;%d [%p] [%t] %m%n&quot;</span><br></code></pre></td></tr></table></figure></blockquote><h4 id="3、日志文件"><a href="#3、日志文件" class="headerlink" title="3、日志文件"></a>3、日志文件</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># application.yml</span><br><br><span class="hljs-comment"># 设置保存在文件中</span><br><span class="hljs-attr">logging:</span><br>  <span class="hljs-attr">file:</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">server.log</span><br>  <span class="hljs-attr">logback:</span><br>    <span class="hljs-attr">rollingpolicy:</span><br>      <span class="hljs-attr">max-file-size:</span> <span class="hljs-string">4KB</span> <span class="hljs-comment"># 设置文件最大多大</span><br>      <span class="hljs-attr">file-name-pattern:</span> <span class="hljs-string">server.%d.%i.log</span>  <span class="hljs-comment"># 设置文件名。比如server.2023-05-27.0.log   %i代表第几个</span><br></code></pre></td></tr></table></figure><h1 id="实用2"><a href="#实用2" class="headerlink" title="实用2"></a>实用2</h1><h2 id="1、热部署（重启）"><a href="#1、热部署（重启）" class="headerlink" title="1、热部署（重启）"></a>1、热部署（重启）</h2><h4 id="关于热部署"><a href="#关于热部署" class="headerlink" title="关于热部署"></a>关于热部署</h4><ul><li>重启（Restart）：会加载自定义开发代码，包含类、页面、配置文件等，加载位置restart类加载器</li><li>重载（ReLoad）：会加载jar包，加载位置base类加载器</li></ul><p>热部署仅仅加载当前开发者自定义开发的资源，不加载jar资源</p><h3 id="1、手动启动热部署"><a href="#1、手动启动热部署" class="headerlink" title="1、手动启动热部署"></a>1、手动启动热部署</h3><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤:"></a>步骤:</h4><h5 id="①、引入依赖"><a href="#①、引入依赖" class="headerlink" title="①、引入依赖"></a>①、引入依赖</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--热部署工具--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-devtools<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="②、手动进行热部署："><a href="#②、手动进行热部署：" class="headerlink" title="②、手动进行热部署："></a>②、手动进行热部署：</h5><p>点击<code>build project</code>                     快捷键：<code>Ctrl + F9</code></p><h3 id="2、自动启动热部署"><a href="#2、自动启动热部署" class="headerlink" title="2、自动启动热部署"></a>2、自动启动热部署</h3><p><img src="/img/springboot2_img/%E7%83%AD%E9%83%A8%E7%BD%B2-%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA%E9%A1%B9%E7%9B%AE.jpg" alt="热部署-自动构建项目"></p><p><img src="/img/springboot2_img/%E8%87%AA%E5%8A%A8%E7%83%AD%E9%83%A8%E7%BD%B2.jpg" alt="自动热部署"></p><p>默认是鼠标焦点离开IDEA 5秒之后，自动进行热部署</p><h3 id="3、热部署范围配置"><a href="#3、热部署范围配置" class="headerlink" title="3、热部署范围配置"></a>3、热部署范围配置</h3><blockquote><p>默认不触发重启的目录列表</p><ul><li>&#x2F;META-INF&#x2F;maven</li><li>&#x2F;META-INF&#x2F;resources</li><li>&#x2F;resources</li><li>&#x2F;static</li><li>&#x2F;public</li><li>&#x2F;templates</li></ul></blockquote><p>可以在application.yml文件中对触发热部署的范围进行修改</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">devtools:</span><br>    <span class="hljs-attr">restart:</span><br>      <span class="hljs-attr">exclude:</span> <span class="hljs-string">static/**,</span> <span class="hljs-string">public/**,</span> <span class="hljs-string">config/application.yml</span>  <span class="hljs-comment"># 不触发热部署的范围</span><br></code></pre></td></tr></table></figure><h3 id="4、关闭热部署"><a href="#4、关闭热部署" class="headerlink" title="4、关闭热部署"></a>4、关闭热部署</h3><ul><li>关闭热部署：</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">devtools:</span><br>    <span class="hljs-attr">restart:</span><br>      <span class="hljs-attr">exclude:</span> <span class="hljs-string">static/**,</span> <span class="hljs-string">public/**,</span> <span class="hljs-string">config/application.yml</span>  <span class="hljs-comment"># 不触发热部署的范围</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">false</span>  <span class="hljs-comment"># 设置热部署不可用</span><br></code></pre></td></tr></table></figure><ul><li>可以设置高优先级属性禁用热部署：在启动类中设置</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>System.setProperty(<span class="hljs-string">&quot;spring.devtools.restart.enabled&quot;</span>,<span class="hljs-string">&quot;false&quot;</span>);  <span class="hljs-comment">// 以更高的优先级关闭热部署。这个优先级比application.properties高</span><br>SpringApplication.run(SSMPApplication.class, args);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="2、实用配置"><a href="#2、实用配置" class="headerlink" title="2、实用配置"></a>2、实用配置</h2><h3 id="1、-ConfigurationProperties注解"><a href="#1、-ConfigurationProperties注解" class="headerlink" title="1、@ConfigurationProperties注解"></a>1、<code>@ConfigurationProperties</code>注解</h3><ul><li><p>可以使用<code>@ConfigurationProperties</code>注解为第三方bean绑定属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Bean</span><br><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;datasource&quot;)</span><br><span class="hljs-keyword">public</span> DruidDataSource <span class="hljs-title function_">dataSource</span><span class="hljs-params">()</span>&#123;<br><span class="hljs-type">DruidDataSource</span> <span class="hljs-variable">ds</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DruidDataSource</span>();<br><span class="hljs-keyword">return</span> ds;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># application.yml</span><br><br><span class="hljs-comment"># 自定义属性</span><br><span class="hljs-attr">datasource:</span><br>  <span class="hljs-attr">driverClassName:</span> <span class="hljs-string">com.mysql.123123123123</span><br></code></pre></td></tr></table></figure></li></ul><blockquote><p><code>@EnableConfigurationProperties</code>注解相关</p><p>可以在启动类上加上这个注解代表开启属性绑定；并指定对应的类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;# 启动类<br><br>&gt;<span class="hljs-meta">@SpringBootApplication</span><br>&gt;<span class="hljs-meta">@EnableConfigurationProperties(&#123;ServerConfig.class&#125;)</span>  <span class="hljs-comment">//开启属性绑定，并设定对应的bean。如果设置了这个注解，就不需要在对应的类上加上@Component这个注解了</span><br>&gt;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Springboot13ConfigurationApplication</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>SpringApplication.run(Springboot13ConfigurationApplication.class, args);<br>&#125;<br>&gt;&#125;<br></code></pre></td></tr></table></figure><p>如果设置了<code>@EnableConfigurationProperties</code>这个注解，就不需要在对应的类上加上<code>@Component</code>这个注解了</p></blockquote><ul><li><p>在<code>@ConfigurationProperties</code>注解标注的类上会有一个警告，可以加上依赖去掉</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--去掉注释警告--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="2、宽松绑定"><a href="#2、宽松绑定" class="headerlink" title="2、宽松绑定"></a>2、宽松绑定</h3><blockquote><p><code>@ConfigurationProperties</code>注解是Spring Boot提供的一个用于绑定属性的注解，用于将配置文件中的属性值绑定到一个Java对象上。在属性名绑定方面，<code>@ConfigurationProperties</code>注解支持属性名宽松绑定。</p><p>属性名宽松绑定指的是在绑定属性时，注解会尝试将配置文件中的属性名与Java对象的属性名进行灵活匹配，以实现属性值的绑定。具体来说，宽松绑定提供以下几种匹配规则：</p><ol><li>小写和中划线转换：配置文件中的属性名可以使用小写字母和中划线（例如<code>my-property-name</code>），而Java对象的属性名可以使用驼峰命名规则（例如<code>myPropertyName</code>），注解会自动进行转换并匹配。</li><li>驼峰转换：配置文件中的属性名可以使用驼峰命名规则（例如<code>myPropertyName</code>），而Java对象的属性名可以使用小写字母和中划线（例如<code>my-property-name</code>），注解会自动进行转换并匹配。</li><li>层级匹配：配置文件中的属性名可以使用层级结构（例如<code>my.property.name</code>），而Java对象的属性可以使用嵌套对象来匹配层级结构。</li></ol><p>下面是一个示例，演示了<code>@ConfigurationProperties</code>注解的属性名宽松绑定：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@ConfigurationProperties(prefix = &quot;my&quot;)</span><br>&gt;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyProperties</span> &#123;<br> <span class="hljs-keyword">private</span> String propertyName;<br><br> <span class="hljs-comment">// Getter and Setter</span><br><br> <span class="hljs-comment">// ...</span><br>&gt;&#125;<br></code></pre></td></tr></table></figure><p>在上述示例中，<code>@ConfigurationProperties</code>注解使用<code>prefix</code>参数指定了属性名的前缀为<code>my</code>。然后，注解会尝试将配置文件中以<code>my</code>为前缀的属性名与<code>MyProperties</code>类中的属性进行宽松匹配。例如，配置文件中的属性<code>my.property-name</code>会被绑定到<code>MyProperties</code>类中的<code>propertyName</code>属性上。</p></blockquote><h3 id="3、常用计量单位绑定"><a href="#3、常用计量单位绑定" class="headerlink" title="3、常用计量单位绑定"></a>3、常用计量单位绑定</h3><p>Spring Boot支持JDK 8提供的时间和空间计量单位，这些单位用于处理日期、时间和持续时间的操作。下面是一些常用的时间和空间计量单位：</p><p>时间计量单位：</p><ul><li><code>Duration</code>: 表示一段时间的持续时间，可以精确到纳秒级别。</li><li><code>Instant</code>: 表示时间线上的一个特定时刻，通常与UTC（协调世界时）进行交互。</li><li><code>LocalDate</code>: 表示一个日期，不包含时间部分，例如年、月、日。</li><li><code>LocalDateTime</code>: 表示日期和时间，不考虑时区的影响。</li><li><code>LocalTime</code>: 表示一天中的特定时间，不包含日期部分。</li></ul><p>空间计量单位：</p><ul><li><code>Period</code>: 表示日期之间的间隔，例如年、月、日之间的差距。</li><li><code>Year</code>, <code>YearMonth</code>, <code>MonthDay</code>: 表示年份、年月和月日的对象。</li><li><code>ZoneId</code>, <code>ZoneOffset</code>: 表示时区的对象，用于处理时区相关的操作。</li></ul><p>大小计量单位，用于表示数据大小或容量。这些计量单位用于处理文件大小、网络传输速度等方面的操作。</p><ol><li><code>DataSize</code>: 表示数据大小的对象，可以表示字节、千字节、兆字节、吉字节等。</li><li><code>ByteSizeUnit</code>: 表示字节单位的枚举，包括<code>BYTES</code>、<code>KILOBYTES</code>、<code>MEGABYTES</code>、<code>GIGABYTES</code>等。</li><li><code>DataUnit</code>: 表示数据单位的枚举，包括<code>BYTES</code>、<code>KB</code>、<code>MB</code>、<code>GB</code>等。</li><li><code>MemoryUnit</code>: 表示内存单位的枚举，包括<code>BYTES</code>、<code>KILOBYTES</code>、<code>MEGABYTES</code>、<code>GIGABYTES</code>等。</li></ol><p>你可以使用这些大小计量单位来处理文件大小、数据容量等相关的操作。</p><p>在Spring Boot中，你可以使用这些时间和空间计量单位来处理日期、时间和持续时间的操作。此外，Spring Boot还提供了对应的类型转换器，可以方便地将这些计量单位与配置文件中的属性进行绑定和转换。</p><p>例如，你可以在<code>application.properties</code>或<code>application.yaml</code>文件中定义一个属性，并将其绑定到<code>Duration</code>、<code>DataSize</code>类型的字段上：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">myapp.server-time-out</span>: <span class="hljs-string">3</span><br><span class="hljs-attr">myapp.data-size</span>: <span class="hljs-string">10</span><br></code></pre></td></tr></table></figure><p>然后，你可以在Spring Boot的配置类中使用<code>@Value</code>注解或<code>@ConfigurationProperties</code>注解将该属性绑定到<code>Duration</code>、<code>DataSize</code>类型的字段上：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@ConfigurationProperties(&quot;myapp&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyAppProperties</span> &#123;<br>    <br>    <span class="hljs-meta">@DurationUnit(ChronoUnit.HOURS)</span>  <span class="hljs-comment">// 代表以小时为单位</span><br>    <span class="hljs-keyword">private</span> Duration serverTimeOut;  <span class="hljs-comment">// PT3H</span><br><br>    <span class="hljs-meta">@DataSizeUnit(DataUnit.BYTES)</span>  <span class="hljs-comment">// 数据存储单位  代表byte</span><br>    <span class="hljs-keyword">private</span> DataSize dataSize;  <span class="hljs-comment">// 10B</span><br><br>    <span class="hljs-comment">// Getter and Setter</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4、数据校验"><a href="#4、数据校验" class="headerlink" title="4、数据校验"></a>4、数据校验</h3><p>在Spring Boot中，可以使用Java Bean验证（Java Bean Validation）进行数据校验。Java Bean验证是一种基于注解的验证方式，可以轻松地对Java对象的字段、方法和参数进行验证。</p><h4 id="1、步骤"><a href="#1、步骤" class="headerlink" title="1、步骤"></a>1、步骤</h4><p>下面是使用Java Bean验证进行数据校验的步骤：</p><ol><li><p>添加依赖：确保在项目的构建文件（如<code>pom.xml</code>）中添加以下依赖，以包含Java Bean验证相关的库：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>创建需要进行数据校验的Java Bean类，并在需要验证的字段上添加相应的验证注解。例如，我们创建一个名为<code>User</code>的类，其中包含了需要验证的字段：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span> &#123;<br>    <span class="hljs-meta">@NotNull(message = &quot;用户名不能为空&quot;)</span><br>    <span class="hljs-meta">@Size(min = 3, max = 20, message = &quot;用户名长度必须在3到20个字符之间&quot;)</span><br>    <span class="hljs-keyword">private</span> String username;<br><br>    <span class="hljs-meta">@NotEmpty(message = &quot;邮箱不能为空&quot;)</span><br>    <span class="hljs-meta">@Email(message = &quot;邮箱格式不正确&quot;)</span><br>    <span class="hljs-keyword">private</span> String email;<br><br>    <span class="hljs-comment">// Getters and Setters</span><br>    <span class="hljs-comment">// ...</span><br>&#125;<br></code></pre></td></tr></table></figure><p>在上述示例中，我们使用了<code>javax.validation.constraints</code>包下的注解来对<code>username</code>和<code>email</code>字段进行验证。<code>@NotNull</code>表示字段不能为空，<code>@Size</code>表示字段长度在指定范围内，<code>@NotEmpty</code>表示字段不能为空字符串，<code>@Email</code>表示字段必须是有效的电子邮件格式。</p></li><li><p>在需要进行数据校验的地方，如控制器方法中，使用<code>@Valid</code>注解对需要验证的Java Bean参数进行注解。例如，我们在控制器中使用<code>@Valid</code>注解验证<code>User</code>对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserController</span> &#123;<br>    <span class="hljs-meta">@PostMapping(&quot;/users&quot;)</span><br>    <span class="hljs-keyword">public</span> ResponseEntity&lt;String&gt; <span class="hljs-title function_">createUser</span><span class="hljs-params">(<span class="hljs-meta">@Valid</span> <span class="hljs-meta">@RequestBody</span> User user)</span> &#123;<br>        <span class="hljs-comment">// 处理用户创建逻辑</span><br>        <span class="hljs-keyword">return</span> ResponseEntity.ok(<span class="hljs-string">&quot;User created successfully&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在上述示例中，<code>@Valid</code>注解应用于<code>User</code>对象参数，表示对该对象进行数据验证。</p></li><li><p>处理验证错误：如果数据验证失败，Spring Boot会自动返回相应的验证错误信息。你可以使用<code>BindingResult</code>参数来获取验证结果并进行处理。例如，在控制器方法中添加<code>BindingResult</code>参数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserController</span> &#123;<br>    <span class="hljs-meta">@PostMapping(&quot;/users&quot;)</span><br>    <span class="hljs-keyword">public</span> ResponseEntity&lt;String&gt; <span class="hljs-title function_">createUser</span><span class="hljs-params">(<span class="hljs-meta">@Valid</span> <span class="hljs-meta">@RequestBody</span> User user, BindingResult bindingResult)</span> &#123;<br>        <span class="hljs-keyword">if</span> (bindingResult.hasErrors()) &#123;<br>            <span class="hljs-comment">// 处理验证错误</span><br>            <span class="hljs-keyword">return</span> ResponseEntity.badRequest().body(<span class="hljs-string">&quot;Validation error: &quot;</span> + bindingResult.getFieldError().getDefaultMessage());<br>        &#125;<br>        <span class="hljs-comment">// 处理用户创建逻辑</span><br>        <span class="hljs-keyword">return</span> ResponseEntity.ok(<span class="hljs-string">&quot;User created successfully&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在上述示例中，如果数据验证失败，我们从<code>BindingResult</code>中获取第一个验证错误的默认消息，并返回相应的错误响应。</p></li></ol><p>通过以上步骤，你可以在Spring Boot应用程序中使用Java Bean验证进行数据校验。当请求到达控制器时，Spring Boot会自动根据注解配置对Java Bean对象的字段进行验证，并返回</p><h4 id="2、常见的数据校验注解"><a href="#2、常见的数据校验注解" class="headerlink" title="2、常见的数据校验注解"></a>2、常见的数据校验注解</h4><blockquote><ol><li><code>@NotNull</code>: 用于验证属性值不能为null。它可以应用于任何类型的字段。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@NotNull</span><br>&gt;<span class="hljs-keyword">private</span> String username;  <span class="hljs-comment">//如果username字段为null，验证将失败</span><br></code></pre></td></tr></table></figure><ol start="2"><li><code>@NotBlank</code>: 用于验证字符串属性值不能为空且不能只包含空格字符。它只能应用于字符串类型的字段。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@NotBlank</span><br>&gt;<span class="hljs-keyword">private</span> String fullName;  <span class="hljs-comment">// 如果fullName字段为null、空字符串或只包含空格字符，验证将失败。</span><br></code></pre></td></tr></table></figure><ol start="3"><li><code>@Min</code>: 用于验证数字属性值必须大于等于指定的最小值。它可以应用于数字类型的字段。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@Min(18)</span><br>&gt;<span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;  <span class="hljs-comment">// age字段的值必须大于等于18。如果age小于18，验证将失败。</span><br></code></pre></td></tr></table></figure><ol start="4"><li><code>@Max</code>: 用于验证数字属性值必须小于等于指定的最大值。它可以应用于数字类型的字段。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@Max(100)</span><br>&gt;<span class="hljs-keyword">private</span> <span class="hljs-type">int</span> score;  <span class="hljs-comment">// score字段的值必须小于等于100。如果score大于100，验证将失败。</span><br></code></pre></td></tr></table></figure><ol start="5"><li><code>@DecimalMin</code>: 用于验证数字属性值必须大于等于指定的最小值，支持浮点数。它可以应用于数字类型的字段。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@DecimalMin(&quot;0.01&quot;)</span><br>&gt;<span class="hljs-keyword">private</span> <span class="hljs-type">double</span> price;  <span class="hljs-comment">// price字段的值必须大于等于0.01。如果price小于0.01，验证将失败。</span><br></code></pre></td></tr></table></figure><ol start="6"><li><code>@DecimalMax</code>: 用于验证数字属性值必须小于等于指定的最大值，支持浮点数。它可以应用于数字类型的字段。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@DecimalMax(&quot;100.00&quot;)</span><br>&gt;<span class="hljs-keyword">private</span> <span class="hljs-type">double</span> amount;  <span class="hljs-comment">// amount字段的值必须小于等于100.00。如果amount大于100.00，验证将失败。</span><br></code></pre></td></tr></table></figure><ol start="7"><li><code>@Pattern</code>: 用于验证属性值必须符合指定的正则表达式。它可以应用于字符串类型的字段。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@Pattern(regexp = &quot;[A-Za-z0-9]+&quot;)</span><br>&gt;<span class="hljs-keyword">private</span> String code;  <span class="hljs-comment">// code字段的值必须只包含字母和数字。如果code不符合正则表达式的要求，验证将失败。</span><br></code></pre></td></tr></table></figure><ol start="8"><li><code>@Range</code>: 用于验证数字或字符串属性值必须在指定的范围内。它可以应用于数字或字符串类型的字段。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@Range(min = 1, max = 100)</span><br>&gt;<span class="hljs-keyword">private</span> <span class="hljs-type">int</span> quantity;  <span class="hljs-comment">// quantity字段的值必须大于等于1且小于等于100。如果quantity小于1或大于100，验证将失败。</span><br></code></pre></td></tr></table></figure><ol start="9"><li><code>@Digits</code>: 用于验证数字属性值的整数部分和小数部分的位数不能超过指定的值。它可以应用于数字类型的字段。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@Digits(integer = 3, fraction = 2)</span><br>&gt;<span class="hljs-keyword">private</span> BigDecimal amount;  <span class="hljs-comment">// amount字段的整数部分最多可以有3位，小数部分最多可以有2位。如果amount的位数超过限制，验证将失败。</span><br></code></pre></td></tr></table></figure><ol start="10"><li><code>@AssertTrue</code>: 用于验证属性值必须为true。它可以应用于boolean类型的字段。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@AssertTrue</span><br>&gt;<span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> agreed;  <span class="hljs-comment">// agreed字段的值必须为true。如果agreed为false，验证将失败。</span><br></code></pre></td></tr></table></figure><ol start="11"><li><code>@AssertFalse</code>: 用于验证属性值必须为false。它可以应用于boolean类型的字段。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@AssertFalse</span><br>&gt;<span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> expired;  <span class="hljs-comment">// expired字段的值必须为false。如果`expired`为true，验证将失败。</span><br></code></pre></td></tr></table></figure><ol start="12"><li>@NotEmpty: 用于验证一个字符串或集合不能为空。它可以应用于字符串类型的字段、集合或数组。如果被注解的字段为null或空字符串（””），则验证失败。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@NotEmpty</span><br>&gt;<span class="hljs-keyword">private</span> String username;  <span class="hljs-comment">// 如果username字段为null或空字符串，验证将失败。</span><br></code></pre></td></tr></table></figure><ol start="13"><li>@Email: 用于验证一个字符串是否符合电子邮件的格式。被注解的字段必须是一个字符串类型。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@Email</span><br>&gt;<span class="hljs-keyword">private</span> String email;  <span class="hljs-comment">// 如果email字段的值不符合电子邮件的格式（例如，缺少@符号或域名不合法），则验证将失败。</span><br></code></pre></td></tr></table></figure><ol start="14"><li>@Size: 用于验证一个字符串、集合或数组的大小是否在指定范围内。它可以用于字符串、集合或数组类型的字段上。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@Size(min = 1, max = 10)</span><br>&gt;<span class="hljs-keyword">private</span> String password;  <span class="hljs-comment">// password字段的长度必须在1到10之间（包括1和10）。如果password的长度小于1或大于10，验证将失败。</span><br></code></pre></td></tr></table></figure></blockquote><h4 id="3、BindingResult-类"><a href="#3、BindingResult-类" class="headerlink" title="3、BindingResult 类"></a>3、<code>BindingResult</code> 类</h4><blockquote><p><code>BindingResult</code> 是 Spring 框架中用于处理数据绑定和校验结果的类。它作为控制器方法的参数之一，在数据绑定和校验过程中收集和封装校验错误信息。</p><p>当进行数据绑定和校验时，如果校验失败，Spring 框架会将校验错误信息存储在 <code>BindingResult</code> 对象中，并将其作为参数传递给控制器方法。</p><p><code>BindingResult</code> 提供了以下主要功能：</p><ol><li>获取校验错误信息：通过 <code>BindingResult</code>，可以获取校验过程中的错误信息。这些错误信息包括字段级别的错误、全局错误等。你可以通过 <code>hasErrors()</code> 方法检查是否有错误，然后使用 <code>getFieldErrors()</code>、<code>getGlobalErrors()</code> 方法获取具体的错误信息列表。</li><li>处理校验错误：<code>BindingResult</code> 提供了一些方法用于处理校验错误。例如，你可以通过 <code>rejectValue()</code> 方法手动添加字段级别的错误信息，或者通过 <code>reject()</code> 方法添加全局错误信息。</li><li>控制流程处理：根据校验结果，你可以根据需要进行相应的流程处理。例如，如果有校验错误，你可以决定如何处理错误，返回适当的错误响应或进行其他的业务逻辑处理。</li></ol><p>以下是一个简单的示例，展示了如何在控制器方法中使用 <code>BindingResult</code> 处理校验错误：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@RestController</span><br>&gt;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserController</span> &#123;<br>&gt;<span class="hljs-meta">@PostMapping(&quot;/users&quot;)</span><br>&gt;<span class="hljs-keyword">public</span> ResponseEntity&lt;String&gt; <span class="hljs-title function_">createUser</span><span class="hljs-params">(<span class="hljs-meta">@Valid</span> <span class="hljs-meta">@RequestBody</span> User user, BindingResult bindingResult)</span> &#123;<br>   <span class="hljs-keyword">if</span> (bindingResult.hasErrors()) &#123;<br>       <span class="hljs-comment">// 处理校验错误</span><br>       List&lt;FieldError&gt; fieldErrors = bindingResult.getFieldErrors();<br>       <span class="hljs-comment">// 返回错误响应或进行其他处理</span><br>       <span class="hljs-keyword">return</span> ResponseEntity.badRequest().body(<span class="hljs-string">&quot;Validation failed&quot;</span>);<br>   &#125;<br><br>   <span class="hljs-comment">// 校验通过，处理用户创建逻辑</span><br>   <span class="hljs-keyword">return</span> ResponseEntity.ok(<span class="hljs-string">&quot;User created successfully&quot;</span>);<br>&gt;&#125;<br>&gt;&#125;<br></code></pre></td></tr></table></figure><p>在上述示例中，我们在控制器方法的参数中使用了 <code>@Valid</code> 注解对 <code>User</code> 对象进行校验，并将 <code>BindingResult</code> 参数添加到方法中。如果校验失败，我们可以根据 <code>BindingResult</code> 对象中的错误信息进行相应处理。</p><p>总而言之，<code>BindingResult</code> 类是 Spring 框架中用于收集和处理数据绑定和校验结果的重要类。通过它，你可以获取和处理校验错误信息，从而实现对校验结果的控制和处理。</p></blockquote><h3 id="5、yaml注意事项"><a href="#5、yaml注意事项" class="headerlink" title="5、yaml注意事项"></a>5、yaml注意事项</h3><ul><li>如果是int类型的数据在yaml中编写，推荐使用双引号包裹</li></ul><h2 id="3、测试-1"><a href="#3、测试-1" class="headerlink" title="3、测试"></a>3、测试</h2><h3 id="1、临时加载配置属性"><a href="#1、临时加载配置属性" class="headerlink" title="1、临时加载配置属性"></a>1、临时加载配置属性</h3><ul><li><p>在启动测试环境时可以通过properties参数设置测试环境专用的属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 使用properties 属性可以为当前测试用例添加临时的属性配置</span><br><span class="hljs-meta">@SpringBootTest(properties = &#123;&quot;test.prop=testValue1&quot;&#125;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PropertiesAndArgsTest</span> &#123;<br><br>    <span class="hljs-meta">@Value(&quot;$&#123;test.prop&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String msg;<br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testProperties</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;msg = &quot;</span> + msg);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>优势：比多环境开发中的测试环境影响范围更小，仅对当前测试类有效</li></ul></li><li><p>在启动测试环境时也可以通过args参数设置测试环境专用的传入参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 使用args 属性可以为当前测试用例添加临时的命令行参数</span><br><span class="hljs-meta">@SpringBootTest(args = &#123;&quot;--test.prop=testValue2&quot;&#125;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PropertiesAndArgsTest</span> &#123;<br><br>    <span class="hljs-meta">@Value(&quot;$&#123;test.prop&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String msg;<br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testProperties</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;msg = &quot;</span> + msg);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><p>properties属性 和 args属性选一个用就行</p><h3 id="2、临时加载Bean"><a href="#2、临时加载Bean" class="headerlink" title="2、临时加载Bean"></a>2、临时加载Bean</h3><p>通过<code>@Import</code>注解，你可以将指定的bean或配置类加载到测试环境中，以供测试使用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-meta">@Import(&#123;MyBean.class, MyConfig.class&#125;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyTest</span> &#123;<br>    <span class="hljs-comment">// 测试逻辑...</span><br>&#125;<br></code></pre></td></tr></table></figure><p>在上述示例中，<code>@Import</code>注解用于加载<code>MyBean</code>和<code>MyConfig</code>到测试环境中。<code>MyBean</code>可以是一个普通的Bean类，<code>MyConfig</code>可以是一个配置类，它定义了需要加载的bean。</p><p>使用<code>@Import</code>注解时，你可以加载多个bean或配置类，只需在<code>@Import</code>注解的值中指定它们。被加载的bean可以在测试中进行注入和使用。</p><h3 id="3、Web环境模拟测试"><a href="#3、Web环境模拟测试" class="headerlink" title="3、Web环境模拟测试"></a>3、Web环境模拟测试</h3><h4 id="1、相关知识"><a href="#1、相关知识" class="headerlink" title="1、相关知识"></a>1、相关知识</h4><h5 id="1、-SpringBootTest注解中的webEnvironment属性"><a href="#1、-SpringBootTest注解中的webEnvironment属性" class="headerlink" title="1、@SpringBootTest注解中的webEnvironment属性"></a>1、<code>@SpringBootTest</code>注解中的<code>webEnvironment</code>属性</h5><blockquote><p>在<code>@SpringBootTest</code>注解中的<code>webEnvironment</code>属性有四个可选值：</p><ol><li><code>WebEnvironment.MOCK</code>：</li></ol><ul><li><p>说明：模拟的Web环境，不启动真实的Web服务器。适用于针对控制器（Controller）层或服务层的单元测试，可以使用<code>MockMvc</code>等工具模拟HTTP请求和验证响应。</p></li><li><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.MOCK)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyMockTest</span> &#123;<br>    <span class="hljs-comment">// 测试逻辑...</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ul><ol start="2"><li><code>WebEnvironment.RANDOM_PORT</code>：</li></ol><ul><li><p>说明：真实的Web环境，启动一个随机端口的Web服务器。适用于进行集成测试，可以通过HTTP客户端发送真实的HTTP请求，并验证整个请求-响应周期。</p></li><li><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyIntegrationTest</span> &#123;<br>    <span class="hljs-comment">// 测试逻辑...</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ul><ol start="3"><li><code>WebEnvironment.DEFINED_PORT</code>：</li></ol><ul><li><p>说明：真实的Web环境，绑定到预定义的端口（通常为默认的HTTP端口，如80或8080）。适用于进行集成测试，特别是与外部系统或其他服务进行集成的情况。</p></li><li><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyDefinedPortTest</span> &#123;<br>    <span class="hljs-comment">// 测试逻辑...</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ul><ol start="4"><li><code>WebEnvironment.NONE</code>：</li></ol><ul><li><p>说明：非Web环境，不启动Web服务器。适用于纯粹的单元测试，不需要涉及到Web组件。</p></li><li><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.NONE)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyUnitTest</span> &#123;<br>    <span class="hljs-comment">// 测试逻辑...</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ul></blockquote><h5 id="2、-AutoConfigureMockMvc注解"><a href="#2、-AutoConfigureMockMvc注解" class="headerlink" title="2、@AutoConfigureMockMvc注解"></a>2、<code>@AutoConfigureMockMvc</code>注解</h5><blockquote><p><code>@AutoConfigureMockMvc</code>是一个Spring Boot测试注解，用于自动配置<code>MockMvc</code>实例。</p><p>在进行Spring Boot应用程序的集成测试时，使用<code>@AutoConfigureMockMvc</code>注解可以方便地自动配置<code>MockMvc</code>实例，而无需手动创建。它会自动将<code>MockMvc</code>注入到测试类中的<code>MockMvc</code>字段中，使您可以直接在测试方法中使用。</p><p><code>MockMvc</code>是一个用于模拟和测试Spring MVC应用程序的类，可以模拟HTTP请求和响应，以及验证控制器的行为和结果。通过使用<code>@AutoConfigureMockMvc</code>注解，您无需手动创建<code>MockMvc</code>实例，而是让Spring Boot自动进行配置和注入。</p><p>以下是一个示例测试类，展示了如何使用<code>@AutoConfigureMockMvc</code>注解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-keyword">import</span> org.junit.jupiter.api.Test;<br>&gt;<span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br>&gt;<span class="hljs-keyword">import</span> org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;<br>&gt;<span class="hljs-keyword">import</span> org.springframework.boot.test.context.SpringBootTest;<br>&gt;<span class="hljs-keyword">import</span> org.springframework.test.web.servlet.MockMvc;<br>&gt;<span class="hljs-keyword">import</span> org.springframework.test.web.servlet.request.MockMvcRequestBuilders;<br>&gt;<span class="hljs-keyword">import</span> org.springframework.test.web.servlet.result.MockMvcResultMatchers;<br><br>&gt;<span class="hljs-meta">@SpringBootTest</span><br>&gt;<span class="hljs-meta">@AutoConfigureMockMvc</span><br>&gt;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyControllerTest</span> &#123;<br><br>&gt;<span class="hljs-meta">@Autowired</span><br>&gt;<span class="hljs-keyword">private</span> MockMvc mockMvc;<br><br>&gt;<span class="hljs-meta">@Test</span><br>&gt;<span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testMyEndpoint</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>&gt;mockMvc.perform(MockMvcRequestBuilders.get(<span class="hljs-string">&quot;/my-endpoint&quot;</span>))<br>     .andExpect(MockMvcResultMatchers.status().isOk())<br>     .andExpect(MockMvcResultMatchers.jsonPath(<span class="hljs-string">&quot;$.message&quot;</span>).value(<span class="hljs-string">&quot;Hello&quot;</span>));<br>&gt;&#125;<br>&gt;&#125;<br></code></pre></td></tr></table></figure><p>在上述示例中，我们使用了<code>@SpringBootTest</code>注解来启动整个应用程序上下文，并使用<code>@AutoConfigureMockMvc</code>注解自动配置<code>MockMvc</code>实例。<code>MockMvc</code>实例被自动注入到<code>mockMvc</code>字段中，我们可以在测试方法中使用它来模拟和验证控制器的行为。</p><p>总结一下，<code>@AutoConfigureMockMvc</code>是一个Spring Boot测试注解，用于自动配置<code>MockMvc</code>实例。它简化了测试中<code>MockMvc</code>实例的创建和配置过程，使您可以更方便地进行Spring MVC应用程序的集成测试。</p></blockquote><h5 id="3、MockMvc对象"><a href="#3、MockMvc对象" class="headerlink" title="3、MockMvc对象"></a>3、MockMvc对象</h5><blockquote><ol><li><p>使用<code>MockMvc</code>对象执行各种类型的HTTP请求非常简单。<code>MockMvc</code>提供了一系列方法，用于构建和执行不同类型的请求。以下是一些常见的HTTP请求示例：</p></li><li><p>执行GET请求：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">mockMvc.perform(MockMvcRequestBuilders.get(<span class="hljs-string">&quot;/api/users&quot;</span>))<br>       .andExpect(MockMvcResultMatchers.status().isOk());<br></code></pre></td></tr></table></figure><p>上述代码执行一个GET请求到”&#x2F;api&#x2F;users”接口，并验证响应的状态码是否为200。</p></li><li><p>执行POST请求：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">mockMvc.perform(MockMvcRequestBuilders.post(<span class="hljs-string">&quot;/api/users&quot;</span>)<br>       .contentType(MediaType.APPLICATION_JSON)<br>       .content(<span class="hljs-string">&quot;&#123; \&quot;name\&quot;: \&quot;John\&quot;, \&quot;email\&quot;: \&quot;john@example.com\&quot; &#125;&quot;</span>))<br>       .andExpect(MockMvcResultMatchers.status().isOk());<br></code></pre></td></tr></table></figure><p>上述代码执行一个POST请求到”&#x2F;api&#x2F;users”接口，并传递JSON数据作为请求体。通过<code>contentType()</code>方法设置请求的Content-Type，并使用<code>content()</code>方法设置请求的内容。</p></li><li><p>执行PUT请求：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">mockMvc.perform(MockMvcRequestBuilders.put(<span class="hljs-string">&quot;/api/users/&#123;id&#125;&quot;</span>, <span class="hljs-number">1</span>)<br>       .contentType(MediaType.APPLICATION_JSON)<br>       .content(<span class="hljs-string">&quot;&#123; \&quot;name\&quot;: \&quot;John Doe\&quot;, \&quot;email\&quot;: \&quot;john.doe@example.com\&quot; &#125;&quot;</span>))<br>       .andExpect(MockMvcResultMatchers.status().isOk());<br></code></pre></td></tr></table></figure><p>上述代码执行一个PUT请求到”&#x2F;api&#x2F;users&#x2F;{id}”接口，并传递路径参数和JSON数据作为请求体。</p></li><li><p>执行DELETE请求：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">mockMvc.perform(MockMvcRequestBuilders.delete(<span class="hljs-string">&quot;/api/users/&#123;id&#125;&quot;</span>, <span class="hljs-number">1</span>))<br>       .andExpect(MockMvcResultMatchers.status().isOk());<br></code></pre></td></tr></table></figure><p>上述代码执行一个DELETE请求到”&#x2F;api&#x2F;users&#x2F;{id}”接口，并传递路径参数。</p></li></ol><p>这只是一些常见的HTTP请求示例，<code>MockMvc</code>还提供了其他方法和选项，以满足更复杂的测试需求。您可以根据具体的测试场景和要求，选择合适的方法和参数来构建和执行HTTP请求，并使用<code>andExpect()</code>方法对响应进行验证。</p><ol start="2"><li><p>使用<code>MockMvc</code>对象，您可以使用<code>andExpect()</code>方法对响应结果进行验证。<code>andExpect()</code>方法提供了多种断言和匹配器，用于验证响应的状态码、内容、头部等。以下是一些常见的响应结果验证示例：</p></li><li><p>验证状态码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">mockMvc.perform(MockMvcRequestBuilders.get(<span class="hljs-string">&quot;/api/users&quot;</span>))<br>       .andExpect(MockMvcResultMatchers.status().isOk());<br></code></pre></td></tr></table></figure><p>上述代码验证响应的状态码是否为200（<code>HttpStatus.OK</code>）。</p></li><li><p>验证响应内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">mockMvc.perform(MockMvcRequestBuilders.get(<span class="hljs-string">&quot;/api/users/1&quot;</span>))<br>       .andExpect(MockMvcResultMatchers.content().json(<span class="hljs-string">&quot;&#123; \&quot;id\&quot;: 1, \&quot;name\&quot;: \&quot;John\&quot;, \&quot;email\&quot;: \&quot;john@example.com\&quot; &#125;&quot;</span>));<br></code></pre></td></tr></table></figure><p>上述代码验证响应的内容是否与指定的JSON字符串匹配。</p></li><li><p>验证响应头部：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">mockMvc.perform(MockMvcRequestBuilders.get(<span class="hljs-string">&quot;/api/users&quot;</span>))<br>       .andExpect(MockMvcResultMatchers.header().string(<span class="hljs-string">&quot;Content-Type&quot;</span>, <span class="hljs-string">&quot;application/json&quot;</span>));<br></code></pre></td></tr></table></figure><p>上述代码验证响应的<code>Content-Type</code>头部是否为<code>application/json</code>。</p></li><li><p>验证JSON响应中的字段值：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">mockMvc.perform(MockMvcRequestBuilders.get(<span class="hljs-string">&quot;/api/users/1&quot;</span>))<br>       .andExpect(MockMvcResultMatchers.jsonPath(<span class="hljs-string">&quot;$.name&quot;</span>).value(<span class="hljs-string">&quot;John&quot;</span>));<br></code></pre></td></tr></table></figure><p>上述代码验证JSON响应中的<code>name</code>字段的值是否为<code>John</code>。</p></li><li><p>验证重定向：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">mockMvc.perform(MockMvcRequestBuilders.get(<span class="hljs-string">&quot;/login&quot;</span>))<br>       .andExpect(MockMvcResultMatchers.status().is3xxRedirection())<br>       .andExpect(MockMvcResultMatchers.redirectedUrl(<span class="hljs-string">&quot;/home&quot;</span>));<br></code></pre></td></tr></table></figure><p>上述代码验证响应是否为重定向，并验证重定向的URL是否为<code>/home</code>。</p></li></ol><p>您可以根据需要使用适当的<code>andExpect()</code>方法和匹配器来验证响应结果。<code>MockMvc</code>提供了丰富的验证选项，以确保应用程序的行为和结果符合预期。</p><ol start="3"><li><p>使用<code>MockMvc</code>对象可以模拟会话和认证，以便在测试中进行相应的验证。下面是使用<code>MockMvc</code>模拟会话和认证的示例：</p></li><li><p>模拟会话： 若要模拟会话，您可以使用<code>session()</code>方法将一个<code>MockHttpSession</code>对象传递给请求。以下是一个示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">MockHttpSession</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MockHttpSession</span>();<br>session.setAttribute(<span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;john&quot;</span>);<br><br>mockMvc.perform(MockMvcRequestBuilders.get(<span class="hljs-string">&quot;/api/orders&quot;</span>).session(session))<br>       .andExpect(MockMvcResultMatchers.status().isOk());<br></code></pre></td></tr></table></figure><p>在上述示例中，我们创建了一个<code>MockHttpSession</code>对象并将其设置为请求的会话。然后，我们执行GET请求<code>/api/orders</code>，并验证响应的状态码是否为200。</p></li><li><p>模拟用户认证： 若要模拟用户认证，您可以使用<code>with()</code>方法结合<code>MockMvcRequestPostProcessors.user()</code>来指定用户的身份信息和角色。以下是一个示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">mockMvc.perform(MockMvcRequestBuilders.get(<span class="hljs-string">&quot;/api/orders&quot;</span>).with(user(<span class="hljs-string">&quot;john&quot;</span>).password(<span class="hljs-string">&quot;password&quot;</span>).roles(<span class="hljs-string">&quot;USER&quot;</span>)))<br>       .andExpect(MockMvcResultMatchers.status().isOk());<br></code></pre></td></tr></table></figure><p>在上述示例中，我们使用<code>with()</code>方法和<code>user()</code>方法指定了一个名为”john”、密码为”password”、角色为”USER”的用户进行请求。然后，我们执行GET请求<code>/api/orders</code>，并验证响应的状态码是否为200。</p></li></ol><p>通过使用<code>session()</code>方法和<code>with()</code>方法，您可以在测试中模拟会话和认证，以验证受限制的端点和受保护的功能的行为和结果。这样可以确保应用程序在不同的用户身份和会话状态下的行为是正确的。</p></blockquote><h4 id="2、例子"><a href="#2、例子" class="headerlink" title="2、例子"></a>2、例子</h4><h5 id="1、发送虚拟请求"><a href="#1、发送虚拟请求" class="headerlink" title="1、发送虚拟请求"></a>1、发送虚拟请求</h5><ul><li>、首先加上<code>@AutoConfigureMockMvc</code>注解，开启虚拟MVC的调用；在<code>@SpringBootTest</code>注解中开启<code>webEnvironment</code>属性</li><li>2、然后注入<code>MockMVC</code>对象</li><li>3、通过<code>mockMvc.perform(MockMvcRequestBuilders.get(&quot;URI&quot;)/post(&quot;URI&quot;)/put(&quot;URI&quot;)/delete(&quot;URI&quot;))</code>方法执行</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)</span>  <span class="hljs-comment">//随机端口</span><br><span class="hljs-meta">@AutoConfigureMockMvc</span>  <span class="hljs-comment">//开启虚拟MVC的调用</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WebTest</span> &#123;<br><br>    <span class="hljs-comment">// 方式1，注入MockMvc</span><br><span class="hljs-comment">//    @Autowired</span><br><span class="hljs-comment">//    private MockMvc mockMvc;</span><br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testWeb</span><span class="hljs-params">(<span class="hljs-meta">@Autowired</span> MockMvc mockMvc)</span> <span class="hljs-keyword">throws</span> Exception &#123;  <span class="hljs-comment">//方式2，将MockMvc放到参数中</span><br>        <span class="hljs-type">MockHttpServletRequestBuilder</span> <span class="hljs-variable">builder</span> <span class="hljs-operator">=</span> MockMvcRequestBuilders.get(<span class="hljs-string">&quot;/books&quot;</span>);  <span class="hljs-comment">//模拟虚拟的http请求</span><br>        mockMvc.perform(builder);  <span class="hljs-comment">//执行</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="2、匹配响应执行状态"><a href="#2、匹配响应执行状态" class="headerlink" title="2、匹配响应执行状态"></a>2、匹配响应执行状态</h5><ul><li>通过<code>MockMvcResultMatchers.status()</code>中的一系列Http状态与模拟的请求的状态进行匹配</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">testStatus</span><span class="hljs-params">(<span class="hljs-meta">@Autowired</span> MockMvc mockMvc)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>    <span class="hljs-type">MockHttpServletRequestBuilder</span> <span class="hljs-variable">builder</span> <span class="hljs-operator">=</span> MockMvcRequestBuilders.get(<span class="hljs-string">&quot;/books1&quot;</span>);<br>    <span class="hljs-type">ResultActions</span> <span class="hljs-variable">action</span> <span class="hljs-operator">=</span> mockMvc.perform(builder);<br><br>    <span class="hljs-comment">//设定预期值 与真实值进行比较</span><br>    <span class="hljs-type">StatusResultMatchers</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> MockMvcResultMatchers.status();  <span class="hljs-comment">//当前模拟运行的状态</span><br>    <span class="hljs-type">ResultMatcher</span> <span class="hljs-variable">ok</span> <span class="hljs-operator">=</span> status.isOk();  <span class="hljs-comment">// 预期值  200</span><br><br>    action.andExpect(ok);  <span class="hljs-comment">//添加预期值到本次调用过程中进行匹配</span><br>&#125;<br></code></pre></td></tr></table></figure><h5 id="3、匹配响应体"><a href="#3、匹配响应体" class="headerlink" title="3、匹配响应体"></a>3、匹配响应体</h5><ul><li>通过<code>MockMvcResultMatchers.content()</code>设置预期的值与模拟请求的请求结果进行匹配</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">testBody</span><span class="hljs-params">(<span class="hljs-meta">@Autowired</span> MockMvc mockMvc)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>    <span class="hljs-type">MockHttpServletRequestBuilder</span> <span class="hljs-variable">builder</span> <span class="hljs-operator">=</span> MockMvcRequestBuilders.get(<span class="hljs-string">&quot;/books&quot;</span>);<br>    <span class="hljs-type">ResultActions</span> <span class="hljs-variable">action</span> <span class="hljs-operator">=</span> mockMvc.perform(builder);<br><br>    <span class="hljs-comment">//定义本次调用的预期值</span><br>    <span class="hljs-type">ContentResultMatchers</span> <span class="hljs-variable">content</span> <span class="hljs-operator">=</span> MockMvcResultMatchers.content();<br>    <span class="hljs-type">ResultMatcher</span> <span class="hljs-variable">body</span> <span class="hljs-operator">=</span> content.json(<span class="hljs-string">&quot;&#123;\&quot;id\&quot;:1,\&quot;name\&quot;:\&quot;spriangboot\&quot;,\&quot;type\&quot;:\&quot;springbo2ot\&quot;,\&quot;description\&quot;:\&quot;springboot\&quot;&#125;&quot;</span>);<br><br>    action.andExpect(body);  <span class="hljs-comment">// 匹配</span><br>&#125;<br></code></pre></td></tr></table></figure><h5 id="4、匹配响应头"><a href="#4、匹配响应头" class="headerlink" title="4、匹配响应头"></a>4、匹配响应头</h5><ul><li>通过<code>MockMvcResultMatchers.header()</code>设置预期的contentType与模拟请求的请求头进行匹配</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">testContentType</span><span class="hljs-params">(<span class="hljs-meta">@Autowired</span> MockMvc mockMvc)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>    <span class="hljs-type">MockHttpServletRequestBuilder</span> <span class="hljs-variable">builder</span> <span class="hljs-operator">=</span> MockMvcRequestBuilders.get(<span class="hljs-string">&quot;/books&quot;</span>);<br>    <span class="hljs-type">ResultActions</span> <span class="hljs-variable">action</span> <span class="hljs-operator">=</span> mockMvc.perform(builder);<br><br>    <span class="hljs-comment">//定义本次调用的预期值</span><br>    <span class="hljs-type">HeaderResultMatchers</span> <span class="hljs-variable">header</span> <span class="hljs-operator">=</span> MockMvcResultMatchers.header();<br>    <span class="hljs-type">ResultMatcher</span> <span class="hljs-variable">contentType</span> <span class="hljs-operator">=</span> header.string(<span class="hljs-string">&quot;Content-Type&quot;</span>, <span class="hljs-string">&quot;application/json&quot;</span>);<br><br>    action.andExpect(contentType);  <span class="hljs-comment">// 匹配</span><br>&#125;<br></code></pre></td></tr></table></figure><h5 id="5、完整写法"><a href="#5、完整写法" class="headerlink" title="5、完整写法"></a>5、完整写法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br>   <span class="hljs-keyword">void</span> <span class="hljs-title function_">testGetById</span><span class="hljs-params">(<span class="hljs-meta">@Autowired</span> MockMvc mockMvc)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>       <span class="hljs-type">MockHttpServletRequestBuilder</span> <span class="hljs-variable">builder</span> <span class="hljs-operator">=</span> MockMvcRequestBuilders.get(<span class="hljs-string">&quot;/books&quot;</span>);<br>       <span class="hljs-type">ResultActions</span> <span class="hljs-variable">action</span> <span class="hljs-operator">=</span> mockMvc.perform(builder);<br><br>       <span class="hljs-comment">//测试状态码</span><br>       <span class="hljs-type">StatusResultMatchers</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> MockMvcResultMatchers.status();  <span class="hljs-comment">//当前模拟运行的状态</span><br>       <span class="hljs-type">ResultMatcher</span> <span class="hljs-variable">ok</span> <span class="hljs-operator">=</span> status.isOk();  <span class="hljs-comment">// 预期值  200</span><br>       action.andExpect(ok);  <span class="hljs-comment">//添加预期值到本次调用过程中进行匹配</span><br><br>       <span class="hljs-comment">//测试响应体</span><br>       <span class="hljs-type">ContentResultMatchers</span> <span class="hljs-variable">content</span> <span class="hljs-operator">=</span> MockMvcResultMatchers.content();<br>       <span class="hljs-type">ResultMatcher</span> <span class="hljs-variable">body</span> <span class="hljs-operator">=</span> content.json(<span class="hljs-string">&quot;&#123;\&quot;id\&quot;:1,\&quot;name\&quot;:\&quot;springboot\&quot;,\&quot;type\&quot;:\&quot;springboot\&quot;,\&quot;description\&quot;:\&quot;springboot\&quot;&#125;&quot;</span>);<br>       action.andExpect(body);  <span class="hljs-comment">// 匹配</span><br><br>       <span class="hljs-comment">//测试响应头</span><br>       <span class="hljs-type">HeaderResultMatchers</span> <span class="hljs-variable">header</span> <span class="hljs-operator">=</span> MockMvcResultMatchers.header();<br>       <span class="hljs-type">ResultMatcher</span> <span class="hljs-variable">contentType</span> <span class="hljs-operator">=</span> header.string(<span class="hljs-string">&quot;Content-Type&quot;</span>, <span class="hljs-string">&quot;application/json&quot;</span>);<br>       action.andExpect(contentType);  <span class="hljs-comment">// 匹配</span><br>   &#125;<br></code></pre></td></tr></table></figure><h3 id="4、测试类自动回滚"><a href="#4、测试类自动回滚" class="headerlink" title="4、测试类自动回滚"></a>4、测试类自动回滚</h3><p>SpringBoot提供了一种在测试期间对事务操作进行回滚的机制，以确保测试数据的独立性和一致性。这样做可以避免测试数据对数据库的永久性修改，同时保持测试用例之间的隔离。</p><p>要启用测试用例的事务回滚，可以使用Spring的<code>@Transactional</code>注解，并指定<code>rollbackFor</code>属性来指定需要回滚的异常类型。</p><p>以下是一个示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.boot.test.context.SpringBootTest;<br><span class="hljs-keyword">import</span> org.springframework.test.annotation.Rollback;<br><span class="hljs-keyword">import</span> org.springframework.test.context.junit.jupiter.SpringJUnitConfig;<br><span class="hljs-keyword">import</span> org.springframework.transaction.annotation.Transactional;<br><span class="hljs-keyword">import</span> org.junit.jupiter.api.Test;<br><br><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-meta">@Rollback(true)</span> <span class="hljs-comment">// 指定回滚操作</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">YourTestClass</span> &#123;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">yourTestMethod</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// 测试用例的代码逻辑</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在上述示例中，<code>@SpringBootTest</code>用于指定测试用例是一个Spring Boot应用程序的测试。<code>@Transactional</code>用于启用测试用例的事务管理。<code>@Rollback(true)</code>用于指定测试用例完成后进行事务回滚。 如果<code>@Rollback(false)</code>事务就不会进行回滚</p><p>当测试用例执行完毕时，事务将自动回滚，确保对数据库的修改不会永久保存。</p><p>请注意，此机制仅适用于与Spring事务管理器集成的数据库事务。如果你使用的是其他持久化框架或工具，可能需要采取其他方式来实现事务回滚的机制。</p><h3 id="5、测试用例数据设定成随机数据"><a href="#5、测试用例数据设定成随机数据" class="headerlink" title="5、测试用例数据设定成随机数据"></a>5、测试用例数据设定成随机数据</h3><ul><li><p>测试用例数据通常采用随机值进行测试，使用SpringBoot提供的随机数为其赋值</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># application.yml</span><br><br><span class="hljs-comment"># 随机测试用例</span><br><span class="hljs-attr">testcase:</span><br>  <span class="hljs-attr">book:</span><br>    <span class="hljs-attr">id:</span> <span class="hljs-string">$&#123;random.int&#125;</span>  <span class="hljs-comment"># 随机整数</span><br>    <span class="hljs-attr">id2:</span> <span class="hljs-string">$&#123;random.int(10)&#125;</span>  <span class="hljs-comment"># 10以内的整数</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">$&#123;random.in</span> <span class="hljs-string">t(5,10)&#125;</span>  <span class="hljs-comment"># 5 到 10的整数</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">$&#123;random.value&#125;</span>  <span class="hljs-comment"># 随机字符串，MD5加密，32位</span><br>    <span class="hljs-attr">uuid:</span> <span class="hljs-string">$&#123;random.uuid&#125;</span>  <span class="hljs-comment"># 随机uuid</span><br>    <span class="hljs-attr">publishTime:</span> <span class="hljs-string">$&#123;random.long&#125;</span>  <span class="hljs-comment"># 随机long类型整数</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="4、数据层解决方案"><a href="#4、数据层解决方案" class="headerlink" title="4、数据层解决方案"></a>4、数据层解决方案</h2><h3 id="1、SQL"><a href="#1、SQL" class="headerlink" title="1、SQL"></a>1、SQL</h3><h4 id="SpringBoot提供的一些默认配置"><a href="#SpringBoot提供的一些默认配置" class="headerlink" title="SpringBoot提供的一些默认配置"></a>SpringBoot提供的一些默认配置</h4><h5 id="1、内置数据源"><a href="#1、内置数据源" class="headerlink" title="1、内置数据源"></a>1、内置数据源</h5><ul><li>SpringBoot 提供了3种内嵌的数据源对象供开发者选择<ul><li>HikariCP：默认内置数据源对象</li><li>Tomcat提供DataSource：HikariCP不可用的情况下，且在web环境中，将使用tomcat服务器配置的数据源对象</li><li>Commons DBCP：Hikari不可用，tomcat数据源也不可用，将使用dbcp数据源</li></ul></li></ul><h5 id="2、内置的持久化解决方案—JdbcTemplate"><a href="#2、内置的持久化解决方案—JdbcTemplate" class="headerlink" title="2、内置的持久化解决方案—JdbcTemplate"></a>2、内置的持久化解决方案—JdbcTemplate</h5><p>要想用JdbcTemplate，要导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3、内置数据库"><a href="#3、内置数据库" class="headerlink" title="3、内置数据库"></a>3、内置数据库</h4><ul><li>SpringBoot提供了3种内嵌数据库供开发者选择<ul><li>H2</li><li>HSQL</li><li>Derby</li></ul></li></ul><h3 id="2、NoSQL"><a href="#2、NoSQL" class="headerlink" title="2、NoSQL"></a>2、NoSQL</h3><h4 id="1、Redis"><a href="#1、Redis" class="headerlink" title="1、Redis"></a>1、Redis</h4><blockquote><ul><li>Redis是一款key-value存储结构的内存级的NoSQLs数据库</li><li>支持多种数据存储格式</li><li>支持持久化</li><li>支持集群</li></ul></blockquote><h5 id="SpringBoot整合"><a href="#SpringBoot整合" class="headerlink" title="SpringBoot整合"></a>SpringBoot整合</h5><ul><li><p>1、导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">redis:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">主机</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-string">端口</span><br></code></pre></td></tr></table></figure></li><li><p>3、使用RedisTemplate操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br>   <span class="hljs-keyword">private</span> RedisTemplate redisTemplate;<br>  <br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">set</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-type">ValueOperations</span> <span class="hljs-variable">ops</span> <span class="hljs-operator">=</span> redisTemplate.opsForValue();  <span class="hljs-comment">//ops*：获取各种数据类型的操作接口</span><br>ops.set(<span class="hljs-string">&quot;age&quot;</span>,<span class="hljs-number">41</span>);<br>&#125;<br>  <br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">get</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-type">ValueOperations</span> <span class="hljs-variable">ops</span> <span class="hljs-operator">=</span> redisTemplate.opsForValue();<br><span class="hljs-type">Object</span> <span class="hljs-variable">age</span> <span class="hljs-operator">=</span> ops.get(<span class="hljs-string">&quot;age&quot;</span>);<br>System.out.println(<span class="hljs-string">&quot;age = &quot;</span> + age);<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><p>客户端：</p><ul><li>RedisTemplate 是以对象作为key和value，内部对数据进行序列化</li><li>StringRedisTemplate 是以字符串作为key和value</li></ul><p>SpringBoot整合Redis客户端选择：</p><ul><li>lettuce（默认）</li><li>jedis</li></ul><h4 id="2、MongoDB"><a href="#2、MongoDB" class="headerlink" title="2、MongoDB"></a>2、MongoDB</h4><p><strong>docker安装mongo</strong></p><blockquote><ol><li>打开终端或命令提示符，并运行以下命令，以在Docker上拉取MongoDB的官方镜像：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker pull mongo</span><br></code></pre></td></tr></table></figure><p>这将下载最新的MongoDB镜像到您的本地机器。</p><ol start="2"><li>下载完成后，您可以运行以下命令来创建和启动一个MongoDB容器：（必须指定用户名和密码）</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker run -d --name mongodb_my -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=admin --privileged=<span class="hljs-literal">true</span> --restart always mongo --auth</span><br></code></pre></td></tr></table></figure><p>该命令将创建一个名为”mymongodb”的容器，并将MongoDB默认端口27017映射到您本地机器的27017端口。您可以根据需要自定义容器名称和端口映射。</p><ol start="3"><li>等待一段时间，直到容器启动完成。您可以使用以下命令检查容器的运行状态：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker ps</span><br></code></pre></td></tr></table></figure><p>如果看到”Mymongodb”容器正在运行，表示MongoDB已经成功安装并运行在Docker上。</p></blockquote><p>MongoDB是一个开源、高性能、无模式的文档型数据库。NoSQL数据库产品的一种，是最像关系型数据库的非关系型数据库</p><h5 id="mongo常见操作"><a href="#mongo常见操作" class="headerlink" title="mongo常见操作"></a>mongo常见操作</h5><blockquote><p>MongoDB的语法是基于JavaScript的，它使用一种称为MongoDB查询语言（MongoDB Query Language，简称MQL）的语法来操作和查询数据库。下面是一些常见的MongoDB语法示例：</p><ol><li>插入文档（数据）到集合中：</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span>db.collection.insertOne(&#123; key1: value1, key2: value2, ... &#125;)<br><span class="hljs-operator">&gt;</span>db.collection.insertMany([&#123; key1: value1, key2: value2, ... &#125;, &#123; key1: value1, key2: value2, ... &#125;])<br></code></pre></td></tr></table></figure><ol start="2"><li>查询集合中的文档：</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span>db.collection.find(&#123; key: <span class="hljs-keyword">value</span> &#125;)<br><span class="hljs-operator">&gt;</span>db.collection.findOne(&#123; key: <span class="hljs-keyword">value</span> &#125;)<br></code></pre></td></tr></table></figure><ol start="3"><li>更新集合中的文档：</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span>db.collection.updateOne(&#123; key: <span class="hljs-keyword">value</span> &#125;, &#123; $<span class="hljs-keyword">set</span>: &#123; newKey: newValue &#125; &#125;)<br><span class="hljs-operator">&gt;</span>db.collection.updateMany(&#123; key: <span class="hljs-keyword">value</span> &#125;, &#123; $<span class="hljs-keyword">set</span>: &#123; newKey: newValue &#125; &#125;)<br></code></pre></td></tr></table></figure><ol start="4"><li>删除集合中的文档：</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span>db.collection.deleteOne(&#123; key: <span class="hljs-keyword">value</span> &#125;)<br><span class="hljs-operator">&gt;</span>db.collection.deleteMany(&#123; key: <span class="hljs-keyword">value</span> &#125;)<br></code></pre></td></tr></table></figure><ol start="5"><li>使用条件进行查询：</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span>db.collection.find(&#123; $<span class="hljs-keyword">and</span>: [&#123; key1: value1 &#125;, &#123; key2: value2 &#125;] &#125;)<br><span class="hljs-operator">&gt;</span>db.collection.find(&#123; $<span class="hljs-keyword">or</span>: [&#123; key1: value1 &#125;, &#123; key2: value2 &#125;] &#125;)<br></code></pre></td></tr></table></figure><ol start="6"><li>使用投影（Projection）指定返回的字段：</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span>db.collection.find(&#123;&#125;, &#123; key1: <span class="hljs-number">1</span>, key2: <span class="hljs-number">1</span>, _id: <span class="hljs-number">0</span> &#125;)<br></code></pre></td></tr></table></figure><ol start="7"><li>使用聚合（Aggregation）框架进行复杂的数据处理：</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span>db.collection.aggregate([&#123; $<span class="hljs-keyword">match</span>: &#123; key: <span class="hljs-keyword">value</span> &#125; &#125;, &#123; $<span class="hljs-keyword">group</span>: &#123; _id: &quot;$key&quot;, count: &#123; $sum: <span class="hljs-number">1</span> &#125; &#125; &#125;])<br></code></pre></td></tr></table></figure><ol start="8"><li>创建索引：</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">&gt;</span>db.collection.createIndex(&#123; key: <span class="hljs-number">1</span> &#125;)<br></code></pre></td></tr></table></figure><p>以上仅是一些常见的MongoDB语法示例，MongoDB提供了更多的查询和操作功能。您可以参考MongoDB官方文档以获取更详细和全面的语法说明：<a href="https://docs.mongodb.com/manual/">https://docs.mongodb.com/manual/</a></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-operator">/</span><span class="hljs-operator">/</span> 查询<br>db.getCollection(<span class="hljs-string">&#x27;book&#x27;</span>).find()<br><br>db.book.find(&#123;type:&quot;springboot&quot;&#125;)<br><br><span class="hljs-operator">/</span><span class="hljs-operator">/</span> 添加文档<br>db.book.save(&#123;&quot;name&quot;:&quot;springboot&quot;,&quot;type&quot;:&quot;springboot&quot;&#125;)<br><br><span class="hljs-operator">/</span><span class="hljs-operator">/</span> 删除操作<br>db.book.remove(&#123;type:&quot;springboot&quot;&#125;)<br><br><span class="hljs-operator">/</span><span class="hljs-operator">/</span> 修改操作<br>db.book.update(&#123;name:&quot;springboot&quot;&#125;,&#123;$<span class="hljs-keyword">set</span>:&#123;name:&quot;springboot222&quot;&#125;&#125;)  <span class="hljs-operator">/</span><span class="hljs-operator">/</span>只修改遇到的第一条<br>db.book.updateMany(&#123;name:&quot;springboot&quot;&#125;,&#123;$<span class="hljs-keyword">set</span>:&#123;name:&quot;springboot222&quot;&#125;&#125;)  <span class="hljs-operator">/</span><span class="hljs-operator">/</span> 修改全部<br></code></pre></td></tr></table></figure><h5 id="SpringBoot整合-1"><a href="#SpringBoot整合-1" class="headerlink" title="SpringBoot整合"></a>SpringBoot整合</h5><ul><li><p>1、导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-data-mongodb<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">data:</span><br>    <span class="hljs-attr">mongodb:</span><br>      <span class="hljs-attr">host:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.111</span> <span class="hljs-comment">#指定MongoDB服务地址</span><br>      <span class="hljs-attr">port:</span> <span class="hljs-number">27017</span> <span class="hljs-comment">#指定端口，默认就为27017</span><br>      <span class="hljs-attr">database:</span> <span class="hljs-string">itheima</span> <span class="hljs-comment">#指定使用的数据库(集合)</span><br>      <span class="hljs-attr">authentication-database:</span> <span class="hljs-string">admin</span> <span class="hljs-comment"># 登录认证的逻辑库名</span><br>      <span class="hljs-attr">username:</span> <span class="hljs-string">admin</span> <span class="hljs-comment">#用户名</span><br>      <span class="hljs-attr">password:</span> <span class="hljs-string">admin</span> <span class="hljs-comment">#密码</span><br></code></pre></td></tr></table></figure></li><li><p>3、使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> MongoTemplate mongoTemplate;<br>  <br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">contextLoads</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">Book</span> <span class="hljs-variable">book</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Book</span>();<br>    book.setId(<span class="hljs-number">2</span>);<br>    book.setName(<span class="hljs-string">&quot;taoao&quot;</span>);<br>    book.setType(<span class="hljs-string">&quot;student&quot;</span>);<br>    book.setDescription(<span class="hljs-string">&quot;学生&quot;</span>);<br>    mongoTemplate.save(book);<br>&#125;<br>  <br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">void</span> <span class="hljs-title function_">find</span><span class="hljs-params">()</span> &#123;<br>    List&lt;Book&gt; all = mongoTemplate.findAll(Book.class);<br>    System.out.println(<span class="hljs-string">&quot;all = &quot;</span> + all);<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="3、ElasticSearch"><a href="#3、ElasticSearch" class="headerlink" title="3、ElasticSearch"></a>3、ElasticSearch</h4><ul><li>ElasticSearch是一个分布式全文搜索引擎</li></ul><blockquote><p><strong>docker安装elasticsearch</strong></p><ol><li>打开终端或命令行界面，运行以下命令来下载 Elasticsearch 的 Docker 镜像：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker pull docker.elastic.co/elasticsearch/elasticsearch:7.16.2</span><br></code></pre></td></tr></table></figure><ol start="2"><li>安装镜像后，运行以下命令来创建并启动 Elasticsearch 容器：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker run -d --name elasticsearch -p 9200:9200 -p 9300:9300 -e <span class="hljs-string">&quot;discovery.type=single-node&quot;</span> docker.elastic.co/elasticsearch/elasticsearch:7.16.2</span><br></code></pre></td></tr></table></figure><p>这将创建一个名为 <code>elasticsearch</code> 的容器，并将 Elasticsearch 的 HTTP 端口映射到主机的 <code>9200</code> 端口，将 Elasticsearch 的传输端口映射到主机的 <code>9300</code> 端口。<code>-e &quot;discovery.type=single-node&quot;</code> 配置将 Elasticsearch 配置为单节点模式。</p><ol start="3"><li>等待一段时间，直到 Elasticsearch 容器成功启动。你可以使用以下命令检查容器的状态：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker ps</span><br></code></pre></td></tr></table></figure><p>如果看到 <code>elasticsearch</code> 容器正在运行，则表示安装成功。</p><p>现在，你可以通过访问 <code>http://localhost:9200</code> 来验证 Elasticsearch 是否正常工作。你应该能够看到 Elasticsearch 的相关信息。</p><p>请注意，这只是一个简单的单节点安装示例。在生产环境中，你可能需要配置更多参数和参数文件，以满足你的需求。有关更详细的安装和配置说明，请参考 Elasticsearch 官方文档。</p><p><strong>安装IK分词器</strong></p><p>在Elasticsearch容器中安装IK分词器插件时，你应该将其放置在容器内的插件目录。以下是步骤：</p><ol><li>进入已经创建的Elasticsearch容器的命令行界面。可以使用以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker <span class="hljs-built_in">exec</span> -it elasticsearch bash</span><br></code></pre></td></tr></table></figure><ol start="2"><li>切换到Elasticsearch的插件目录。运行以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash"><span class="hljs-built_in">cd</span> /usr/share/elasticsearch/plugins</span><br></code></pre></td></tr></table></figure><ol start="3"><li>使用<code>wget</code>命令下载IK分词器插件的压缩包。运行以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">wget https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v7.16.2/elasticsearch-analysis-ik-7.16.2.zip</span><br></code></pre></td></tr></table></figure><ol start="4"><li>创建<code>ik</code>文件夹，用于将解压出来的文件放到其中</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash"><span class="hljs-built_in">mkdir</span> ik</span><br></code></pre></td></tr></table></figure><ol start="5"><li>解压插件文件。将zip中的文件解压到<code>ik</code>文件夹中。运行以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">unzip elasticsearch-analysis-ik-7.16.2.zip -d ik/</span><br></code></pre></td></tr></table></figure><ol start="6"><li>删除插件压缩包。运行以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash"><span class="hljs-built_in">rm</span> elasticsearch-analysis-ik-7.16.2.zip</span><br></code></pre></td></tr></table></figure><p>完成以上步骤后，IK分词器插件应该已经正确安装在Elasticsearch容器的插件目录中。重新启动容器以使更改生效。</p></blockquote><h5 id="索引相关操作："><a href="#索引相关操作：" class="headerlink" title="索引相关操作："></a>索引相关操作：</h5><ol><li><p>创建名为<code>books</code>的索引，并指定使用IK分词器和<code>all</code>字段：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs shell">PUT http://192.168.0.111:9200/books<br>&#123;<br>  &quot;settings&quot;: &#123;<br>    &quot;analysis&quot;: &#123;<br>      &quot;analyzer&quot;: &#123;<br>        &quot;ik_analyzer&quot;: &#123;<br>          &quot;type&quot;: &quot;custom&quot;,<br>          &quot;tokenizer&quot;: &quot;ik_max_word&quot;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;,<br>  &quot;mappings&quot;: &#123;<br>    &quot;properties&quot;: &#123;<br>      &quot;id&quot;: &#123;<br>        &quot;type&quot;: &quot;integer&quot;<br>      &#125;,<br>      &quot;name&quot;: &#123;<br>        &quot;type&quot;: &quot;text&quot;,<br>        &quot;analyzer&quot;: &quot;ik_analyzer&quot;,<br>        &quot;copy_to&quot;: &quot;all&quot;<br>      &#125;,<br>      &quot;type&quot;: &#123;<br>        &quot;type&quot;: &quot;text&quot;,<br>        &quot;analyzer&quot;: &quot;ik_analyzer&quot;,<br>        &quot;copy_to&quot;: &quot;all&quot;<br>      &#125;,<br>      &quot;description&quot;: &#123;<br>        &quot;type&quot;: &quot;text&quot;,<br>        &quot;analyzer&quot;: &quot;ik_analyzer&quot;,<br>        &quot;copy_to&quot;: &quot;all&quot;<br>      &#125;,<br>      &quot;all&quot;: &#123;<br>        &quot;type&quot;: &quot;text&quot;,<br>        &quot;analyzer&quot;: &quot;ik_analyzer&quot;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>上述示例中，我们使用PUT请求创建索引<code>books</code>。在索引的<code>settings</code>中定义了<code>ik_analyzer</code>作为自定义分析器，使用<code>ik_max_word</code>作为分词器。在<code>mappings</code>中，我们定义了<code>id</code>、<code>name</code>、<code>type</code>和<code>description</code>字段的类型和属性，同时通过<code>copy_to</code>指定将<code>name</code>、<code>type</code>和<code>description</code>的内容复制到<code>all</code>字段中。</p></li><li><p>插入文档到<code>books</code>索引中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">POST http://192.168.0.111:9200/books/_doc/1<br>&#123;<br>  &quot;id&quot;: 1,<br>  &quot;name&quot;: &quot;Book 1&quot;,<br>  &quot;type&quot;: &quot;Fiction&quot;,<br>  &quot;description&quot;: &quot;This is a description of Book 1.&quot;<br>&#125;<br></code></pre></td></tr></table></figure><p>使用POST请求插入文档到<code>books</code>索引中。文档的内容包括<code>id</code>、<code>name</code>、<code>type</code>和<code>description</code>字段。你可以按照相同的方式插入其他文档。</p><p>这样，通过以上操作，你就可以创建名为<code>books</code>的索引，并使用IK分词器定义了<code>name</code>、<code>type</code>和<code>description</code>字段的映射。通过<code>copy_to</code>属性，将这些字段的内容复制到<code>all</code>字段中。同时，<code>name</code>、<code>type</code>和<code>description</code>字段使用了<code>ik_analyzer</code>分析器，而<code>all</code>字段也使用了相同的分析器。</p></li></ol><h5 id="SpringBoot整合-2"><a href="#SpringBoot整合-2" class="headerlink" title="SpringBoot整合"></a>SpringBoot整合</h5><h6 id="1、整合"><a href="#1、整合" class="headerlink" title="1、整合"></a>1、整合</h6><ul><li><p>1、引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.elasticsearch.client<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>elasticsearch-rest-high-level-client<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、连接客户端，创建索引</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.springboot;<br><br><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.admin.indices.create.CreateIndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClientBuilder;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br><span class="hljs-keyword">import</span> org.junit.jupiter.api.AfterEach;<br><span class="hljs-keyword">import</span> org.junit.jupiter.api.BeforeEach;<br><span class="hljs-keyword">import</span> org.junit.jupiter.api.Test;<br><span class="hljs-keyword">import</span> org.springframework.boot.test.context.SpringBootTest;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-meta">@SpringBootTest</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Springboot18EsApplicationTests</span> &#123;<br>    <span class="hljs-comment">//    @Autowired</span><br><span class="hljs-comment">//    private ElasticsearchRestTemplate template;   // 不推荐使用，老版本</span><br><br>    <span class="hljs-keyword">private</span> RestHighLevelClient client;<br><br>    <span class="hljs-meta">@BeforeEach</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">setUp</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">//连接</span><br>        <span class="hljs-type">HttpHost</span> <span class="hljs-variable">host</span> <span class="hljs-operator">=</span> HttpHost.create(<span class="hljs-string">&quot;http://192.168.0.111:9200&quot;</span>);<br>        <span class="hljs-type">RestClientBuilder</span> <span class="hljs-variable">builder</span> <span class="hljs-operator">=</span> RestClient.builder(host);<br>        client = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RestHighLevelClient</span>(builder);<br>    &#125;<br><br>    <span class="hljs-meta">@AfterEach</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">tearDown</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-comment">//关闭</span><br>        client.close();<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建索引</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testCreateIndex</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">CreateIndexRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CreateIndexRequest</span>(<span class="hljs-string">&quot;books&quot;</span>);<br>        client.indices().create(request, RequestOptions.DEFAULT);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h6 id="2、添加文档"><a href="#2、添加文档" class="headerlink" title="2、添加文档"></a>2、添加文档</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//添加文档</span><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testCreateDoc</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">Book</span> <span class="hljs-variable">book</span> <span class="hljs-operator">=</span> bookDao.selectById(<span class="hljs-number">1</span>);<br>        <span class="hljs-type">IndexRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IndexRequest</span>(<span class="hljs-string">&quot;books&quot;</span>).id(String.valueOf(book.getId()));<br>        String json= JSON.toJSONString(book);<br>        request.source(json,XContentType.JSON);<br>        client.index(request,RequestOptions.DEFAULT);<br>    &#125;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">testCreateDocAll</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        List&lt;Book&gt; books = bookDao.selectList(<span class="hljs-literal">null</span>);<br>        BulkRequest bulk=<span class="hljs-keyword">new</span> <span class="hljs-title class_">BulkRequest</span>();<br>        <span class="hljs-keyword">for</span> (Book book : books) &#123;<br>            <span class="hljs-type">IndexRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IndexRequest</span>(<span class="hljs-string">&quot;books&quot;</span>).id(String.valueOf(book.getId()));<br>            String json= JSON.toJSONString(book);<br>            request.source(json,XContentType.JSON);<br>            bulk.add(request);<br>        &#125;<br>        client.bulk(bulk,RequestOptions.DEFAULT);<br>    &#125;<br></code></pre></td></tr></table></figure><h6 id="3、查询文档"><a href="#3、查询文档" class="headerlink" title="3、查询文档"></a>3、查询文档</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//按id查询</span><br>   <span class="hljs-meta">@Test</span><br>   <span class="hljs-keyword">void</span> <span class="hljs-title function_">testGet</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>       <span class="hljs-type">GetRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">GetRequest</span>(<span class="hljs-string">&quot;books&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>);<br>       <span class="hljs-type">GetResponse</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> client.get(request, RequestOptions.DEFAULT);<br>       <span class="hljs-type">String</span> <span class="hljs-variable">sourceAsString</span> <span class="hljs-operator">=</span> response.getSourceAsString();<br>       System.out.println(<span class="hljs-string">&quot;sourceAsString = &quot;</span> + sourceAsString);<br>   &#125;<br><br><span class="hljs-comment">//按条件查询</span><br>   <span class="hljs-meta">@Test</span><br>   <span class="hljs-keyword">void</span> <span class="hljs-title function_">testSearch</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>       <span class="hljs-type">SearchRequest</span> <span class="hljs-variable">request</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SearchRequest</span>(<span class="hljs-string">&quot;books&quot;</span>);<br>       <span class="hljs-type">SearchSourceBuilder</span> <span class="hljs-variable">bulider</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SearchSourceBuilder</span>();<br>       bulider.query(QueryBuilders.termQuery(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;spring&quot;</span>));  <span class="hljs-comment">//条件</span><br>       request.source(bulider);<br>       <span class="hljs-type">SearchResponse</span> <span class="hljs-variable">search</span> <span class="hljs-operator">=</span> client.search(request, RequestOptions.DEFAULT);<br>       <span class="hljs-type">SearchHits</span> <span class="hljs-variable">hits</span> <span class="hljs-operator">=</span> search.getHits();<br>       <span class="hljs-keyword">for</span> (SearchHit hit : hits) &#123;<br>           <span class="hljs-type">String</span> <span class="hljs-variable">sourceAsString</span> <span class="hljs-operator">=</span> hit.getSourceAsString();<br>           System.out.println(<span class="hljs-string">&quot;sourceAsString = &quot;</span> + sourceAsString);<br>       &#125;<br>   &#125;<br></code></pre></td></tr></table></figure><h2 id="5、整合第三方技术"><a href="#5、整合第三方技术" class="headerlink" title="5、整合第三方技术"></a>5、整合第三方技术</h2><h3 id="1、缓存"><a href="#1、缓存" class="headerlink" title="1、缓存"></a>1、缓存</h3><h4 id="1、缓存的作用"><a href="#1、缓存的作用" class="headerlink" title="1、缓存的作用"></a>1、缓存的作用</h4><ul><li>缓存是一种介于数据永久存储介质（数据库）和 数据应用程序（app）之间的数据临时存储介质</li><li>使用缓存可以有效的减少低速数据读取过程的次数（例如磁盘IO），提高系统性能</li><li>缓存不仅可以提高永久性存储介质的数据读取效率，还可以提供临时的数据存储空间</li></ul><h4 id="2、spring-cache"><a href="#2、spring-cache" class="headerlink" title="2、spring-cache"></a>2、spring-cache</h4><h5 id="2、SpringBoot内置了缓存技术（simple），方便缓存使用"><a href="#2、SpringBoot内置了缓存技术（simple），方便缓存使用" class="headerlink" title="2、SpringBoot内置了缓存技术（simple），方便缓存使用"></a>2、SpringBoot内置了缓存技术（simple），方便缓存使用</h5><blockquote><ul><li>启用缓存</li></ul><p><code>@EnableCaching</code>是Spring框架中的一个注解，用于启用方法级别的缓存支持。通过在配置类上添加<code>@EnableCaching</code>注解，可以告诉Spring启用缓存功能，并自动代理被<code>@Cacheable</code>、<code>@CachePut</code>和<code>@CacheEvict</code>等注解修饰的方法，以实现缓存的自动管理。</p><p><code>@EnableCaching</code>注解可以应用于任意一个Spring配置类上，通常是应用的主配置类，或者是一个专门用于配置缓存的配置类。当应用了<code>@EnableCaching</code>注解后，Spring将会在运行时创建一个代理对象，拦截被<code>@Cacheable</code>、<code>@CachePut</code>和<code>@CacheEvict</code>等注解修饰的方法的调用，并处理缓存的逻辑。</p><p>同时，为了使<code>@EnableCaching</code>注解生效，还需要配置一个适当的缓存管理器。可以根据需求选择不同的缓存管理器，如EhCache、Redis或Caffeine等，并将其配置为Spring应用的一部分。缓存管理器负责实际的缓存操作，如数据的读取、写入和清除等。</p><p>需要注意的是，使用<code>@EnableCaching</code>注解启用缓存功能后，还需要在具体的方法上使用<code>@Cacheable</code>、<code>@CachePut</code>和<code>@CacheEvict</code>等注解来定义缓存的行为。<code>@EnableCaching</code>注解只是用于启用缓存功能的开关，并不会自动对所有方法进行缓存处理。</p><p>总结来说，通过在配置类上添加<code>@EnableCaching</code>注解，可以启用Spring的缓存功能，并自动代理被缓存相关注解修饰的方法，实现方法级别的缓存支持。同时，需要配置一个适当的缓存管理器来实现实际的缓存操作。</p><ul><li>设置进入缓存的数据</li></ul><p><code>@Cacheable</code>是Spring框架中的一个注解，用于配置方法的结果缓存。通过在方法上添加<code>@Cacheable</code>注解，可以告诉Spring将方法的返回值缓存起来，以便在下一次调用相同的方法时，可以直接返回缓存的结果，而不需要再执行方法体内的逻辑。</p><p><code>@Cacheable</code>注解可以应用于方法级别，也可以应用于类级别。当应用于方法级别时，它会告诉Spring根据方法的参数和返回值来生成唯一的缓存键，以便在后续的调用中进行查找和匹配。当应用于类级别时，它会将整个类的所有方法的结果缓存起来。</p><p><strong><code>@Cacheable</code>注解提供了一些属性来进一步配置缓存的行为。其中最重要的属性是value和key。value属性指定要使用的缓存名称，可以是一个字符串数组，用于指定多个缓存名称。key属性用于自定义缓存键的生成逻辑，可以使用SpEL表达式或实现CacheKeyGenerator接口来指定缓存键的生成方式。</strong></p><p>除了<code>@Cacheable</code>注解外，Spring还提供了其他的缓存相关注解，如<code>@CacheEvict</code>用于清除缓存中的数据，<code>@CachePut</code>用于更新缓存中的数据，以及<code>@Caching</code>用于同时应用多个缓存相关的注解。</p><p>需要注意的是，为了使用<code>@Cacheable</code>注解，需要先配置一个适当的缓存管理器，如EhCache、Redis或Caffeine等，并将其配置为Spring应用的一部分。这样，当使用<code>@Cacheable</code>注解时，Spring就会根据缓存管理器的配置来实现方法结果的缓存。</p><ul><li>设置读取缓存的数据</li></ul></blockquote><ul><li><p>1、引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--cache--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、开启缓存功能</p><ul><li>在启动类上加上注解<code>@EnableCaching</code>，开启缓存功能</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-meta">@EnableCaching</span>  <span class="hljs-comment">//开启缓存功能</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Springboot19CacheApplication</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(Springboot19CacheApplication.class, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>3、使用</p><ul><li>在service层的需要添加缓存的方法上加上<code>@Cacheable</code>注解,注解中最重要的属性是value和key</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-meta">@Cacheable(value = &quot;cacheSpace&quot;,key = &quot;#id&quot;)</span>  <span class="hljs-comment">//value属性指定要使用的缓存名称，key指定通过什么查找这个缓存</span><br><span class="hljs-keyword">public</span> Book <span class="hljs-title function_">getById</span><span class="hljs-params">(Integer id)</span> &#123;<br>    <span class="hljs-keyword">return</span> bookDao.selectById(id);<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><p><em><strong>SpringBoot提供的缓存技术除了提供默认的缓存方案，还可以对其他缓存技术进行整合，统一接口，方便缓存技术的开发和管理</strong></em></p><h5 id="3、整合EhCache"><a href="#3、整合EhCache" class="headerlink" title="3、整合EhCache"></a>3、整合EhCache</h5><ul><li><p>1、导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--ehcache--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>net.sf.ehcache<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>ehcache<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、配置</p><ul><li><p>1、在application.yml中指定使用ehcache缓存策略</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">cache:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">ehcache</span><br>    <span class="hljs-attr">ehcache:</span><br>      <span class="hljs-attr">config:</span> <span class="hljs-string">ehcache.xml</span>  <span class="hljs-comment"># 指定redis名称</span><br></code></pre></td></tr></table></figure></li><li><p>2、添加ehcache.xml配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ehcache</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:noNamespaceSchemaLocation</span>=<span class="hljs-string">&quot;http://ehcache.org/ehcache.xsd&quot;</span> <span class="hljs-attr">updateCheck</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">diskStore</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;D:\ehcache&quot;</span>/&gt;</span><br>    <span class="hljs-comment">&lt;!--默认缓存策略--&gt;</span><br>    <span class="hljs-comment">&lt;!--eternal 是否永久存在，设置为true则不会被清除，此时与timeout冲突。通常设置为false--&gt;</span><br>    <span class="hljs-comment">&lt;!--diskPersistent 是否启用磁盘持久化--&gt;</span><br>    <span class="hljs-comment">&lt;!--mexElementsInMemory 最大缓存数量--&gt;</span><br>    <span class="hljs-comment">&lt;!--overflowToDisk 超过最大缓存数量是否持久化到磁盘--&gt;</span><br>    <span class="hljs-comment">&lt;!--timeToIdleSeconds 最大不活动间隔，设置过长缓存容易溢出，设置过段无效果。可用于记录时效性数据。例如验证码--&gt;</span><br>    <span class="hljs-comment">&lt;!--timeToLiveSeconds 最大存活时间--&gt;</span><br>    <span class="hljs-comment">&lt;!--memoryStoreEvictionPolicy 缓存清除策略  lru是长时间不访问的淘汰，lfu是最近访问最少的淘汰--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">defaultCache</span> <span class="hljs-attr">eternal</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">                  <span class="hljs-attr">diskPersistent</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">                  <span class="hljs-attr">maxElementsInMemory</span>=<span class="hljs-string">&quot;1000&quot;</span></span><br><span class="hljs-tag">                  <span class="hljs-attr">overflowToDisk</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">                  <span class="hljs-attr">timeToIdleSeconds</span>=<span class="hljs-string">&quot;60&quot;</span></span><br><span class="hljs-tag">                  <span class="hljs-attr">timeToLiveSeconds</span>=<span class="hljs-string">&quot;60&quot;</span></span><br><span class="hljs-tag">                  <span class="hljs-attr">memoryStoreEvictionPolicy</span>=<span class="hljs-string">&quot;LRU&quot;</span>/&gt;</span><br><br>    <span class="hljs-comment">&lt;!--name 对应@Cacheable 注解中的value值--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">cache</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;smsCode&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">eternal</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">diskPersistent</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">maxElementsInMemory</span>=<span class="hljs-string">&quot;1000&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">overflowToDisk</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">timeToIdleSeconds</span>=<span class="hljs-string">&quot;60&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">timeToLiveSeconds</span>=<span class="hljs-string">&quot;60&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">memoryStoreEvictionPolicy</span>=<span class="hljs-string">&quot;LRU&quot;</span>/&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">ehcache</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>3、使用</p><p>使用方法和SpringBoot内置的缓存一样</p></li></ul><h5 id="4、整合Redis"><a href="#4、整合Redis" class="headerlink" title="4、整合Redis"></a>4、整合Redis</h5><ul><li><p>1、添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--Redis--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、配置Redis作为缓存</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 设定当前缓存使用Redis</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">cache:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">redis</span><br>    <span class="hljs-attr">redis:</span><br>      <span class="hljs-attr">use-key-prefix:</span> <span class="hljs-literal">false</span>  <span class="hljs-comment"># 是否使用前缀   对应注解中要不要value，如果false，即便设置了value也不存在，风险性高，一般选择true</span><br>      <span class="hljs-attr">cache-null-values:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># 是否使用空值</span><br>      <span class="hljs-attr">key-prefix:</span> <span class="hljs-string">aa</span>  <span class="hljs-comment"># 指定前缀  会显示：aa + 注解中的value</span><br>      <span class="hljs-attr">time-to-live:</span> <span class="hljs-string">10s</span>  <span class="hljs-comment"># 最大活动时间,多久过期</span><br><br>  <span class="hljs-comment"># 配置Redis连接</span><br>  <span class="hljs-attr">redis:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.111</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br></code></pre></td></tr></table></figure></li><li><p>3、使用</p><p>使用方法和SpringBoot内置的缓存一样</p></li></ul><h5 id="5、整合memcached"><a href="#5、整合memcached" class="headerlink" title="5、整合memcached"></a>5、整合memcached</h5><h6 id="安装memcached"><a href="#安装memcached" class="headerlink" title="安装memcached"></a>安装memcached</h6><blockquote><p>要在Docker中安装Memcached，可以按照以下步骤进行操作：</p><ol><li>拉取Memcached镜像：在终端或命令行中执行以下命令，从Docker Hub上拉取Memcached的官方镜像。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker pull memcached</span><br></code></pre></td></tr></table></figure><ol start="2"><li>运行Memcached容器：执行以下命令来运行Memcached容器。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker run -d -p 11211:11211 --name memcached memcached</span><br></code></pre></td></tr></table></figure><p>这条命令会在后台运行一个名为”memcached”的容器，并将容器的11211端口映射到主机的11211端口。Memcached服务将在容器中启动并监听11211端口。</p><p>这样，你就成功在Docker中安装并运行了Memcached。你可以使用Memcached来缓存和加速你的应用程序的数据访问。记得根据需要进行适当的配置和调整，如内存限制、缓存策略等。</p></blockquote><h6 id="memcached介绍"><a href="#memcached介绍" class="headerlink" title="memcached介绍"></a>memcached介绍</h6><ul><li>memcached客户端选择：<ul><li>Memcached Client for Java：最早期客户端，稳定可靠，用户群广</li><li>SpyMemcached：效率更高</li><li>Xmemcached：并发处理更好</li></ul></li><li>SpringBoot未提供对memcached的整合，需要使用硬编码方式实现客户端初始化管理</li></ul><h6 id="整合Xmemcached步骤"><a href="#整合Xmemcached步骤" class="headerlink" title="整合Xmemcached步骤"></a>整合Xmemcached步骤</h6><ul><li><p>1、导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--整合xmemcached --&gt;</span><br><span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/com.googlecode.xmemcached/xmemcached --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.googlecode.xmemcached<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>xmemcached<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.4.7<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、编写配置</p><ul><li><p>①、application.yml中自定义一些参数</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 自定义</span><br><span class="hljs-attr">memcached:</span><br>  <span class="hljs-attr">servers:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.111</span><span class="hljs-string">:11211</span>  <span class="hljs-comment"># 服务器地址</span><br>  <span class="hljs-attr">pool-size:</span> <span class="hljs-number">10</span>  <span class="hljs-comment"># 连接池数量</span><br>  <span class="hljs-attr">time-out:</span> <span class="hljs-number">3000</span>  <span class="hljs-comment"># 设置默认操作超时</span><br></code></pre></td></tr></table></figure></li><li><p>②、编写配置类，读取参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@ConfigurationProperties(&quot;memcached&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">XMemcachedProperties</span> &#123;<br>    <span class="hljs-keyword">private</span> String servers;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> poolSize;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">long</span> timeOut;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>③、编写配置类，提供一个MemcachedClient的Bean</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.springboot.config;<br><br><span class="hljs-keyword">import</span> net.rubyeye.xmemcached.MemcachedClient;<br><span class="hljs-keyword">import</span> net.rubyeye.xmemcached.MemcachedClientBuilder;<br><span class="hljs-keyword">import</span> net.rubyeye.xmemcached.XMemcachedClientBuilder;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">XMemcachedConfig</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> XMemcachedProperties xMemcachedProperties;<br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> MemcachedClient <span class="hljs-title function_">getMemcachedClient</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">MemcachedClientBuilder</span> <span class="hljs-variable">memcachedClientBuilder</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">XMemcachedClientBuilder</span>(xMemcachedProperties.getServers());<br>        memcachedClientBuilder.setOpTimeout(xMemcachedProperties.getTimeOut());<br>        memcachedClientBuilder.setConnectionPoolSize(xMemcachedProperties.getPoolSize());<br>        <span class="hljs-type">MemcachedClient</span> <span class="hljs-variable">memcachedClient</span> <span class="hljs-operator">=</span> memcachedClientBuilder.build();<br>        <span class="hljs-keyword">return</span> memcachedClient;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul></li><li><p>3、使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 以下是SpringBoot中使用xmemcached</span><br><br><span class="hljs-comment">// 自动注入刚才定义的MemcachedClient</span><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> MemcachedClient memcachedClient;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">sendCOdeToSMS</span><span class="hljs-params">(String tele)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> codeUtils.generator(tele);<br>        <span class="hljs-keyword">try</span> &#123;<br>            memcachedClient.set(tele,<span class="hljs-number">10</span>,code);  <span class="hljs-comment">// 往缓存中放数据。三个参数：需要放到缓存中的key，过期时间，值</span><br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>        <span class="hljs-keyword">return</span> code;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">checkCode</span><span class="hljs-params">(SMSCode smsCode)</span> &#123;<br>        <span class="hljs-comment">//取出内存中的与传进来的比对</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> smsCode.getCode();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">cacheCode</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            cacheCode = memcachedClient.get(smsCode.getTele());  <span class="hljs-comment">// 从缓存中取出</span><br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>        <span class="hljs-keyword">return</span> code.equals(cacheCode);<br>    &#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="3、jetcache（阿里）（缓存整合框架）"><a href="#3、jetcache（阿里）（缓存整合框架）" class="headerlink" title="3、jetcache（阿里）（缓存整合框架）"></a>3、jetcache（阿里）（缓存整合框架）</h4><ul><li>jetCache对SpringCache进行了封装，在原有功能基础上实现了多级缓存、缓存统计、自动刷新、异步调用、数据报表等功能</li><li>jetCache设定了本地缓存与远程缓存的多级缓存解决方案<ul><li>本地缓存（local）<ul><li>LinkedHashMap</li><li>Caffeine</li></ul></li><li>远程缓存（remote）<ul><li>Redis</li><li>Tair</li></ul></li></ul></li></ul><h5 id="1、整合jetcache"><a href="#1、整合jetcache" class="headerlink" title="1、整合jetcache"></a>1、整合jetcache</h5><ul><li><p>1、导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--导入jetcache--&gt;</span><br><span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/com.alicp.jetcache/jetcache-starter-redis --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alicp.jetcache<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jetcache-starter-redis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.6.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、在application.yml中进行配置（没有提示）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 配置jetcache，替代springCache</span><br><span class="hljs-attr">jetcache:</span><br>  <span class="hljs-attr">remote:</span>  <span class="hljs-comment"># 远程缓存配置</span><br>    <span class="hljs-attr">default:</span>  <span class="hljs-comment"># 默认的缓存管理模式</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">redis</span>  <span class="hljs-comment"># 缓存类型为Redis</span><br>      <span class="hljs-attr">host:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.111</span>  <span class="hljs-comment"># Redis服务器主机地址</span><br>      <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span>  <span class="hljs-comment"># Redis服务器端口</span><br>      <span class="hljs-attr">keyConvertor:</span> <span class="hljs-string">fastjson</span>  <span class="hljs-comment"># 使用Fastjson作为键转换器，将键对象转换为字符串</span><br>      <span class="hljs-attr">valueEncode:</span> <span class="hljs-string">java</span>  <span class="hljs-comment"># 使用Java序列化器对缓存值进行编码</span><br>      <span class="hljs-attr">valueDecode:</span> <span class="hljs-string">java</span>  <span class="hljs-comment"># 使用Java序列化器对缓存值进行解码</span><br>      <span class="hljs-attr">poolConfig:</span>  <span class="hljs-comment"># Redis连接池配置</span><br>        <span class="hljs-attr">maxTotal:</span> <span class="hljs-number">50</span>  <span class="hljs-comment"># 最大连接数</span><br>    <span class="hljs-attr">sms:</span> <span class="hljs-comment"># 可以设置分多少种管理模式，一种的话是default，多种的话在remote下继续写</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">redis</span><br>      <span class="hljs-attr">host:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.111</span><br>      <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span><br>      <span class="hljs-attr">poolConfig:</span> <span class="hljs-comment"># 必须要有</span><br>        <span class="hljs-attr">maxTotal:</span> <span class="hljs-number">50</span>  <span class="hljs-comment"># 最大连接数</span><br>  <span class="hljs-attr">local:</span>  <span class="hljs-comment"># 本地缓存配置</span><br>    <span class="hljs-attr">default:</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">linkedhashmap</span>  <span class="hljs-comment"># 缓存类型为LinkedHashMap</span><br>      <span class="hljs-attr">keyConvertor:</span> <span class="hljs-string">fastjson</span>  <span class="hljs-comment"># 使用Fastjson作为键转换器，将键对象转换为字符串</span><br><br></code></pre></td></tr></table></figure></li><li><p>3、有两种使用方法，方法1：</p><ul><li><p>1、在启动类上使用注解<code>@EnableCreateCacheAnnotation</code>开启使用缓存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.springboot;<br><br><span class="hljs-keyword">import</span> com.alicp.jetcache.anno.config.EnableCreateCacheAnnotation;<br><span class="hljs-keyword">import</span> org.springframework.boot.SpringApplication;<br><span class="hljs-keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><br><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-meta">@EnableCreateCacheAnnotation</span>  <span class="hljs-comment">// jetCache的注解。是jetcache启用缓存的主开关   启用使用注解方式创建缓存</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Springboot20JetcacheApplication</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(Springboot20JetcacheApplication.class, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>2、使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment">   * <span class="hljs-doctag">@CreateCache</span>(name = &quot;jetCache&quot;,expire = 3600,timeUnit = TimeUnit.SECONDS)：远程的方案。告诉jetCache 这是一个用来缓存的对象。</span><br><span class="hljs-comment">   * name  等同于<span class="hljs-doctag">@Cacheable</span>注解的value；</span><br><span class="hljs-comment">   * expire 指定过期时间；</span><br><span class="hljs-comment">   * timeUnit  单位默认是秒</span><br><span class="hljs-comment">   * cacheType   有三种选择：只用远程、只用本地、两者都用.默认只用远程</span><br><span class="hljs-comment">   * area:  就是remote或者local下面的属性名，默认时default</span><br><span class="hljs-comment">   */</span><br>  <span class="hljs-meta">@CreateCache(area=&quot;default&quot;,name = &quot;jetCache&quot;,expire = 3600,timeUnit = TimeUnit.SECONDS,cacheType = CacheType.LOCAL)</span><br>  <span class="hljs-keyword">private</span> Cache&lt;String,String&gt; jetCache;<br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> String <span class="hljs-title function_">sendCodeToSMS</span><span class="hljs-params">(String tele)</span> &#123;<br>      <span class="hljs-type">String</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> codeUtils.generator(tele);<br>      jetCache.put(tele,code);  <span class="hljs-comment">// 放入缓存</span><br>      <span class="hljs-keyword">return</span> code;<br>  &#125;<br>    <br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">checkCode</span><span class="hljs-params">(SMSCode smsCode)</span> &#123;<br>      <span class="hljs-comment">//取出内存中的与传进来的比对</span><br>      <span class="hljs-type">String</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> smsCode.getCode();<br>      <span class="hljs-type">String</span> <span class="hljs-variable">queryCode</span> <span class="hljs-operator">=</span> jetCache.get(smsCode.getTele());  <span class="hljs-comment">// 从缓存中取出</span><br>      <span class="hljs-keyword">return</span> code.equals(queryCode);<br>  &#125;<br></code></pre></td></tr></table></figure></li></ul></li><li><p>4、方法2：</p><ul><li><p>1、在启动类上加上两个注解：<code>@EnableCreateCacheAnnotation</code>，<code>@EnableMethodCache</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.springboot;<br><br><span class="hljs-keyword">import</span> com.alicp.jetcache.anno.config.EnableCreateCacheAnnotation;<br><span class="hljs-keyword">import</span> com.alicp.jetcache.anno.config.EnableMethodCache;<br><span class="hljs-keyword">import</span> org.springframework.boot.SpringApplication;<br><span class="hljs-keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><br><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-meta">@EnableCreateCacheAnnotation</span>  <span class="hljs-comment">// jetCache的注解。是jetcache启用缓存的主开关   启用使用注解方式创建缓存</span><br><span class="hljs-meta">@EnableMethodCache(basePackages = &quot;com.example.springboot&quot;)</span>  <span class="hljs-comment">//开启方法注解缓存</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Springboot20JetcacheApplication</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(Springboot20JetcacheApplication.class, args);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>2、使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>   <span class="hljs-meta">@Cached(name = &quot;book&quot;, key = &quot;#id&quot;, expire = 3600)</span>  <span class="hljs-comment">// 保存到缓存，如果缓存中存在数据查询缓存</span><br>   <span class="hljs-meta">@CacheRefresh(refresh = 10)</span>  <span class="hljs-comment">// 缓存多久查询一次数据库</span><br>   <span class="hljs-keyword">public</span> Book <span class="hljs-title function_">getById</span><span class="hljs-params">(Integer id)</span> &#123;<br>       <span class="hljs-keyword">return</span> bookDao.selectById(id);<br>   &#125;<br>    <br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-meta">@CacheUpdate(name = &quot;book&quot;, key = &quot;#book.id&quot;, value = &quot;#book&quot;)</span>  <span class="hljs-comment">// 更新缓存</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">update</span><span class="hljs-params">(Book book)</span> &#123;<br>       <span class="hljs-keyword">return</span> bookDao.updateById(book) &gt; <span class="hljs-number">0</span>;<br>   &#125;<br>    <br>   <span class="hljs-meta">@Override</span><br>   <span class="hljs-meta">@CacheInvalidate(name = &quot;book&quot;, key = &quot;#id&quot;)</span>  <span class="hljs-comment">// 删除缓存</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">delete</span><span class="hljs-params">(Integer id)</span> &#123;<br>       <span class="hljs-keyword">return</span> bookDao.deleteById(id) &gt; <span class="hljs-number">0</span>;<br>   &#125;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h5 id="2、application-yml配置范例"><a href="#2、application-yml配置范例" class="headerlink" title="2、application.yml配置范例"></a>2、application.yml配置范例</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">jetcache:</span>  <span class="hljs-comment"># JetCache的配置部分开始。</span><br>  <span class="hljs-attr">statIntervalMinutes:</span> <span class="hljs-number">15</span>  <span class="hljs-comment"># 设置统计信息的刷新间隔为15分钟。统计信息包括缓存命中率、请求次数等。</span><br>  <span class="hljs-attr">areaInCacheName:</span> <span class="hljs-literal">false</span>  <span class="hljs-comment"># 禁用缓存区域（area）在缓存名称中的显示。缓存区域是用于对缓存进行逻辑分组的一种机制。</span><br>  <span class="hljs-attr">local:</span>  <span class="hljs-comment"># 本地缓存的配置部分开始。</span><br>    <span class="hljs-attr">default:</span>  <span class="hljs-comment"># 默认缓存配置。</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">linkedhashmap</span>  <span class="hljs-comment"># 指定使用LinkedHashMap作为本地缓存的类型。</span><br>    <span class="hljs-attr">keyConvertor:</span> <span class="hljs-string">fastjson</span>  <span class="hljs-comment"># 使用Fastjson作为键转换器，将键对象转换为字符串。</span><br>    <span class="hljs-attr">limit:</span> <span class="hljs-number">100</span>  <span class="hljs-comment"># 设置本地缓存的最大容量为100。</span><br>  <span class="hljs-attr">remote:</span>  <span class="hljs-comment"># 远程缓存的配置部分开始。</span><br>    <span class="hljs-attr">default:</span>  <span class="hljs-comment"># 默认远程缓存配置。</span><br>      <span class="hljs-attr">host:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.111</span>  <span class="hljs-comment"># 指定远程缓存的主机地址。</span><br>      <span class="hljs-attr">port:</span> <span class="hljs-number">6379</span>  <span class="hljs-comment"># 指定远程缓存的端口号。</span><br>      <span class="hljs-attr">type:</span> <span class="hljs-string">redis</span>  <span class="hljs-comment"># 指定使用Redis作为远程缓存的类型。</span><br>      <span class="hljs-attr">keyConvertor:</span> <span class="hljs-string">fastjson</span>  <span class="hljs-comment"># 使用Fastjson作为键转换器，将键对象转换为字符串。</span><br>      <span class="hljs-attr">valueEncoder:</span> <span class="hljs-string">java</span>  <span class="hljs-comment"># 指定使用Java序列化器对缓存值进行编码。</span><br>      <span class="hljs-attr">valueDecoder:</span> <span class="hljs-string">java</span>  <span class="hljs-comment"># 指定使用Java序列化器对缓存值进行解码。</span><br>      <span class="hljs-attr">poolConfig:</span>  <span class="hljs-comment"># 连接池的配置部分。</span><br>        <span class="hljs-attr">minIdle:</span> <span class="hljs-number">5</span>  <span class="hljs-comment"># 指定连接池的最小空闲连接数为5。</span><br>        <span class="hljs-attr">maxIdle:</span> <span class="hljs-number">20</span>  <span class="hljs-comment"># 指定连接池的最大空闲连接数为20。</span><br>        <span class="hljs-attr">maxTotal:</span> <span class="hljs-number">50</span>  <span class="hljs-comment"># 指定连接池的最大连接数为50。</span><br></code></pre></td></tr></table></figure><p>这个配置示例涵盖了统计信息刷新间隔、缓存区域显示、本地缓存和远程缓存的相关配置。</p><p><img src="/img/springboot2_img/jetcache%E9%85%8D%E7%BD%AE%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF.jpg" alt="jetcache配置相关信息"></p><h4 id="4、j2cache（缓存整合框架）"><a href="#4、j2cache（缓存整合框架）" class="headerlink" title="4、j2cache（缓存整合框架）"></a>4、j2cache（缓存整合框架）</h4><ul><li>j2cache是一个缓存整合框架，可以提供缓存的整合方案，使各种缓存搭配使用，自身不提供缓存功能</li></ul><h5 id="整合jecache，这里采用-redis-ehcache"><a href="#整合jecache，这里采用-redis-ehcache" class="headerlink" title="整合jecache，这里采用 redis + ehcache"></a>整合jecache，这里采用 redis + ehcache</h5><ul><li><p>1、导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--整合j2cache--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>net.oschina.j2cache<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>j2cache-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.8.5-release<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!--自带redis--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>net.oschina.j2cache<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>j2cache-spring-boot2-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.8.0-release<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!--整合ehcache --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>net.sf.ehcache<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>ehcache<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、配置</p><ul><li><p>①、在application.yml中配置j2cache配置文件名</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">j2cache:</span><br>  <span class="hljs-attr">config-location:</span> <span class="hljs-string">j2cache.properties</span>   <span class="hljs-comment"># j2cache的配置文件名</span><br></code></pre></td></tr></table></figure></li><li><p>②、在j2cache.properties中指定一级缓存、二级缓存、以及1级缓存怎么传到2级缓存</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment"># 1级缓存的配置</span><br><span class="hljs-attr">j2cache.L1.provider_class</span> = <span class="hljs-string">ehcache  # j2cache中的1级缓存用什么</span><br><span class="hljs-attr">ehcache.configXml</span> = <span class="hljs-string">ehcache.xml  # ehcache的配置文件名</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"># 设置是否启用二级缓存  true 代表启用二级缓存</span><br><span class="hljs-attr">j2cache.l2-cache-open</span> = <span class="hljs-string">true</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"># 2级缓存的配置</span><br><span class="hljs-attr">j2cache.L2.provider_class</span> = <span class="hljs-string">net.oschina.j2cache.cache.support.redis.SpringRedisProvider  # 2级缓存用redis</span><br><span class="hljs-attr">j2cache.L2.config_section</span> = <span class="hljs-string">redis  # 指定自定义前缀名，下面redis.hosts 的前缀就是这里配置的</span><br><br><span class="hljs-attr">redis.hosts</span> = <span class="hljs-string">192.168.0.111:6379</span><br><span class="hljs-attr">redis.mode</span> = <span class="hljs-string">single</span><br><span class="hljs-attr">redis.namespace</span> = <span class="hljs-string">j2cache </span><br><span class="hljs-comment"></span><br><span class="hljs-comment"># 1级缓存的数据如何到达2级缓存</span><br><span class="hljs-attr">j2cache.broadcast</span> = <span class="hljs-string">net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy</span><br></code></pre></td></tr></table></figure></li><li><p>③、配置ehcache的配置文件ehcache.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ehcache</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:noNamespaceSchemaLocation</span>=<span class="hljs-string">&quot;http://ehcache.org/ehcache.xsd&quot;</span> <span class="hljs-attr">updateCheck</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">diskStore</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;D:\ehcache&quot;</span>/&gt;</span><br>    <span class="hljs-comment">&lt;!--默认缓存策略--&gt;</span><br>    <span class="hljs-comment">&lt;!--eternal 是否永久存在，设置为true则不会被清除，此时与timeout冲突。通常设置为false--&gt;</span><br>    <span class="hljs-comment">&lt;!--diskPersistent 是否启用磁盘持久化--&gt;</span><br>    <span class="hljs-comment">&lt;!--mexElementsInMemory 最大缓存数量--&gt;</span><br>    <span class="hljs-comment">&lt;!--overflowToDisk 超过最大缓存数量是否持久化到磁盘--&gt;</span><br>    <span class="hljs-comment">&lt;!--timeToIdleSeconds 最大不活动间隔，设置过长缓存容易溢出，设置过段无效果。可用于记录时效性数据。例如验证码--&gt;</span><br>    <span class="hljs-comment">&lt;!--timeToLiveSeconds 最大存活时间--&gt;</span><br>    <span class="hljs-comment">&lt;!--memoryStoreEvictionPolicy 缓存清除策略  lru是长时间不访问的淘汰，lfu是最近访问最少的淘汰--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">defaultCache</span> <span class="hljs-attr">eternal</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">                  <span class="hljs-attr">diskPersistent</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">                  <span class="hljs-attr">maxElementsInMemory</span>=<span class="hljs-string">&quot;1000&quot;</span></span><br><span class="hljs-tag">                  <span class="hljs-attr">overflowToDisk</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">                  <span class="hljs-attr">timeToIdleSeconds</span>=<span class="hljs-string">&quot;60&quot;</span></span><br><span class="hljs-tag">                  <span class="hljs-attr">timeToLiveSeconds</span>=<span class="hljs-string">&quot;60&quot;</span></span><br><span class="hljs-tag">                  <span class="hljs-attr">memoryStoreEvictionPolicy</span>=<span class="hljs-string">&quot;LRU&quot;</span>/&gt;</span><br><br>    <span class="hljs-comment">&lt;!--name 对应@Cacheable 注解中的value值--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">cache</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;smsCode&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">eternal</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">diskPersistent</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">maxElementsInMemory</span>=<span class="hljs-string">&quot;1000&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">overflowToDisk</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">timeToIdleSeconds</span>=<span class="hljs-string">&quot;60&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">timeToLiveSeconds</span>=<span class="hljs-string">&quot;60&quot;</span></span><br><span class="hljs-tag">           <span class="hljs-attr">memoryStoreEvictionPolicy</span>=<span class="hljs-string">&quot;LRU&quot;</span>/&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">ehcache</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>3、使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> CacheChannel cacheChannel;  <span class="hljs-comment">// 缓存对象</span><br>  <br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">sendCodeToSMS</span><span class="hljs-params">(String tele)</span> &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> codeUtils.generator(tele);<br>    cacheChannel.set(<span class="hljs-string">&quot;sms&quot;</span>, tele, code);  <span class="hljs-comment">// 放入缓存</span><br>    <span class="hljs-keyword">return</span> code;<br>&#125;<br>  <br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">checkCode</span><span class="hljs-params">(SMSCode smsCode)</span> &#123;<br>    <span class="hljs-comment">//取出内存中的与传进来的比对</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">code</span> <span class="hljs-operator">=</span> smsCode.getCode();<br>    <span class="hljs-type">String</span> <span class="hljs-variable">queryCode</span> <span class="hljs-operator">=</span> cacheChannel.get(<span class="hljs-string">&quot;sms&quot;</span>,smsCode.getTele()).asString();  <span class="hljs-comment">// 从缓存取出</span><br>    <span class="hljs-keyword">return</span> code.equals(queryCode);<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="2、定时任务"><a href="#2、定时任务" class="headerlink" title="2、定时任务"></a>2、定时任务</h3><h4 id="1、Quartz（比较麻烦）"><a href="#1、Quartz（比较麻烦）" class="headerlink" title="1、Quartz（比较麻烦）"></a>1、Quartz（比较麻烦）</h4><h5 id="1、相关概念"><a href="#1、相关概念" class="headerlink" title="1、相关概念"></a>1、相关概念</h5><blockquote><ul><li>工作（Job）：用于定义具体执行的工作</li><li>工作明细（JobDetail）：用于描述定时工作相关的信息</li><li>触发器（Trigger）：用于描述触发工作的规则，通常使用cron表示式定义调度规则</li><li>调度器（Scheduler）：描述了工作明细与触发器的对应关系</li></ul></blockquote><h5 id="2、cron表达式"><a href="#2、cron表达式" class="headerlink" title="2、cron表达式"></a>2、cron表达式</h5><blockquote><p>在Spring Boot中，可以使用cron表达式来配置定时任务。Cron表达式是一个由6或7个字段组成的字符串，用于指定任务的执行时间。下面是cron表达式的格式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;秒 分 时 日 月 星期 [年]<br></code></pre></td></tr></table></figure><p>每个字段可以接受不同的取值，下面是字段的含义和取值范围：</p><ul><li>秒（0-59）</li><li>分（0-59）</li><li>时（0-23）</li><li>日（1-31）</li><li>月（1-12或JAN-DEC）</li><li>星期（1-7或SUN-SAT，1表示星期天或者SUN）</li><li>年（可选，1970-2099）</li></ul><p>这里是一些示例cron表达式的用法：</p><ul><li><code>0 0 12 * * ?</code>：每天中午12点执行任务</li><li><code>0 15 10 * * ?</code>：每天上午10点15分执行任务</li><li><code>0 0/5 14 * * ?</code>：每天下午2点开始，每隔5分钟执行任务</li><li><code>0 0 8 1 * ?</code>：每月1号早上8点执行任务</li><li><code>0 0 12 ? * MON-FRI</code>：每个工作日中午12点执行任务</li><li><code>0 0 12 1 JAN *</code>：每年1月1日中午12点执行任务</li></ul></blockquote><h5 id="3、整合Quartz"><a href="#3、整合Quartz" class="headerlink" title="3、整合Quartz"></a>3、整合Quartz</h5><ul><li><p>1、导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--整合Quartz--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-quartz<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、编写任务,这个类要继承QueatzJobBean类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 工作，也就是要干嘛</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyQuartz</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">QuartzJobBean</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">executeInternal</span><span class="hljs-params">(JobExecutionContext context)</span> <span class="hljs-keyword">throws</span> JobExecutionException &#123;<br>        System.out.println(<span class="hljs-string">&quot;quartz task run ...&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>3、创建一个配置类，指定工作明细和触发器，并绑定它们的关系</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.springboot.config;<br><br><span class="hljs-keyword">import</span> com.example.springboot.quartz.MyQuartz;<br><span class="hljs-keyword">import</span> org.quartz.*;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">QuartzConfig</span> &#123;<br>    <span class="hljs-comment">//要定义一个工作明细和触发器。再通过调度器把触发器绑定工作明细，工作明细中指定工作</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 工作明细，绑定具体的工作</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> JobDetail <span class="hljs-title function_">printJobDetail</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> JobBuilder.newJob(MyQuartz.class)  <span class="hljs-comment">// 绑定具体的工作</span><br>                .storeDurably()  <span class="hljs-comment">// 如果没有使用这个工作，是否要持久化</span><br>                .build();<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 触发器，绑定对应的工作明细</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> Trigger <span class="hljs-title function_">printJobTrigger</span><span class="hljs-params">()</span> &#123;<br>        ScheduleBuilder&lt;? <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Trigger</span>&gt; schedBuilder = CronScheduleBuilder.cronSchedule(<span class="hljs-string">&quot;0/5 * * * * ?&quot;</span>);  <span class="hljs-comment">//  秒 分 时 日 月 星期  (如果星期写？，代表根据前面的日月匹配星期)</span><br>        <span class="hljs-keyword">return</span> TriggerBuilder.newTrigger()<br>                .withSchedule(schedBuilder)  <span class="hljs-comment">// 设定时间,这里指定的是每5秒触发一次</span><br>                .forJob(printJobDetail())  <span class="hljs-comment">// 指定哪个工作明细</span><br>                .build();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="2、Spring-Task（推荐）"><a href="#2、Spring-Task（推荐）" class="headerlink" title="2、Spring Task（推荐）"></a>2、Spring Task（推荐）</h4><ul><li><p>1、在启动类上加上注解<code>@EnableScheduling</code>,代表开启定时任务功能</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-meta">@EnableScheduling</span>  <span class="hljs-comment">//代表开启定时任务功能</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Springboot22TaskApplication</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>SpringApplication.run(Springboot22TaskApplication.class, args);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>2、在要定时执行的任务上写上注解<code>@Scheduled</code> 表示什么时候执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.springboot.quartz;<br><br><span class="hljs-keyword">import</span> org.springframework.scheduling.annotation.Scheduled;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyBean</span> &#123;<br>    <span class="hljs-meta">@Scheduled(cron = &quot;0/3 * * * * ?&quot;)</span>  <span class="hljs-comment">//每3秒执行一次</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">print</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;spring task .......&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>3、另外，可以选择在application.yml中对定时任务进行配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 定时任务相关配置  可选</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">task:</span><br>    <span class="hljs-attr">scheduling:</span><br>      <span class="hljs-attr">pool:</span><br>        <span class="hljs-attr">size:</span> <span class="hljs-number">1</span>  <span class="hljs-comment"># 任务调度线程池大小，默认 1</span><br>    <span class="hljs-attr">execution:</span><br>      <span class="hljs-attr">thread-name-prefix:</span> <span class="hljs-string">spring_task_</span>  <span class="hljs-comment"># 调度线程名称前缀，默认scheduling-</span><br>      <span class="hljs-attr">shutdown:</span><br>        <span class="hljs-attr">await-termination:</span> <span class="hljs-literal">false</span>  <span class="hljs-comment"># 线程池关闭时等待所有任务完成 false</span><br>        <span class="hljs-attr">await-termination-period:</span> <span class="hljs-string">10s</span>  <span class="hljs-comment"># 调度线程关闭前最大等待时间，确保最后一定关闭</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="3、邮件"><a href="#3、邮件" class="headerlink" title="3、邮件"></a>3、邮件</h3><blockquote><ul><li>SMTP（Simple Mail Transfer Protocol）：简单邮件传输协议，用于发送电子邮件的传输协议</li><li>POP3（Post Office Protocol - Version 3）：用于接收电子邮件的标准协议</li><li>IMAP（Internet Mail Access Protocol）：互联网消息协议，是POP3的替代协议</li></ul></blockquote><h4 id="SpringBoot整合JavaMail"><a href="#SpringBoot整合JavaMail" class="headerlink" title="SpringBoot整合JavaMail"></a>SpringBoot整合JavaMail</h4><ul><li><p>1、导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、配置邮箱</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># application.yml</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">mail:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-string">smtp.163.com</span>  <span class="hljs-comment"># smtp：发邮件；163：网易邮箱，qq：qq邮箱</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">abcd@163.com</span>  <span class="hljs-comment"># 邮箱名称</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">abcd</span>  <span class="hljs-comment"># 授权码</span><br></code></pre></td></tr></table></figure></li><li><p>3、发送简单邮件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//1、自动装配javaMailSender</span><br><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> JavaMailSender javaMailSender;<br>  <br><span class="hljs-comment">//发送人</span><br><span class="hljs-keyword">private</span> String from=<span class="hljs-string">&quot;fayoujian@163.com&quot;</span>;<br><span class="hljs-comment">//接收人</span><br><span class="hljs-keyword">private</span> <span class="hljs-type">String</span> <span class="hljs-variable">to</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;shouyoujian@qq.com&quot;</span>;<br><span class="hljs-comment">//标题</span><br><span class="hljs-keyword">private</span> String subject=<span class="hljs-string">&quot;测试邮件&quot;</span>;<br><span class="hljs-comment">//正文</span><br><span class="hljs-keyword">private</span> <span class="hljs-type">String</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;测试邮件正文内容&quot;</span>;<br>  <br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendMail</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">SimpleMailMessage</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleMailMessage</span>();<br>    message.setFrom(from + <span class="hljs-string">&quot;(小甜甜)&quot;</span>);        <br>    message.setTo(to);<br>    message.setSubject(subject);<br>    message.setText(context);<br>    <br>    javaMailSender.send(message);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>4、发送复杂邮件——链接、附件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//1、自动装配javaMailSender</span><br>  <span class="hljs-meta">@Autowired</span><br>  <span class="hljs-keyword">private</span> JavaMailSender javaMailSender;<br>  <br>  <span class="hljs-comment">//发送人</span><br>  <span class="hljs-keyword">private</span> String from=<span class="hljs-string">&quot;fayoujian@163.com&quot;</span>;<br>  <span class="hljs-comment">//接收人</span><br>  <span class="hljs-keyword">private</span> <span class="hljs-type">String</span> <span class="hljs-variable">to</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;shouyoujian@qq.com&quot;</span>;<br>  <span class="hljs-comment">//标题</span><br>  <span class="hljs-keyword">private</span> <span class="hljs-type">String</span> <span class="hljs-variable">subject</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;测试邮件&quot;</span>;<br>  <span class="hljs-comment">//正文</span><br>  <span class="hljs-keyword">private</span> <span class="hljs-type">String</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&lt;a href=&#x27;https://syea01.github.io/&#x27;&gt; 点开有惊喜 &lt;/a&gt;&quot;</span>;<br>  <br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendMail</span><span class="hljs-params">()</span> &#123;<br>      <span class="hljs-keyword">try</span> &#123;<br>          <span class="hljs-type">MimeMessage</span> <span class="hljs-variable">message</span> <span class="hljs-operator">=</span> javaMailSender.createMimeMessage();<br>          <span class="hljs-type">MimeMessageHelper</span> <span class="hljs-variable">helper</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MimeMessageHelper</span>(message,<span class="hljs-literal">true</span>);  <span class="hljs-comment">// true 代表允许添加附件</span><br>          helper.setFrom(from + <span class="hljs-string">&quot;(小甜甜)&quot;</span>);<br>          helper.setTo(to);<br>          helper.setSubject(subject);<br>          helper.setText(context, <span class="hljs-literal">true</span>);  <span class="hljs-comment">// 发送正文带链接的话，需要指定true</span><br>  <br>          <span class="hljs-comment">//发送附件</span><br>          <span class="hljs-type">File</span> <span class="hljs-variable">f1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;E:\\springboot\\pom.xml&quot;</span>);<br>          <span class="hljs-type">File</span> <span class="hljs-variable">f2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;F:\\壁纸.jpg&quot;</span>);<br>          helper.addAttachment(<span class="hljs-string">&quot;pom.xml&quot;</span>,f1);<br>          helper.addAttachment(<span class="hljs-string">&quot;壁纸.jpg&quot;</span>,f2);<br>          <br>          javaMailSender.send(message);<br>      &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>          e.printStackTrace();<br>      &#125;<br>  &#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="4、消息"><a href="#4、消息" class="headerlink" title="4、消息"></a>4、消息</h3><blockquote><p>三种异步消息传递技术是 JMS（Java Message Service）、AMQP（Advanced Message Queueing Protocol）和 MQTT（Message Queueing Telemetry Transport）。</p><ol><li>JMS（Java Message Service）是一个规范，类似于 JDBC 规范，提供与消息服务相关的 API 接口。JMS 提供了两种消息模型：点对点模型和发布订阅模型。</li></ol><ul><li>点对点模型（Peer-to-Peer）：消息发送到一个队列中，队列保存消息。队列的消息只能被一个消费者消费，或在超时后被丢弃。</li><li>发布订阅模型（Publish-Subscribe）：消息可以被多个消费者消费，生产者与消费者完全独立，不需要感知对方的存在。 JMS 还定义了多种消息类型，包括 TextMessage、MapMessage、BytesMessage、StreamMessage、ObjectMessage 和只包含消息头和属性的 Message。JMS 的实现包括 ActiveMQ、Redis、HornetMQ、RabbitMQ 和 RocketMQ（但 RocketMQ 没有完全遵守 JMS 规范）。</li></ul><ol start="2"><li>AMQP（Advanced Message Queueing Protocol）是一种消息代理规范，也是一种协议，规范了网络交换的数据格式，并兼容 JMS。AMQP 具有跨平台性，服务器供应商、生产者和消费者可以使用不同的语言来实现。 AMQP 定义了不同的消息交换模型，包括直连交换（direct exchange）、扇形交换（fanout exchange）、主题交换（topic exchange）、头交换（headers exchange）和系统交换（system exchange）。AMQP 消息类型只包含 byte[] 类型。AMQP 的实现包括 RabbitMQ、StormMQ 和 RocketMQ。</li><li>MQTT（Message Queueing Telemetry Transport）是一种专为小设备设计的消息队列遥测传输协议，是物联网（IoT）生态系统的重要组成部分。MQTT 使用轻量级的发布订阅模型，支持多个客户端订阅相同的主题并接收相应的消息。MQTT 在低带宽、不稳定网络环境下具有高效的消息传输能力。一些 MQTT 的实现包括 Eclipse Mosquitto、HiveMQ 和 EMQ X。</li></ol><p>这三种异步消息传递技术都有各自的特点和适用场景，可以根据具体的需求选择合适的技术来实现消息传递。</p></blockquote><h4 id="1、整合ActiveMQ"><a href="#1、整合ActiveMQ" class="headerlink" title="1、整合ActiveMQ"></a>1、整合ActiveMQ</h4><h5 id="1、安装ActiveMQ"><a href="#1、安装ActiveMQ" class="headerlink" title="1、安装ActiveMQ"></a>1、安装ActiveMQ</h5><blockquote><p>要在Docker中安装ActiveMQ，您可以按照以下步骤进行操作：</p><ol><li>打开终端或命令提示符，运行以下命令从Docker Hub下载并运行ActiveMQ的官方Docker镜像：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker run -p 61616:61616 -p 8161:8161 --name activemq -d rmohr/activemq</span><br></code></pre></td></tr></table></figure><p>这将下载并运行名为”rmohr&#x2F;activemq”的ActiveMQ Docker镜像。参数<code>-p 61616:61616</code>将宿主机的61616端口映射到容器内的61616端口，用于消息传输。参数<code>-p 8161:8161</code>将宿主机的8161端口映射到容器内的8161端口，用于ActiveMQ的管理控制台。</p><ol start="2"><li>容器启动后，您可以使用以下命令检查容器的状态：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker ps</span><br></code></pre></td></tr></table></figure><p>您应该能够看到名为”activemq”的容器正在运行。</p><ol start="3"><li>现在，您可以通过访问<code>http://localhost:8161</code>在您的浏览器中打开ActiveMQ的管理控制台。默认的用户名和密码分别为”admin”。</li></ol><p>在管理控制台中，您可以配置和监视ActiveMQ实例，创建和管理队列和主题，查看消息等。</p><p>这样，您就成功地在Docker中安装了ActiveMQ，并可以开始使用它进行消息传递和管理。</p></blockquote><h5 id="2、SpringBoot整合ActiveMQ"><a href="#2、SpringBoot整合ActiveMQ" class="headerlink" title="2、SpringBoot整合ActiveMQ"></a>2、SpringBoot整合ActiveMQ</h5><ul><li><p>1、添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--activeMQ--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-activemq<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># application.yml</span><br><br><span class="hljs-comment"># activemq</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">activemq:</span><br>    <span class="hljs-attr">broker-url:</span> <span class="hljs-string">tcp://192.168.0.111:61616</span>  <span class="hljs-comment"># 连接地址</span><br>  <span class="hljs-attr">jms:</span><br>    <span class="hljs-attr">template:</span><br>      <span class="hljs-attr">default-destination:</span> <span class="hljs-string">itheima</span><br>    <span class="hljs-attr">pub-sub-domain:</span> <span class="hljs-literal">true</span>  <span class="hljs-comment"># 如果不设置默认是false，代表点对点模型。设置为true就是广播模型</span><br></code></pre></td></tr></table></figure></li><li><p>3、使用</p><ul><li><p>①、生产消息</p><p>**发送消息：<code>messagingTemplate.convertAndSend(&quot;队列名称&quot;,消息);</code> **</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br>  <span class="hljs-keyword">private</span> JmsMessagingTemplate messagingTemplate;<br>    <br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendMessage</span><span class="hljs-params">(String id)</span> &#123;<br>      System.out.println(<span class="hljs-string">&quot;id:&quot;</span>+id+<span class="hljs-string">&quot;放到队列中&quot;</span>);<br>      messagingTemplate.convertAndSend(<span class="hljs-string">&quot;order.queue.id&quot;</span>,id);  <span class="hljs-comment">// 放到消息队列中</span><br>  &#125;<br>    <br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> String <span class="hljs-title function_">doMessage</span><span class="hljs-params">()</span> &#123;<br>      <span class="hljs-type">String</span> <span class="hljs-variable">id</span> <span class="hljs-operator">=</span> messagingTemplate.receiveAndConvert(<span class="hljs-string">&quot;order.queue.id&quot;</span>,String.class);  <span class="hljs-comment">//从消息队列中取消息（一般不用这种方法接收消息，都是使用注解@JmsListener自动监听消息）</span><br>      System.out.println(<span class="hljs-string">&quot;id:&quot;</span> + id + <span class="hljs-string">&quot;已经取出&quot;</span>);<br>      <span class="hljs-keyword">return</span> id;<br>  &#125;<br></code></pre></td></tr></table></figure></li><li><p>②、设置监听器，消费消息</p><p>使用<code>@JmsListener</code>注解可以监听消息，方法的<strong>参数</strong>就是监听到的消息</p><p>还可以使用<code>@SendTo</code>注解，这个注解可以在当前队列中的消息在处理完这个方法之后，将当前方法的<strong>返回值</strong>放到另一个队列中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MessageListener</span> &#123;<br>    <span class="hljs-meta">@JmsListener(destination = &quot;order.queue.id&quot;)</span>  <span class="hljs-comment">//监听消息队列，如果有消息，立马执行这个方法，进行消费</span><br>    <span class="hljs-meta">@SendTo(&quot;order.other.queue.id&quot;)</span>  <span class="hljs-comment">//可以在当前队列中的消息在处理完这个方法之后，将当前方法的返回值放到另一个队列中</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">receive</span><span class="hljs-params">(String id)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;已接收id: &quot;</span> + id);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;new: &quot;</span> + id;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h4 id="2、整合RabbitMQ"><a href="#2、整合RabbitMQ" class="headerlink" title="2、整合RabbitMQ"></a>2、整合RabbitMQ</h4><h5 id="1、安装RabbitMQ"><a href="#1、安装RabbitMQ" class="headerlink" title="1、安装RabbitMQ"></a>1、安装RabbitMQ</h5><blockquote><p>要在Docker中安装RabbitMQ，您可以按照以下步骤进行操作：</p><ol><li>打开终端或命令提示符，运行以下命令从Docker Hub下载并运行RabbitMQ的官方Docker镜像：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker run -d --hostname my-rabbit --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3-management</span><br></code></pre></td></tr></table></figure><p>这将下载并运行名为”rabbitmq:3-management”的RabbitMQ Docker镜像。参数<code>-p 5672:5672</code>将宿主机的5672端口映射到容器内的5672端口，用于消息传输。参数<code>-p 15672:15672</code>将宿主机的15672端口映射到容器内的15672端口，用于RabbitMQ的管理控制台。</p><ol start="2"><li>容器启动后，您可以使用以下命令检查容器的状态：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker ps</span><br></code></pre></td></tr></table></figure><p>您应该能够看到名为”rabbitmq”的容器正在运行。 </p><ol start="3"><li>现在，您可以通过访问<code>http://localhost:15672</code>在您的浏览器中打开RabbitMQ的管理控制台。默认的用户名和密码分别为”guest”。</li></ol><p>在管理控制台中，您可以配置和监视RabbitMQ实例，创建和管理队列、交换器、绑定等。</p><p>这样，您就成功地在Docker中安装了RabbitMQ，并可以开始使用它进行消息传递和管理。</p></blockquote><h5 id="2、两种不同的交换机：direct模式（直连模式）、topic模式（主题模式）"><a href="#2、两种不同的交换机：direct模式（直连模式）、topic模式（主题模式）" class="headerlink" title="2、两种不同的交换机：direct模式（直连模式）、topic模式（主题模式）"></a>2、两种不同的交换机：direct模式（直连模式）、topic模式（主题模式）</h5><blockquote><p>RabbitMQ中的Topic模式和Direct模式是两种不同的消息路由模式，它们在消息的路由机制和消费者的订阅方式上有所区别。</p><p>Direct模式：</p><ul><li>Direct模式使用简单的消息路由方式，它将消息根据绑定的路由键（Routing Key）与队列的绑定键（Binding Key）进行精确匹配。只有当消息的路由键与绑定键完全匹配时，才会将消息路由到对应的队列。</li><li>在Direct模式下，生产者将消息发送到Exchange，并指定一个具体的Routing Key。消费者通过绑定队列到Exchange，并指定相同的Routing Key来接收消息。</li><li>Direct模式适用于一对一的消息传递，其中每个消息只被一个消费者消费。</li></ul><p>Topic模式：</p><ul><li>Topic模式使用灵活的消息路由方式，它将消息根据绑定的路由键与队列的绑定键进行模式匹配。路由键可以使用通配符进行匹配，支持两种通配符：</li><li>*：匹配一个单词，例如<code>topic.*</code>可以匹配”topic.a”、”topic.ab”等。</li><li>#：匹配任意个单词，例如<code>topic.#</code>可以匹配”topic.aa”、”topic.aa.ab”、”topic.a.b.ac”等。</li><li>在Topic模式下，生产者将消息发送到Exchange，并指定一个具体的Routing Key。消费者通过绑定队列到Exchange，并指定带有通配符的Routing Key来接收符合模式匹配的消息。</li><li>Topic模式适用于一对多的消息传递，其中一个消息可以被多个符合匹配规则的消费者接收。</li></ul><p>总结：</p><ul><li>Direct模式使用精确匹配的方式，消息只能被一个消费者消费，适用于一对一的消息传递。</li><li>Topic模式使用模式匹配的方式，消息可以被多个消费者消费，适用于一对多的消息传递。通配符 * 和 # 提供了更灵活的路由选择。</li></ul></blockquote><h5 id="3、SpringBoot整合RabbitMQ"><a href="#3、SpringBoot整合RabbitMQ" class="headerlink" title="3、SpringBoot整合RabbitMQ"></a>3、SpringBoot整合RabbitMQ</h5><ul><li><p>①、添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--RabbitMQ--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>②、配置RabbitMQ的连接</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># application.yml</span><br><br><span class="hljs-comment"># rabbitmq</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">rabbitmq:</span><br>    <span class="hljs-attr">host:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.111</span><br>    <span class="hljs-attr">port:</span> <span class="hljs-number">5672</span><br></code></pre></td></tr></table></figure></li><li><p>③、配置类中定义消息队列、交换机、绑定信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.amqp.core.Binding;<br><span class="hljs-keyword">import</span> org.springframework.amqp.core.BindingBuilder;<br><span class="hljs-keyword">import</span> org.springframework.amqp.core.DirectExchange;<br><span class="hljs-keyword">import</span> org.springframework.amqp.core.Queue;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RabbitConfigDirect</span> &#123;<br><br>    <span class="hljs-comment">//定义存储消息的消息队列对象</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 可以定义多个Queue类型的Bean，就是定义多个队列</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> Queue <span class="hljs-title function_">directQueue</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-comment">//name:队列名称</span><br>        <span class="hljs-comment">//druable:是否持久化，默认false</span><br>        <span class="hljs-comment">//exclusive:是否当前连接专用，默认false。连接关闭之后队列就被删除</span><br>        <span class="hljs-comment">//autoDelete:是否自动删除，当生产者或消费者不再使用此队列，自动删除</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Queue</span>(<span class="hljs-string">&quot;direct_queue&quot;</span>);  <span class="hljs-comment">// 队列名字</span><br>    &#125;<br><br>    <span class="hljs-comment">//定义交换机，用于绑定上面的消息队列</span><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 一个交换机可以绑定多个队列</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> DirectExchange <span class="hljs-title function_">directExchange</span><span class="hljs-params">()</span>&#123;<span class="hljs-comment">//这里是DirectExchange（直连交换机）,还可以是TopicExchange（主题交换机）</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DirectExchange</span>(<span class="hljs-string">&quot;directExchange&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">//把上面的交换机和消息队列绑定起来</span><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 可以定义多个Binding类型的Bean</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> Binding <span class="hljs-title function_">bindingDirect</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> BindingBuilder.bind(directQueue()).to(directExchange())  <span class="hljs-comment">//绑定</span><br>                .with(<span class="hljs-string">&quot;direct&quot;</span>);  <span class="hljs-comment">//起个名称，也就是 routingKey</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>④、使用</p><ul><li><p>生产消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> AmqpTemplate amqpTemplate;<br>    <br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendMessage</span><span class="hljs-params">(String id)</span> &#123;<br>    System.out.println(<span class="hljs-string">&quot;id:&quot;</span> + id + <span class="hljs-string">&quot;放到队列中&quot;</span>);<br>    amqpTemplate.convertAndSend(<span class="hljs-string">&quot;directExchange&quot;</span>, <span class="hljs-string">&quot;direct&quot;</span>, id);  <span class="hljs-comment">// 交换机名称，routingKey，消息</span><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>定义监听，消费消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MessageListener</span> &#123;<br>    <span class="hljs-meta">@RabbitListener(queues = &quot;direct_queue&quot;)</span>  <span class="hljs-comment">//需要指定队列名称。作用和ActiveMQ的@JmsListener注解类似</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">receive</span><span class="hljs-params">(String id)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;已接收到消息，id = &quot;</span> + id);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h4 id="3、整合RocketMQ"><a href="#3、整合RocketMQ" class="headerlink" title="3、整合RocketMQ"></a>3、整合RocketMQ</h4><h5 id="1、安装RocketMQ"><a href="#1、安装RocketMQ" class="headerlink" title="1、安装RocketMQ"></a>1、安装RocketMQ</h5><blockquote><ol><li>拉取镜像</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker pull rocketmqinc/rocketmq</span><br></code></pre></td></tr></table></figure><ol start="2"><li>创建RocketMQ容器的名称服务器（NameServer）。运行以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker run -d --restart=always --name rmqnamesrv --privileged=<span class="hljs-literal">true</span> -p 9876:9876  -v /docker/rocketmq/nameserver/logs:/root/logs -v /docker/rocketmq/nameserver/store:/root/store -e <span class="hljs-string">&quot;MAX_POSSIBLE_HEAP=100000000&quot;</span> rocketmqinc/rocketmq sh mqnamesrv</span><br></code></pre></td></tr></table></figure><p>这将在后台运行一个名为<code>rmqnamesrv</code>的容器，并将容器的9876端口映射到主机的9876端口。</p><ol start="3"><li>在主机编写broker的配置文件：<code>/opt/docker/rocketmq/broker.conf</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;brokerClusterName = DefaultCluster<br>&gt;brokerName = broker-a<br>&gt;brokerId = <span class="hljs-number">0</span><br>&gt;deleteWhen = <span class="hljs-number">04</span><br>&gt;fileReservedTime = <span class="hljs-number">48</span><br>&gt;brokerRole = ASYNC_MASTER<br>&gt;flushDiskType = ASYNC_FLUSH<br>&gt;brokerIP1 = <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.111</span>                       <br></code></pre></td></tr></table></figure><ol start="4"><li>创建RocketMQ容器的消息服务器（Broker）。运行以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker run -d --restart=always --name rmqbroker --<span class="hljs-built_in">link</span> rmqnamesrv:namesrv -p 10911:10911 -p 10909:10909 --privileged=<span class="hljs-literal">true</span> -v /docker/rocketmq/data/broker/logs:/root/logs -v /docker/rocketmq/data/broker/store:/root/store -v /docker/rocketmq/conf/broker.conf:/opt/docker/rocketmq/broker.conf -e <span class="hljs-string">&quot;NAMESRV_ADDR=namesrv:9876&quot;</span> -e <span class="hljs-string">&quot;MAX_POSSIBLE_HEAP=200000000&quot;</span> rocketmqinc/rocketmq sh mqbroker -c /opt/docker/rocketmq/broker.conf</span><br></code></pre></td></tr></table></figure><p>这将在后台运行一个名为<code>rmqbroker</code>的容器，并将容器的10909和10911端口映射到主机的相应端口。同时，我们将<code>NAMESRV_ADDR</code>环境变量设置为<code>rmqnamesrv:9876</code>，以指定NameServer的地址。</p><ol start="5"><li>您现在已经成功在Docker中安装并运行了RocketMQ。您可以使用RocketMQ客户端连接到<code>localhost:9876</code>，开始使用RocketMQ。</li></ol></blockquote><h5 id="2、SpringBoot整合RocketMQ"><a href="#2、SpringBoot整合RocketMQ" class="headerlink" title="2、SpringBoot整合RocketMQ"></a>2、SpringBoot整合RocketMQ</h5><ul><li><p>1、导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--整合rocketmq--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.rocketmq<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>rocketmq-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.2.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、在application.yml中配置name-server和生产者的组</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># rocketmq</span><br><span class="hljs-attr">rocketmq:</span><br>  <span class="hljs-attr">name-server:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.111</span><span class="hljs-string">:9876</span><br>  <span class="hljs-attr">producer:</span>  <span class="hljs-comment"># 生产者</span><br>    <span class="hljs-attr">group:</span> <span class="hljs-string">group_rocketmq</span>  <span class="hljs-comment"># 自定义组名</span><br></code></pre></td></tr></table></figure></li><li><p>3、使用</p><ul><li><p>①、生产消息</p><p>生产消息（同步）：<code>rocketMQTemplate.convertAndSend(&quot;自定义消息存放位置&quot;, 消息);</code> </p><p>生产消息（异步）：<code>rocketMQTemplate.asyncSend(&quot;自定义消息存放位置&quot;, 消息, callback); </code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> RocketMQTemplate rocketMQTemplate;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendMessage</span><span class="hljs-params">(String id)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;生产消息，id： &quot;</span> + id);<br><span class="hljs-comment">//        rocketMQTemplate.convertAndSend(&quot;order_id&quot;, id);  // 生产消息（这一行的写法是同步消息，正常情况应该使用异步消息）</span><br>        <br>        <span class="hljs-type">SendCallback</span> <span class="hljs-variable">callback</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SendCallback</span>() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onSuccess</span><span class="hljs-params">(SendResult sendResult)</span> &#123;<br>                <span class="hljs-comment">// 异步消息发送成功的回调处理</span><br>                System.out.println(<span class="hljs-string">&quot;消息发送成功&quot;</span>);<br>            &#125;<br><br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onException</span><span class="hljs-params">(Throwable throwable)</span> &#123;<br>                <span class="hljs-comment">// 异步消息发送异常的回调处理</span><br>                System.out.println(<span class="hljs-string">&quot;消息发送失败！&quot;</span>);<br>            &#125;<br>        &#125;;<br>        rocketMQTemplate.asyncSend(<span class="hljs-string">&quot;order_id&quot;</span>,id,callback);  <span class="hljs-comment">//异步消息.三个参数：消息存放的位置、消息、以及消息成功或失败应该怎么处理</span><br>    &#125;<br></code></pre></td></tr></table></figure></li><li><p>②、消费消息</p><p>需实现接口RocketMQListener，泛型就是消息的类型</p><p>通过注解<code>@RocketMQMessageListener(topic = &quot;消息存放位置&quot;,consumerGroup = &quot;group_rocketmq&quot;) </code>监听消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.rocketmq.spring.annotation.RocketMQMessageListener;<br><span class="hljs-keyword">import</span> org.apache.rocketmq.spring.core.RocketMQListener;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@RocketMQMessageListener(topic = &quot;order_id&quot;,consumerGroup = &quot;group_rocketmq&quot;)</span>  <span class="hljs-comment">//至少必须指定这两个参数</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MessageListener</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">RocketMQListener</span>&lt;String&gt; &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onMessage</span><span class="hljs-params">(String id)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;消费消息，id：    &quot;</span> + id);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h4 id="4、整合Kafka"><a href="#4、整合Kafka" class="headerlink" title="4、整合Kafka"></a>4、整合Kafka</h4><h5 id="1、安装Kafka"><a href="#1、安装Kafka" class="headerlink" title="1、安装Kafka"></a>1、安装Kafka</h5><blockquote><p>要在Docker中安装Apache Kafka，您可以按照以下步骤进行操作：</p><ol><li><p>首先，确保您已经安装了Docker并具有适当的权限来执行Docker命令。</p></li><li><p>下载Kafka镜像。您可以从Docker Hub下载官方的Apache Kafka镜像。运行以下命令：</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker pull confluentinc/cp-kafka</span><br></code></pre></td></tr></table></figure><p>这将下载最新版本的Apache Kafka镜像。</p><ol start="3"><li>创建一个网络，以便Kafka容器之间可以相互通信。运行以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker network create kafka-net</span><br></code></pre></td></tr></table></figure><ol start="4"><li>创建Kafka容器。运行以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker run -d --name kafka -p 9092:9092 --network kafka-net -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092 -e KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 -e KAFKA_CREATE_TOPICS=<span class="hljs-string">&quot;topic1:1:1&quot;</span> confluentinc/cp-kafka</span><br></code></pre></td></tr></table></figure><p>该命令将在后台运行一个名为<code>kafka</code>的容器，并将容器的9092端口映射到主机的9092端口。同时，我们通过环境变量设置了Kafka的配置参数，如<code>KAFKA_ADVERTISED_LISTENERS</code>和<code>KAFKA_ZOOKEEPER_CONNECT</code>。这里我们还创建了一个名为<code>topic1</code>的主题。</p><p>如果您想要创建多个主题，可以在<code>KAFKA_CREATE_TOPICS</code>环境变量中指定多个主题的配置，格式为<code>&lt;topic_name&gt;:&lt;num_partitions&gt;:&lt;replication_factor&gt;</code>。</p><ol start="5"><li>创建一个ZooKeeper容器来管理Kafka。运行以下命令：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">docker run -d --name zookeeper -p 2181:2181 --network kafka-net -e ZOOKEEPER_CLIENT_PORT=2181 confluentinc/cp-zookeeper</span><br></code></pre></td></tr></table></figure><p>这将在后台运行一个名为<code>zookeeper</code>的容器，并将容器的2181端口映射到主机的2181端口。</p><p>现在，您已经成功在Docker中安装和运行了Apache Kafka。您可以使用Kafka的相关工具和客户端连接到<code>localhost:9092</code>，开始使用Kafka进行消息传递。</p></blockquote><h5 id="2、SpringBoot整合Kafka"><a href="#2、SpringBoot整合Kafka" class="headerlink" title="2、SpringBoot整合Kafka"></a>2、SpringBoot整合Kafka</h5><ul><li><p>1、导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--整合kafka--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.kafka<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-kafka<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、在application.yml中配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># kafka</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">kafka:</span><br>    <span class="hljs-attr">bootstrap-servers:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.0</span><span class="hljs-number">.111</span><span class="hljs-string">:9092</span><br>    <span class="hljs-attr">consumer:</span><br>      <span class="hljs-attr">group-id:</span> <span class="hljs-string">order</span><br></code></pre></td></tr></table></figure></li><li><p>3、使用</p><ul><li><p>①、生产消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Autowired</span><br>  <span class="hljs-keyword">private</span> KafkaTemplate&lt;String,String&gt; kafkaTemplate;<br>    <br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sendMessage</span><span class="hljs-params">(String id)</span> &#123;<br>      System.out.println(<span class="hljs-string">&quot;生产消息：id：  &quot;</span> + id);<br>      kafkaTemplate.send(<span class="hljs-string">&quot;topic1&quot;</span>,id);  <span class="hljs-comment">//生产消息</span><br>  &#125;<br></code></pre></td></tr></table></figure></li><li><p>②、消费消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.kafka.clients.consumer.ConsumerRecord;<br><span class="hljs-keyword">import</span> org.springframework.kafka.annotation.KafkaListener;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MessageListener</span> &#123;<br>    <span class="hljs-meta">@KafkaListener(topics = &quot;topic1&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onMessage</span><span class="hljs-params">(ConsumerRecord&lt;String, String&gt; record)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;消费消息，id：   &quot;</span> + record.value());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h2 id="6、监控"><a href="#6、监控" class="headerlink" title="6、监控"></a>6、监控</h2><h3 id="1、监控的意义"><a href="#1、监控的意义" class="headerlink" title="1、监控的意义"></a>1、监控的意义</h3><ul><li>监控服务状态是否宕机</li><li>监控服务运行指标（内存、虚拟机、线程、请求等）</li><li>监控日志</li><li>管理服务（服务下线）</li></ul><blockquote><p>监控的实施方式：</p><ul><li>显示监控信息的服务器：用于获取服务信息，并显示对应的信息</li><li>运行的服务：启动时主动上报，告知监控服务器自己需要受到监控</li></ul></blockquote><h3 id="2、可视化监控平台"><a href="#2、可视化监控平台" class="headerlink" title="2、可视化监控平台"></a>2、可视化监控平台</h3><ul><li>Spring Boot Admin：开源社区项目，用于管理和监控SpringBoot应用程。客户端注册到服务端后，通过HTTP请求方式，服务端定期从客户端获取对应的信息，并通过UI界面展示对应信息。</li></ul><h4 id="1、服务器端"><a href="#1、服务器端" class="headerlink" title="1、服务器端"></a>1、服务器端</h4><ul><li><p>1、导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--springboot-admin 服务端--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>de.codecentric<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-admin-starter-server<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.7.4<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!--一定要配置成web项目--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、application.yml中配置端口</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8080</span><br></code></pre></td></tr></table></figure></li><li><p>3、在启动类上加上注解<code>@EnableAdminServer</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> de.codecentric.boot.admin.server.config.EnableAdminServer;<br><span class="hljs-keyword">import</span> org.springframework.boot.SpringApplication;<br><span class="hljs-keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><br><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-meta">@EnableAdminServer</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Springboot25AdminServerApplication</span> &#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>SpringApplication.run(Springboot25AdminServerApplication.class, args);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="2、客户端（被监控）"><a href="#2、客户端（被监控）" class="headerlink" title="2、客户端（被监控）"></a>2、客户端（被监控）</h4><ul><li><p>1、导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>de.codecentric<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-admin-starter-client<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.7.4<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、在application.yml中配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">boot:</span><br>    <span class="hljs-attr">admin:</span><br>      <span class="hljs-attr">client:</span><br>        <span class="hljs-attr">url:</span> <span class="hljs-string">http://localhost:8080</span>  <span class="hljs-comment"># 代表被这个网址监控</span><br><span class="hljs-attr">management:</span><br>  <span class="hljs-attr">endpoint:</span><br>    <span class="hljs-attr">health:</span><br>      <span class="hljs-attr">show-details:</span> <span class="hljs-string">always</span>  <span class="hljs-comment"># 开放健康信息</span><br>  <span class="hljs-attr">endpoints:</span><br>    <span class="hljs-attr">web:</span><br>      <span class="hljs-attr">exposure:</span><br>        <span class="hljs-attr">include:</span> <span class="hljs-string">&quot;*&quot;</span>  <span class="hljs-comment"># “*” 代表开放全部</span><br><br><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">80</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="3、监控原理"><a href="#3、监控原理" class="headerlink" title="3、监控原理"></a>3、监控原理</h3><ul><li>Actuator提供了SpringBoot生产就绪功能，通过端点的配置与访问，获取端点信息</li><li>端点描述了一组监控信息，SpringBoot提供了多个内置端点，也可以根据需要自定义端点信息</li><li>访问当前应用所有端点信息：<code>/actuator</code></li><li>访问端点详细信息：<code>/actuator/端点名称</code></li></ul><blockquote><p>Spring Boot Admin是一个用于管理和监控Spring Boot应用程序的开源工具。它提供了一个用户友好的Web界面，可以用来监视应用程序的健康状况、配置信息、日志文件等。</p><p>以下是一些常用的Spring Boot Admin端点：</p><ol><li><code>/actuator/health</code>: 用于检查应用程序的健康状况。返回应用程序的健康状态信息，例如是否存活、数据库连接状态等。</li><li><code>/actuator/info</code>: 用于显示应用程序的自定义信息。您可以在应用程序的配置文件中配置自定义信息，例如应用程序的版本号、描述等。</li><li><code>/actuator/metrics</code>: 用于查看应用程序的各种度量指标。包括CPU使用率、内存使用情况、请求数量等。</li><li><code>/actuator/loggers</code>: 用于查看和修改应用程序的日志级别。</li><li><code>/actuator/mappings</code>: 用于显示应用程序的URL映射信息。</li></ol><p>在<code>application.yml</code>配置文件中，您可以配置Spring Boot Admin端点的访问和安全性。</p><p>以下是一个示例的<code>application.yml</code>配置文件，其中包含了一些常用的Spring Boot Admin配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">&gt;spring:</span><br><span class="hljs-string">&gt;boot:</span><br> <span class="hljs-attr">admin:</span><br>   <span class="hljs-attr">client:</span><br>     <span class="hljs-attr">url:</span> <span class="hljs-string">http://admin-server:8080</span><br>     <span class="hljs-attr">username:</span> <span class="hljs-string">admin</span><br>     <span class="hljs-attr">password:</span> <span class="hljs-string">password</span><br></code></pre></td></tr></table></figure><p>上述配置文件中的关键部分如下：</p><ul><li><code>spring.boot.admin.client.url</code>：配置Spring Boot Admin Server的URL。</li><li><code>spring.boot.admin.client.username</code>和<code>spring.boot.admin.client.password</code>：配置连接Spring Boot Admin Server所需的用户名和密码。</li></ul><p>请注意，您需要根据您的实际环境和需求进行适当的配置调整。确保将<code>spring.boot.admin.client.url</code>设置为正确的Spring Boot Admin Server的URL，并提供正确的用户名和密码进行身份验证。</p><p>通过上述配置，您的Spring Boot应用程序将能够与Spring Boot Admin Server建立连接，并将应用程序的信息显示在Spring Boot Admin界面中。</p></blockquote><ul><li><p>启用指定端点</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">management:</span> <br>  <span class="hljs-attr">endpoint:</span><br>    <span class="hljs-attr">health:</span>  <span class="hljs-comment"># 端点名称</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">show-details:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">beans:</span>  <span class="hljs-comment"># 端点名称</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></li><li><p>启用所有端点</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">management:</span><br>  <span class="hljs-attr">endpoints:</span><br>    <span class="hljs-attr">enabled-by-default:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="4、自定义监控指标"><a href="#4、自定义监控指标" class="headerlink" title="4、自定义监控指标"></a>4、自定义监控指标</h3><h4 id="1、系统端点添加监控指标"><a href="#1、系统端点添加监控指标" class="headerlink" title="1、系统端点添加监控指标"></a>1、系统端点添加监控指标</h4><h5 id="1、自定义info端点（信息监控）"><a href="#1、自定义info端点（信息监控）" class="headerlink" title="1、自定义info端点（信息监控）"></a>1、自定义info端点（信息监控）</h5><p>为info端点添加自定义指标</p><ul><li><p>实现接口InfoContributor，重写方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.boot.actuate.info.Info;<br><span class="hljs-keyword">import</span> org.springframework.boot.actuate.info.InfoContributor;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 把自定义信息加到SpringBootAdmin的info上</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">InfoConfig</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">InfoContributor</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">contribute</span><span class="hljs-params">(Info.Builder builder)</span> &#123;<br>        builder.withDetail(<span class="hljs-string">&quot;runTime&quot;</span>,System.currentTimeMillis());<br>        <span class="hljs-type">Map</span> <span class="hljs-variable">infoMap</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>        infoMap.put(<span class="hljs-string">&quot;buildTime&quot;</span>,<span class="hljs-string">&quot;1999&quot;</span>);<br>        builder.withDetails(infoMap);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>效果：</p></li></ul><p><img src="/img/springboot2_img/springbootadmin-info%E9%85%8D%E7%BD%AE.jpg" alt="springbootadmin-info配置"></p><h5 id="2、自定义health端点（健康监控）"><a href="#2、自定义health端点（健康监控）" class="headerlink" title="2、自定义health端点（健康监控）"></a>2、自定义health端点（健康监控）</h5><ul><li><p>继承接口AbstractHealthIndicator，重写方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.boot.actuate.health.AbstractHealthIndicator;<br><span class="hljs-keyword">import</span> org.springframework.boot.actuate.health.Health;<br><span class="hljs-keyword">import</span> org.springframework.boot.actuate.health.Status;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HealthConfig</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractHealthIndicator</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doHealthCheck</span><span class="hljs-params">(Health.Builder builder)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">condition</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br>        <span class="hljs-keyword">if</span> (condition) &#123;<br>            builder.withDetail(<span class="hljs-string">&quot;aaaa&quot;</span>, <span class="hljs-string">&quot;aaaa&quot;</span>);<br><span class="hljs-comment">//            builder.up();  //代表健康</span><br>            builder.status(Status.UP); <span class="hljs-comment">//代表健康</span><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            builder.withDetail(<span class="hljs-string">&quot;问题&quot;</span>, <span class="hljs-string">&quot;问题&quot;</span>);<br><span class="hljs-comment">//            builder.down();</span><br>            builder.status(Status.OUT_OF_SERVICE);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>效果：</p><p><img src="/img/springboot2_img/springbootadmin-health.jpg" alt="springbootadmin-health"></p></li></ul><h5 id="3、自定义metrics端点（性能监控）"><a href="#3、自定义metrics端点（性能监控）" class="headerlink" title="3、自定义metrics端点（性能监控）"></a>3、自定义metrics端点（性能监控）</h5><p><img src="/img/springboot2_img/springbootadmin%E6%80%A7%E8%83%BDmetrics%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E6%A0%87.jpg" alt="springbootadmin性能metrics自定义指标"></p><p>展示：</p><p><img src="/img/springboot2_img/springbootadmin-metrics.jpg" alt="springbootadmin-metrics"></p><h4 id="2、自定义端点"><a href="#2、自定义端点" class="headerlink" title="2、自定义端点"></a>2、自定义端点</h4><p>在Spring Boot Admin中，可以通过自定义Endpoint和度量指标来添加自定义的性能指标。下面是一些添加自定义指标的步骤：</p><ol><li><p>创建自定义Endpoint：创建一个继承自<code>Endpoint</code>类的自定义Endpoint，用于公开您的自定义指标。您可以在Endpoint中定义方法来获取和计算您的指标数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.springframework.boot.actuate.endpoint.annotation.Endpoint;<br><span class="hljs-keyword">import</span> org.springframework.boot.actuate.endpoint.annotation.ReadOperation;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@Endpoint(id = &quot;custom&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CustomEndpoint</span> &#123;<br>    <span class="hljs-meta">@ReadOperation</span><br>    <span class="hljs-keyword">public</span> CustomMetrics <span class="hljs-title function_">getCustomMetrics</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// 从您的应用程序中获取自定义指标数据</span><br>        <span class="hljs-comment">// 返回一个包含自定义指标数据的CustomMetrics对象</span><br>        <span class="hljs-type">CustomMetrics</span> <span class="hljs-variable">customMetrics</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CustomMetrics</span>();<br>        customMetrics.setCustomMetric1(<span class="hljs-number">222</span>);<br>        customMetrics.setCustomMetric2(<span class="hljs-number">3333</span>);<br>        <span class="hljs-keyword">return</span> customMetrics;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>创建自定义度量指标：创建一个包含自定义指标数据的<code>CustomMetrics</code>类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CustomMetrics</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> customMetric1;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> customMetric2;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>访问自定义指标：启动应用程序并访问Spring Boot Admin界面。在应用程序的详情页面中，您将看到一个名为”custom”的Endpoint。点击该Endpoint，您将看到您定义的自定义指标数据。</p></li></ol><p>这样，您就可以通过自定义Endpoint和自定义度量指标在Spring Boot Admin中添加和展示自定义的性能指标。您可以根据应用程序的需求，定义不同的自定义Endpoint和自定义指标类来管理和监控各种性能指标数据。</p><p>展示：</p><p><img src="/img/springboot2_img/springbootadmin-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%AB%AF%E7%82%B9.jpg" alt="springbootadmin-自定义端点"></p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><h2 id="1、自动配置"><a href="#1、自动配置" class="headerlink" title="1、自动配置"></a>1、自动配置</h2><h3 id="1、Bean加载方式"><a href="#1、Bean加载方式" class="headerlink" title="1、Bean加载方式"></a>1、Bean加载方式</h3><p><img src="/img/springboot2_img/bean%E5%8A%A0%E8%BD%BD%E7%9A%848%E7%A7%8D%E6%96%B9%E5%BC%8F.jpg" alt="bean加载的8种方式"></p><h3 id="2、Bean加载控制"><a href="#2、Bean加载控制" class="headerlink" title="2、Bean加载控制"></a>2、Bean加载控制</h3><blockquote><p>bean的加载控制指的是根据特定情况对bean进行选择性加载以达到适用于项目的目标</p></blockquote><ul><li>使用<code>@Conditional</code>注解的派生注解设置各种组合条件控制bean的加载</li></ul><h3 id="3、Bean依赖属性配置"><a href="#3、Bean依赖属性配置" class="headerlink" title="3、Bean依赖属性配置"></a>3、Bean依赖属性配置</h3><ol><li>将业务功能的资源提取为独立的属性类（***properties），并设置读取配置文件的信息：在这一步骤中，你将业务功能所需的资源抽取出来，创建一个独立的属性类（通常以.properties文件的形式）。这个属性类负责读取配置文件中的信息，为业务功能提供必要的资源。</li><li>使用固定格式的配置文件注入属性类的数据：在这一步骤中，你需要创建一个配置文件，用于注入属性类所需的数据。这个配置文件必须按照一定的固定格式，以确保属性类能够正确读取并使用其中的数据。</li><li>定义业务功能bean，并使用<code>@EnableConfigurationProperties</code>注解来加载属性类：在这一步骤中，你需要定义业务功能的bean对象，并使用<code>@EnableConfigurationProperties</code>注解来指定该bean需要加载属性类的信息。这样做可以确保在创建业务功能的实例时，相关的属性类也会被加载并与之关联。</li><li>使用<code>@Import</code>导入业务功能bean，解耦并强制加载bean：在这一步骤中，通常会使用<code>@Import</code>注解来导入业务功能的bean。这种导入方式可以实现解耦，使得业务功能的bean能够被正确加载和管理，而不需要在代码中显式地强制加载。</li></ol><p>总结：</p><ul><li>业务bean的属性可以设置默认值，即在属性类中可以定义属性的默认取值。</li><li>当需要设置属性时，可以通过配置文件传递属性值，由属性类读取配置文件中的值并将其注入到业务bean中。</li><li>应尽量避免在业务bean中使用强制加载方式。相反，应根据需要使用<code>@Import</code>注解来导入业务功能的bean，以降低Spring容器管理bean的强度，实现更灵活的加载机制。</li></ul><h3 id="4、自动配置原理"><a href="#4、自动配置原理" class="headerlink" title="4、自动配置原理"></a>4、自动配置原理</h3><h3 id="5、变更自动配置"><a href="#5、变更自动配置" class="headerlink" title="5、变更自动配置"></a>5、变更自动配置</h3><p><img src="/img/springboot2_img/%E5%8F%98%E6%9B%B4%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE.jpg" alt="变更自动配置"></p><p><img src="/img/springboot2_img/%E5%8F%98%E6%9B%B4%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E6%80%BB%E7%BB%93.jpg" alt="变更自动配置总结"></p><h2 id="2、自定义starter"><a href="#2、自定义starter" class="headerlink" title="2、自定义starter"></a>2、自定义starter</h2><p>在Spring Boot中，可以通过自定义starter来封装一组相关的依赖和配置，以便在其他项目中进行重复使用。自定义starter可以简化应用程序的配置和依赖管理，提供一种可插拔的方式来扩展和定制Spring Boot应用。</p><p>以下是自定义Spring Boot starter的基本步骤：</p><ol><li>创建一个Maven或Gradle项目：作为自定义starter的项目，可以使用Maven或Gradle构建工具来创建项目。</li><li>定义starter模块：在项目中创建一个模块，作为starter的核心模块。在该模块中，可以包含以下内容：<ul><li>自定义的配置类：用于配置和初始化相关的组件。</li><li>自定义的自动配置类：用于自动配置相关的组件。</li><li>自定义的依赖：将需要的依赖添加到项目的依赖管理中。</li></ul></li><li>创建自动配置类：在starter模块中，创建一个自动配置类，用于自动配置相关的组件。自动配置类通常使用<code>@Configuration</code>注解进行标记，并使用其他注解如<code>@ConditionalOnClass</code>、<code>@ConditionalOnProperty</code>等来进行条件化的配置。</li><li>创建配置类：在starter模块中，创建一个配置类，用于接受外部配置，并将配置值注入到相关的组件中。配置类通常使用<code>@ConfigurationProperties</code>注解进行标记，并定义需要配置的属性和对应的Getter&#x2F;Setter方法。</li><li>定义starter的启动类：在starter模块中，创建一个启动类，用于加载自动配置和配置类，并将其纳入Spring Boot应用的上下文中。</li><li>打包和发布：将自定义starter模块进行打包，并发布到Maven仓库或本地仓库中，以便其他项目可以引入并使用。</li></ol><p>使用自定义starter的项目，只需在其pom.xml文件中添加对自定义starter的依赖，Spring Boot将自动加载并应用自定义starter的自动配置和配置。</p><p>通过自定义starter，可以将一组相关的依赖和配置进行封装，提供一种简化和集中化的方式来扩展和定制Spring Boot应用程序。同时，它也可以帮助我们提高代码的复用性和可维护性。</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>SpringBoot2</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSM</title>
    <link href="/2024/02/26/SSM/"/>
    <url>/2024/02/26/SSM/</url>
    
    <content type="html"><![CDATA[<h1 id="一、Spring"><a href="#一、Spring" class="headerlink" title="一、Spring"></a>一、Spring</h1><h2 id="1、IOC"><a href="#1、IOC" class="headerlink" title="1、IOC"></a>1、IOC</h2><h3 id="1-1、什么是IOC"><a href="#1-1、什么是IOC" class="headerlink" title="1.1、什么是IOC"></a>1.1、什么是IOC</h3><ul><li><p>IOC：控制反转，把对象的创建和对象之间调用的过程都交给Spring进行管理</p></li><li><p>使用IOC的目的：为了降低耦合度</p></li></ul><h3 id="1-2、IOC底层原理"><a href="#1-2、IOC底层原理" class="headerlink" title="1.2、IOC底层原理"></a>1.2、IOC底层原理</h3><ul><li>xml解析、工厂模式、反射</li></ul><h3 id="1-3、IOC-中的接口（容器）"><a href="#1-3、IOC-中的接口（容器）" class="headerlink" title="1.3、IOC 中的接口（容器）"></a>1.3、IOC 中的接口（容器）</h3><p>1、IOC的思想基于IOC容器完成，IOC容器底层就是对象工厂</p><p>2、Spring提供 IOC容器的两种实现方式：（两个接口）</p><ul><li>BeanFactory：IOC容器最基本的实现方式，它是Spring内部的使用接口，不提供给开发人员进行使用<ul><li>特点：加载配置文件的时候不会创建对象，只有在获取（使用）对象的时候才会使用<ul><li>加载配置文件：<code>BeanFactory context = new ClassPathXmlApplicationContext(&quot;配置文件&quot;);</code></li><li>获取对象：<code>context.getBean(&quot;id&quot;,类名.class)</code></li></ul></li></ul></li><li>ApplicationContext：是BeanFactory接口的子接口，提供了更多更强大的功能，一般是由开发人员使用的<ul><li>特点：加载配置文件的时候就会创建对象</li><li>ApplicationContext接口的实现类：FileSystemXmlApplicationContext、ClassPathXmlApplicationContext</li></ul></li></ul><h3 id="1-4、IOC的Bean管理操作"><a href="#1-4、IOC的Bean管理操作" class="headerlink" title="1.4、IOC的Bean管理操作"></a>1.4、IOC的Bean管理操作</h3><h4 id="1、Bean管理概念"><a href="#1、Bean管理概念" class="headerlink" title="1、Bean管理概念"></a>1、Bean管理概念</h4><p>指的是两个操作：Spring创建对象、Spring注入属性</p><h4 id="2、Bean管理操作有两种实现方式"><a href="#2、Bean管理操作有两种实现方式" class="headerlink" title="2、Bean管理操作有两种实现方式"></a>2、Bean管理操作有两种实现方式</h4><p><strong>基于xml配置文件 和 基于注解</strong></p><h4 id="2-1、xml方式"><a href="#2-1、xml方式" class="headerlink" title="2.1、xml方式"></a>2.1、xml方式</h4><h5 id="1、基于xml方式创建对象"><a href="#1、基于xml方式创建对象" class="headerlink" title="1、基于xml方式创建对象"></a>1、基于xml方式创建对象</h5><ul><li>在Spring的配置文件中使用bean标签，标签中添加对应属性就可以实现对象创建</li><li>在bean标签中有多个属性：<ul><li>id：对象的唯一标识，可以根据这个标识来创建对象</li><li>class：类的全路径</li><li>name：name属性的作用跟id一样，差别是id属性不能使用特殊符号（不常用，了解）</li></ul></li><li>创建对象时，默认使用的是无参构造方法</li></ul><h5 id="2、基于xml方式注入属性"><a href="#2、基于xml方式注入属性" class="headerlink" title="2、基于xml方式注入属性"></a>2、基于xml方式注入属性</h5><p><strong>DI：依赖注入，就是注入属性，有两种注入方式：set方式和有参构造方式</strong></p><h6 id="1：使用set方法进行注入"><a href="#1：使用set方法进行注入" class="headerlink" title="1：使用set方法进行注入"></a>1：使用set方法进行注入</h6><p>（1）创建类Book,定义属性和set方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 演示使用set方法进行注入属性</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Book</span> &#123;<br>    <span class="hljs-keyword">private</span> String bname;<br>    <span class="hljs-keyword">private</span> String bauthor;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setBname</span><span class="hljs-params">(String bname)</span> &#123;<br>        <span class="hljs-built_in">this</span>.bname = bname;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setBauthor</span><span class="hljs-params">(String bauthor)</span> &#123;<br>        <span class="hljs-built_in">this</span>.bauthor = bauthor;<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Book&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;bname=&#x27;&quot;</span> + bname + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, bauthor=&#x27;&quot;</span> + bauthor + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>（2）在Spring配置文件中配置属性注入：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--set方式注入属性--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;book&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.Book&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;bname&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;易筋经&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;bauthor&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;达摩&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><p>（3）验证：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testBook1</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">ClassPathXmlApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;bean1.xml&quot;</span>);<br>    <span class="hljs-type">Book</span> <span class="hljs-variable">book</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;book&quot;</span>, Book.class);<br>    System.out.println(book); <span class="hljs-comment">// Book&#123;bname=&#x27;易筋经&#x27;, bauthor=&#x27;达摩&#x27;&#125;</span><br>&#125;<br></code></pre></td></tr></table></figure><h6 id="2：使用有参构造进行注入"><a href="#2：使用有参构造进行注入" class="headerlink" title="2：使用有参构造进行注入"></a>2：使用有参构造进行注入</h6><p>（1）创建类Orders,定义属性和构造方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 使用有参构造注入属性</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Orders</span> &#123;<br>    <span class="hljs-keyword">private</span> String oname;<br>    <span class="hljs-keyword">private</span> String address;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Orders</span><span class="hljs-params">(String oname, String address)</span> &#123;<br>        <span class="hljs-built_in">this</span>.oname = oname;<br>        <span class="hljs-built_in">this</span>.address = address;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Orders&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;oname=&#x27;&quot;</span> + oname + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, address=&#x27;&quot;</span> + address + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>（2）在Spring配置文件中配置属性注入：</p><p>constructor-arg 中既可以使用name，又可以使用index。index&#x3D;0代表第一个属性</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--有参构造方式注入属性--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;orders&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.Orders&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">constructor-arg</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;oname&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;电脑&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">constructor-arg</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">constructor-arg</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;address&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;China&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">constructor-arg</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><p>（3）验证：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testOrders</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">ClassPathXmlApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;bean1.xml&quot;</span>);<br>    <span class="hljs-type">Orders</span> <span class="hljs-variable">orders</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;orders&quot;</span>, Orders.class);<br>    System.out.println(orders); <span class="hljs-comment">// Orders&#123;oname=&#x27;电脑&#x27;, address=&#x27;China&#x27;&#125;</span><br>&#125;<br></code></pre></td></tr></table></figure><h6 id="3、p-名称空间注入（基于xml方式）-了解"><a href="#3、p-名称空间注入（基于xml方式）-了解" class="headerlink" title="3、p 名称空间注入（基于xml方式）(了解)"></a>3、p 名称空间注入（基于xml方式）(了解)</h6><p>使用p名称空间注入，可以简化基于xml配置方式</p><p>（1）添加p名称空间在Spring配置文件中：<code>xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:p</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/p&quot;</span>   <span class="hljs-attr">新添加的这一行</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>（2）在Spring配置文件中的bean标签里进行操作</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--set方式使用p命名空间注入属性--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;book2&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.Book&quot;</span> <span class="hljs-attr">p:bname</span>=<span class="hljs-string">&quot;九阳神功&quot;</span> <span class="hljs-attr">p:bauthor</span>=<span class="hljs-string">&quot;无名氏&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><h6 id="4、xml注入其他类型属性"><a href="#4、xml注入其他类型属性" class="headerlink" title="4、xml注入其他类型属性"></a>4、xml注入其他类型属性</h6><p>4.1、注入空值</p><p>直接设置name属性，不设置value属性，在内部添加一个<code>&lt;null/&gt;</code> 标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--1、set方式注入属性--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;book&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.Book&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;bname&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;易筋经&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;bauthor&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;达摩&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--设置null值--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;address&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">null</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><p>4.2、属性值包含特殊符号</p><ul><li>方式1：可以把&lt;&gt;进行转义：<code>&amp;lt;    &amp;gt;</code></li><li>方式2：把带特殊符号的内容写到CDATA中：<code> &lt;![CDATA[包含特殊符号内容]]&gt;</code></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--1、set方式注入属性--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;book&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.Book&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;bname&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;易筋经&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;bauthor&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;达摩&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--属性值包含特殊符号</span><br><span class="hljs-comment">        方式1：可以把&lt;&gt;进行转义：&amp;lt;&amp;gt;</span><br><span class="hljs-comment">        方式2：把带特殊符号的内容写到CDATA中</span><br><span class="hljs-comment">    --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;address&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>&lt;![CDATA[&lt;&lt;南京&gt;&gt;]]&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><p>4.3、注入外部bean</p><ul><li><p>1、创建两个类：service类和dao类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.dao;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserDao</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.dao.impl;<br><br><span class="hljs-keyword">import</span> org.example.dao.UserDao;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserDaoImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">UserDao</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">update</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;UserDaoImpl.update&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>2、在service中调用dao中的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.service;<br><br><span class="hljs-keyword">import</span> org.example.dao.UserDao;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserService</span> &#123;<br><br>    <span class="hljs-comment">//1、创建UserDao类型的属性：生成set方法</span><br>    <span class="hljs-keyword">private</span> UserDao userDao;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setUserDao</span><span class="hljs-params">(UserDao userDao)</span> &#123;<br>        <span class="hljs-built_in">this</span>.userDao = userDao;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;UserService.add&quot;</span>);<br><br>        userDao.update();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>3、在Spring的xml配置文件中进行配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--首先创建service 和 dao 的对象--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;userDaoImpl&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.dao.impl.UserDaoImpl&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;userService&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.service.UserService&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--注入userDao对象</span><br><span class="hljs-comment">            name属性：类里边的属性名称</span><br><span class="hljs-comment">            ref属性：创建的userDaoImpl对象的bean标签的id值 （注意：这里不能使用value属性）</span><br><span class="hljs-comment">        --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;userDao&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;userDaoImpl&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>4、验证：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br>   <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test</span><span class="hljs-params">()</span> &#123;<br>       <span class="hljs-type">ApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;bean2.xml&quot;</span>);<br>       <span class="hljs-type">UserService</span> <span class="hljs-variable">userService</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;userService&quot;</span>, UserService.class);<br>       userService.add();  <span class="hljs-comment">// UserService.add</span><br>                           <span class="hljs-comment">// UserDaoImpl.update</span><br>   &#125;<br></code></pre></td></tr></table></figure></li></ul><p>4.4、注入内部bean</p><ul><li><p>1、创建两个类，员工类和部门类，其中一个员工对应一个部门</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.bean;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 部门类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Dept</span> &#123;<br>    <span class="hljs-keyword">private</span> String dname;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDname</span><span class="hljs-params">(String dname)</span> &#123;<br>        <span class="hljs-built_in">this</span>.dname = dname;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Dept&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;dname=&#x27;&quot;</span> + dname + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.bean;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 员工类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Emp</span> &#123;<br>    <span class="hljs-keyword">private</span> String ename;<br>    <span class="hljs-keyword">private</span> String gender;<br><br>    <span class="hljs-comment">//员工属于某一个部门</span><br>    <span class="hljs-keyword">private</span> Dept dept;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDept</span><span class="hljs-params">(Dept dept)</span> &#123;<br>        <span class="hljs-built_in">this</span>.dept = dept;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setEname</span><span class="hljs-params">(String ename)</span> &#123;<br>        <span class="hljs-built_in">this</span>.ename = ename;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setGender</span><span class="hljs-params">(String gender)</span> &#123;<br>        <span class="hljs-built_in">this</span>.gender = gender;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Emp&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;ename=&#x27;&quot;</span> + ename + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, dept=&quot;</span> + dept +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>2、在Spring的xml配置文件中进行配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--内部bean--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;emp&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.bean.Emp&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ename&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;lucy&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;女&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--在property中只定义name，然后在里面再写bean--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dept&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dept&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.bean.Dept&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dname&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;安保部&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>3、验证</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testBean2</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">ApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;bean3.xml&quot;</span>);<br>    <span class="hljs-type">Emp</span> <span class="hljs-variable">emp</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;emp&quot;</span>, Emp.class);<br>    System.out.println(emp); <span class="hljs-comment">// Emp&#123;ename=&#x27;lucy&#x27;, gender=&#x27;女&#x27;, dept=Dept&#123;dname=&#x27;安保部&#x27;&#125;&#125;</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ul><p>4.5、注入属性-级联赋值</p><p>级联赋值有两种写法，第一种是通过外部bean的方式进行级联赋值</p><ul><li>1、上面内部bean的Dept类和Emp类不变</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.bean;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 部门类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Dept</span> &#123;<br>    <span class="hljs-keyword">private</span> String dname;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDname</span><span class="hljs-params">(String dname)</span> &#123;<br>        <span class="hljs-built_in">this</span>.dname = dname;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Dept&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;dname=&#x27;&quot;</span> + dname + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.bean;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 员工类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Emp</span> &#123;<br>    <span class="hljs-keyword">private</span> String ename;<br>    <span class="hljs-keyword">private</span> String gender;<br><br>    <span class="hljs-comment">//员工属于某一个部门</span><br>    <span class="hljs-keyword">private</span> Dept dept;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDept</span><span class="hljs-params">(Dept dept)</span> &#123;<br>        <span class="hljs-built_in">this</span>.dept = dept;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setEname</span><span class="hljs-params">(String ename)</span> &#123;<br>        <span class="hljs-built_in">this</span>.ename = ename;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setGender</span><span class="hljs-params">(String gender)</span> &#123;<br>        <span class="hljs-built_in">this</span>.gender = gender;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Emp&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;ename=&#x27;&quot;</span> + ename + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, dept=&quot;</span> + dept +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>2、在Spring的xml配置文件中进行配置</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--级联赋值<span class="hljs-number">1</span>--&gt;<br>&lt;bean id=<span class="hljs-string">&quot;dept&quot;</span> class=<span class="hljs-string">&quot;org.example.bean.Dept&quot;</span>&gt;<br>    &lt;property name=<span class="hljs-string">&quot;dname&quot;</span> value=<span class="hljs-string">&quot;研发部&quot;</span>&gt;&lt;/property&gt;<br>&lt;/bean&gt;<br>&lt;bean id=<span class="hljs-string">&quot;emp&quot;</span> class=<span class="hljs-string">&quot;org.example.bean.Emp&quot;</span>&gt;<br>    &lt;property name=<span class="hljs-string">&quot;ename&quot;</span> value=<span class="hljs-string">&quot;张三&quot;</span>&gt;&lt;/property&gt;<br>    &lt;property name=<span class="hljs-string">&quot;gender&quot;</span> value=<span class="hljs-string">&quot;男&quot;</span>&gt;&lt;/property&gt;<br>    &lt;!--通过外部bean来赋值--&gt;<br>    &lt;property name=<span class="hljs-string">&quot;dept&quot;</span> ref=<span class="hljs-string">&quot;dept&quot;</span>&gt;&lt;/property&gt;<br>&lt;/bean&gt;<br></code></pre></td></tr></table></figure><p>第二种是通过<code>对象名.属性名</code>方式进行赋值，前提是要能获取到这个对象，所以需要为对象这个属性设置getter方法</p><ul><li>1、上面内部bean的Dept类不变，Emp类中为dept这个属性增加一个getter方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.bean;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 部门类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Dept</span> &#123;<br>    <span class="hljs-keyword">private</span> String dname;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDname</span><span class="hljs-params">(String dname)</span> &#123;<br>        <span class="hljs-built_in">this</span>.dname = dname;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Dept&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;dname=&#x27;&quot;</span> + dname + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.bean;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 员工类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Emp</span> &#123;<br>    <span class="hljs-keyword">private</span> String ename;<br>    <span class="hljs-keyword">private</span> String gender;<br><br>    <span class="hljs-comment">//员工属于某一个部门</span><br>    <span class="hljs-keyword">private</span> Dept dept;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDept</span><span class="hljs-params">(Dept dept)</span> &#123;<br>        <span class="hljs-built_in">this</span>.dept = dept;<br>    &#125;<br>    <span class="hljs-keyword">public</span> Dept <span class="hljs-title function_">getDept</span><span class="hljs-params">()</span> &#123;  <span class="hljs-comment">//级联赋值 需要为dept这个属性设置getter方法</span><br>        <span class="hljs-keyword">return</span> dept;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setEname</span><span class="hljs-params">(String ename)</span> &#123;<br>        <span class="hljs-built_in">this</span>.ename = ename;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setGender</span><span class="hljs-params">(String gender)</span> &#123;<br>        <span class="hljs-built_in">this</span>.gender = gender;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Emp&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;ename=&#x27;&quot;</span> + ename + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, dept=&quot;</span> + dept +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>2、在Spring的xml配置文件中进行配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--级联赋值2--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dept&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.bean.Dept&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;emp&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.bean.Emp&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ename&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;张三&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;gender&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;男&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--通过外部bean来赋值--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dept&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;dept&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--需要先给emp中的dept属性生成getter方法--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dept.dname&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;技术部&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><p>4.6、xml注入集合类型属性</p><ul><li>1、定义一个类，定义数组类型、List集合类型、Map集合类型、Set集合类型的属性</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.collectiontype;<br><br><span class="hljs-keyword">import</span> java.util.Arrays;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-keyword">import</span> java.util.Set;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Stu</span> &#123;<br>    <span class="hljs-comment">//1、数组类型的属性</span><br>    <span class="hljs-keyword">private</span> String[] courses;<br>    <span class="hljs-comment">//2、List集合类型属性</span><br>    <span class="hljs-keyword">private</span> List&lt;String&gt; list;<br>    <span class="hljs-comment">//3、Map集合类型的属性</span><br>    <span class="hljs-keyword">private</span> Map&lt;String, String&gt; maps;<br>    <span class="hljs-comment">//4、Set集合类型的属性</span><br>    <span class="hljs-keyword">private</span> Set&lt;String&gt; set;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setCourses</span><span class="hljs-params">(String[] courses)</span> &#123;<br>        <span class="hljs-built_in">this</span>.courses = courses;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setList</span><span class="hljs-params">(List&lt;String&gt; list)</span> &#123;<br>        <span class="hljs-built_in">this</span>.list = list;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setMaps</span><span class="hljs-params">(Map&lt;String, String&gt; maps)</span> &#123;<br>        <span class="hljs-built_in">this</span>.maps = maps;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setSet</span><span class="hljs-params">(Set&lt;String&gt; set)</span> &#123;<br>        <span class="hljs-built_in">this</span>.set = set;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Stu&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;courses=&quot;</span> + Arrays.toString(courses) +<br>                <span class="hljs-string">&quot;, list=&quot;</span> + list +<br>                <span class="hljs-string">&quot;, maps=&quot;</span> + maps +<br>                <span class="hljs-string">&quot;, set=&quot;</span> + set +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>2、在Spring的xml配置文件中进行配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--集合类型属性的注入--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;stu&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.collectiontype.Stu&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--数组类型：在property中定义array或者list标签，然后再在array中定义value--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;courses&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">array</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>java<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>数据库<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">array</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--list集合类型，在property中定义list标签，然后再在array中定义value--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;list&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">list</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>张三<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>小三<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">list</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--map集合类型，在property中定义map标签，再在其中定义entry标签，可以指定key和value--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;maps&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">map</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;JAVA&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;java&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">entry</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;PHP&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;php&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">entry</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">map</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--set集合类型，在property中定义set标签，再在其中定义value--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;set&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">set</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>MySQL<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>Redis<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">set</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>3、验证</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testCollection</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">ApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;bean1.xml&quot;</span>);<br>    <span class="hljs-type">Stu</span> <span class="hljs-variable">stu</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;stu&quot;</span>, Stu.class);<br>    System.out.println(stu); <span class="hljs-comment">// Stu&#123;courses=[java, 数据库], list=[张三, 小三], maps=&#123;JAVA=java, PHP=php&#125;, set=[MySQL, Redis]&#125;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>4.6.1、在集合中设置对象类型值</p><ul><li>1、定义Course课程类，和Stu学生类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.collectiontype;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 课程类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Course</span> &#123;<br>    <span class="hljs-keyword">private</span> String cname;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setCname</span><span class="hljs-params">(String cname)</span> &#123;<br>        <span class="hljs-built_in">this</span>.cname = cname;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Course&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;cname=&#x27;&quot;</span> + cname + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.collectiontype;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Stu</span> &#123;<br><br>    <span class="hljs-comment">//学生学习的多门课程</span><br>    <span class="hljs-keyword">private</span> List&lt;Course&gt; courseList;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setCourseList</span><span class="hljs-params">(List&lt;Course&gt; courseList)</span> &#123;<br>        <span class="hljs-built_in">this</span>.courseList = courseList;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Stu&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;courseList=&quot;</span> + courseList +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>2、在Spring的xml配置文件中进行配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--集合类型属性的注入--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;stu&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.collectiontype.Stu&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--注入List集合中存储对象的类型：在list标签内部定义ref标签，ref标签中的bean属性对应外部bean的id值--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;courseList&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">list</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ref</span> <span class="hljs-attr">bean</span>=<span class="hljs-string">&quot;course1&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ref</span> <span class="hljs-attr">bean</span>=<span class="hljs-string">&quot;course2&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">list</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;course1&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.collectiontype.Course&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;cname&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Spring5框架&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;course2&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.collectiontype.Course&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;cname&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Mybatis框架&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><p>4.6.2、把集合注入部分提取出来</p><ul><li>1、定义一个类用作演示</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.collectiontype;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Book</span> &#123;<br>    <span class="hljs-keyword">private</span> List&lt;String&gt; list;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setList</span><span class="hljs-params">(List&lt;String&gt; list)</span> &#123;<br>        <span class="hljs-built_in">this</span>.list = list;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Book&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;list=&quot;</span> + list +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>2、在Spring的xml配置文件中引入命名空间 util</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:util</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/util&quot;</span>  <span class="hljs-attr">新引入的util命名空间</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">                           http://www.springframework.org/schema/util   http://www.springframework.org/schema/util/spring-util.xsd&quot;</span>&gt;</span>  新引入的util命名空间<br><br>    <span class="hljs-comment">&lt;!--提取list集合类型属性注入--&gt;</span><br>    <span class="hljs-comment">&lt;!--1、首先定义一个util:list标签，然后自定义一个id，在标签中定义集合内容--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">util:list</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;bookList&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>西游记<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>水浒传<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>三国演义<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">util:list</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--2、正常创建bean，然后再通过ref引入上面定义id--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;book&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.collectiontype.Book&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;list&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;bookList&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="3、工厂Bean（Factory-Bean）"><a href="#3、工厂Bean（Factory-Bean）" class="headerlink" title="3、工厂Bean（Factory Bean）"></a>3、工厂Bean（Factory Bean）</h5><p><strong>Spring有两种类型的Bean，一种普通Bean（开发人员定义的），另外一种工厂Bean（Spring内置的）</strong></p><ul><li><p>普通Bean：在Spring的xml配置文件种定义的Bean是什么类型，就返回什么类型</p></li><li><p>Factory Bean：在Spring的xml配置文件中定义的Bean类型可以和返回类型不一样</p><ul><li>1、创建一个类，让这个类作为工厂Bean，实现接口FactoryBean；然后重写方法，在方法中定义返回的bean类型</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.factorybean;<br><br><span class="hljs-keyword">import</span> org.example.spring5.collectiontype.Course;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.FactoryBean;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyBean</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">FactoryBean</span>&lt;Course&gt; &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 返回bean</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Exception</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Course <span class="hljs-title function_">getObject</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Course</span> <span class="hljs-variable">course</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Course</span>();<br>        course.setCname(<span class="hljs-string">&quot;abc&quot;</span>);<br>        <span class="hljs-keyword">return</span> course;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Class&lt;?&gt; getObjectType() &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isSingleton</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> FactoryBean.<span class="hljs-built_in">super</span>.isSingleton();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>2、在xml中配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;myBean&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.factorybean.MyBean&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><ul><li>3、测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test3</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">ApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;bean3.xml&quot;</span>);<br>    <span class="hljs-type">Course</span> <span class="hljs-variable">course</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;myBean&quot;</span>, Course.class);<br>    System.out.println(course); <span class="hljs-comment">// Course&#123;cname=&#x27;abc&#x27;&#125;</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h5 id="4、Bean的作用域"><a href="#4、Bean的作用域" class="headerlink" title="4、Bean的作用域"></a>4、Bean的作用域</h5><p>1、在Spring中，可以设置创建的Bean实例是单实例还是多实例</p><p>2、在Spring中，默认情况下，Bean是单实例对象</p><p>3、修改Bean为多实例对象</p><ul><li>在Spring 配置文件bean标签中有一个属性（scope）可以设置单实例还是多实例</li><li>scope：singleton【默认值，表示是单实例对象】、prototype【表示是多实例对象】</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;自定义id&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;全路径&quot;</span> <span class="hljs-attr">scope</span>=<span class="hljs-string">&quot;prototype&quot;</span>/&gt;</span>  scope=&quot;prototype&quot; 表示当前bean是多实例<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> test实例() &#123;<br>    <span class="hljs-type">ApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;bean2.xml&quot;</span>);<br>    <span class="hljs-type">Book</span> <span class="hljs-variable">book1</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;自定义id&quot;</span>, Book.class);<br>    <span class="hljs-type">Book</span> <span class="hljs-variable">book2</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;自定义id&quot;</span>, Book.class);<br>    <span class="hljs-comment">// book1和book2不相等，代表设置成功</span><br>    System.out.println(book1);  <span class="hljs-comment">// org.example.spring5.collectiontype.Book@6fb0d3ed</span><br>    System.out.println(book2);  <span class="hljs-comment">// org.example.spring5.collectiontype.Book@6dde5c8c</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>singleton 和 prototype 的区别<ul><li>1、singleton 表示单实例；prototype 表示多实例</li><li>2、设置scope 值为singleton 的时候，加载配置文件（new ClassPathXmlApplicationContext()）时就会创建单实例对象；设置scope值为prototype的时候，在调用getBean方法的时候才会创建多实例对象</li></ul></li></ul><h5 id="5、Bean的生命周期"><a href="#5、Bean的生命周期" class="headerlink" title="5、Bean的生命周期"></a>5、Bean的生命周期</h5><ul><li><p>生命周期：从对象的创建到销毁的过程</p></li><li><p>Bean的生命周期：</p><ul><li><p>创建Bean实例（无参构造）</p></li><li><p>为Bean的属性设置值（调用set 方法）</p></li><li><p>调用Bean的初始化方法（需要进行配置初始化方法）</p></li><li><p>使用Bean</p></li><li><p>当容器关闭的时候，调用Bean的销毁方法（需要进行配置销毁方法）</p></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.bean;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Orders</span> &#123;<br>    <span class="hljs-keyword">private</span> String oname;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Orders</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;第一步，执行无参构造创建bean实例&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setOname</span><span class="hljs-params">(String oname)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;第二步，调用set方法进行属性赋值&quot;</span>);<br>        <span class="hljs-built_in">this</span>.oname = oname;<br>    &#125;<br><br>    <span class="hljs-comment">//第三步，创建执行的初始化方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">initMethod</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;第三步，创建执行的初始化方法&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">//第五步，创建销毁的方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">destroyMethod</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;第五步，创建销毁的方法&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Orders&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;oname=&#x27;&quot;</span> + oname + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--init-method、destroy-method 中的方法是Orders类中的方法--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;orders&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.bean.Orders&quot;</span> <span class="hljs-attr">init-method</span>=<span class="hljs-string">&quot;initMethod&quot;</span> <span class="hljs-attr">destroy-method</span>=<span class="hljs-string">&quot;destroyMethod&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;oname&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;手机&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testBean</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">ClassPathXmlApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;bean4.xml&quot;</span>);<br>    <span class="hljs-type">Orders</span> <span class="hljs-variable">orders</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;orders&quot;</span>, Orders.class);<br>    System.out.println(<span class="hljs-string">&quot;第四步，使用Bean&quot;</span>);<br>    context.close();  <span class="hljs-comment">//销毁</span><br>&#125;<br>     <span class="hljs-comment">//第一步，执行无参构造创建bean实例</span><br> <span class="hljs-comment">//第二步，调用set方法进行属性赋值</span><br>  <br>    <span class="hljs-comment">//第四步，使用Bean</span><br>    <span class="hljs-comment">//第五步，创建销毁的方法</span><br></code></pre></td></tr></table></figure><ul><li><p>bean的后置处理器（加上后置处理器之后才是完整的生命周期）</p><ul><li><p>后置处理器指的是在上面第三步【调用Bean的初始化方法（需要进行配置初始化方法）】前后各有一步</p><p>1、创建一个类，实现接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.bean;<br><br><span class="hljs-keyword">import</span> org.springframework.beans.BeansException;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.config.BeanPostProcessor;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 会为当前配置文件中所有的bean添加一个后置处理器</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyBeanPost</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">BeanPostProcessor</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 初始化之前</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> bean</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> beanName</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> BeansException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">postProcessBeforeInitialization</span><span class="hljs-params">(Object bean, String beanName)</span> <span class="hljs-keyword">throws</span> BeansException &#123;<br>        System.out.println(<span class="hljs-string">&quot;MyBeanPost.postProcessBeforeInitialization&quot;</span>);<br>        <span class="hljs-keyword">return</span> BeanPostProcessor.<span class="hljs-built_in">super</span>.postProcessBeforeInitialization(bean, beanName);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 初始化之后</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> bean</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> beanName</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> BeansException</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">postProcessAfterInitialization</span><span class="hljs-params">(Object bean, String beanName)</span> <span class="hljs-keyword">throws</span> BeansException &#123;<br>        System.out.println(<span class="hljs-string">&quot;MyBeanPost.postProcessAfterInitialization&quot;</span>);<br>        <span class="hljs-keyword">return</span> BeanPostProcessor.<span class="hljs-built_in">super</span>.postProcessAfterInitialization(bean, beanName);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>2、在配置文件中进行配置后置处理器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--init-method、destroy-method 中的方法是Orders类中的方法--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;orders&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.bean.Orders&quot;</span> <span class="hljs-attr">init-method</span>=<span class="hljs-string">&quot;initMethod&quot;</span> <span class="hljs-attr">destroy-method</span>=<span class="hljs-string">&quot;destroyMethod&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;oname&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;手机&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>    <br><span class="hljs-comment">&lt;!--配置后置处理器--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;myBeanPost&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.bean.MyBeanPost&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testBean</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">ClassPathXmlApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassPathXmlApplicationContext</span>(<span class="hljs-string">&quot;bean4.xml&quot;</span>);<br>    <span class="hljs-type">Orders</span> <span class="hljs-variable">orders</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;orders&quot;</span>, Orders.class);<br>    System.out.println(<span class="hljs-string">&quot;第四步，使用Bean&quot;</span>);<br>    context.close();<br>&#125;<br>    <span class="hljs-comment">// 第一步，执行无参构造创建bean实例</span><br>    <span class="hljs-comment">// 第二步，调用set方法进行属性赋值</span><br>    <span class="hljs-comment">// MyBeanPost.postProcessBeforeInitialization</span><br>    <span class="hljs-comment">// 第三步，创建执行的初始化方法</span><br>    <span class="hljs-comment">// MyBeanPost.postProcessAfterInitialization</span><br>    <span class="hljs-comment">// 第四步，使用Bean</span><br>    <span class="hljs-comment">// 第五步，创建销毁的方法</span><br></code></pre></td></tr></table></figure></li></ul></li></ul><h5 id="6、自动装配"><a href="#6、自动装配" class="headerlink" title="6、自动装配"></a>6、自动装配</h5><ul><li><p>自动装配：根据指定装配规则（属性名称或者属性类型），Spring自动将匹配的属性值进行注入</p></li><li><p>bean标签属性autowire能实现自动装配</p><ul><li>byName方式是根据bean的名称进行注入，需要在XML配置文件中给bean设置一个唯一的名称。byType方式是根据bean的类型进行注入，需要保证容器中只有一个该类型的bean。</li><li>byName方式的优先级高于byType方式，如果按照byName方式找到了对应的bean，则不会再按照byType方式查找。如果按照byType方式找到了多个符合条件的bean，则会抛出异常。</li><li>byName方式注入时，需要保证属性名称和bean名称一致。byType方式则不需要。</li><li>byName方式注入时，不支持基本数据类型和String类型的注入。byType方式则支持。</li><li>通常情况下，推荐使用byType方式进行注入，因为它更加灵活，能够自动适应bean类型的变化。但是，在某些情况下，byName方式也是必要的，比如多个类型相同的bean需要注入到不同的属性中。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dept&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.autowire.Dept&quot;</span>/&gt;</span><br><span class="hljs-comment">&lt;!--自动装配：</span><br><span class="hljs-comment">bean标签属性autowire能实现自动装配</span><br><span class="hljs-comment">autowire属性常用两个值：</span><br><span class="hljs-comment">    byName：根据属性名称注入（特点：注入的值bean的id值要和类中属性的名称一致）</span><br><span class="hljs-comment">    byType：根据属性类型注入</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;emp&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.autowire.Emp&quot;</span> <span class="hljs-attr">autowire</span>=<span class="hljs-string">&quot;byName&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h5 id="7、引入外部的属性文件"><a href="#7、引入外部的属性文件" class="headerlink" title="7、引入外部的属性文件"></a>7、引入外部的属性文件</h5><p>首先给出直接配置数据库信息的写法</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--配置数据库--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driverClassName&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/userDb&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;root&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;root&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>引入外部的属性文件：</strong></p><ul><li><p>1、首先新建一个<code>jdbc.properties</code> 的配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">prop.driverClass</span>=<span class="hljs-string">com.mysql.jdbc.Driver</span><br><span class="hljs-attr">prop.url</span>=<span class="hljs-string">jdbc:mysql://localhost:3306/userDb</span><br><span class="hljs-attr">prop.username</span>=<span class="hljs-string">root</span><br><span class="hljs-attr">prop.password</span>=<span class="hljs-string">root</span><br></code></pre></td></tr></table></figure></li><li><p>2、在xml中进行配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:context</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span>  <span class="hljs-attr">新的命名空间context</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span>  新的命名空间context<br><br>    <span class="hljs-comment">&lt;!--读取外部的配置文件--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context:property-placeholder</span> <span class="hljs-attr">location</span>=<span class="hljs-string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置数据库  通过 $&#123;&#125; 来引入--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driverClassName&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;prop.driverClass&#125;&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;prop.url&#125;&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;prop.username&#125;&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;prop.password&#125;&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h4 id="2-2、注解方式"><a href="#2-2、注解方式" class="headerlink" title="2.2、注解方式"></a>2.2、注解方式</h4><h5 id="1、创建对象"><a href="#1、创建对象" class="headerlink" title="1、创建对象"></a>1、创建对象</h5><ul><li><code>@Component</code>：普通组件</li><li><code>@Service</code>：Service层</li><li><code>@Controller</code>：Web层</li><li><code>@Repository</code>：Dao层</li></ul><p>以上4个注解的功能是一样的，都可以用来创建Bean 实例</p><h6 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h6><ul><li>1、引入spring-aop依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aop --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-aop<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.2.6.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>2、开启组件扫描</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--开启组件扫描--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;org.example.spring5&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><ul><li>3、创建类，在类上加上对应的注解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.service;<br><br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 在注解里面的value属性可以省略。默认值是类名称，首字母小写</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Service(value = &quot;userService&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserService</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;UserService.add&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="开启组件扫描的细节："><a href="#开启组件扫描的细节：" class="headerlink" title="开启组件扫描的细节："></a>开启组件扫描的细节：</h6><ul><li>1、use-default-filters&#x3D;”false”     不扫描全部包</li><li>2、context:include-filter    只扫描什么包下的内容</li><li>3、context:exclude-filter    不扫描什么包下的内容</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml">   <span class="hljs-comment">&lt;!--use-default-filters=&quot;false&quot; 不扫描所有的内容--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;org.example.spring5&quot;</span> <span class="hljs-attr">use-default-filters</span>=<span class="hljs-string">&quot;false&quot;</span>&gt;</span><br>       <span class="hljs-comment">&lt;!--只扫描带有@Controller注解的类--&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">context:include-filter</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;annotation&quot;</span> <span class="hljs-attr">expression</span>=<span class="hljs-string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">context:component-scan</span>&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;org.example.spring5&quot;</span>&gt;</span><br>       <span class="hljs-comment">&lt;!--不扫描带有@Service注解的类--&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">context:exclude-filter</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;annotation&quot;</span> <span class="hljs-attr">expression</span>=<span class="hljs-string">&quot;org.springframework.stereotype.Service&quot;</span>/&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">context:component-scan</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong><code>@Import</code>注解：</strong></p><p>使用<code>@Import(类名.class)</code>注解导入要注入的bean，被导入的bean不需要声明为Bean。</p><ul><li>此形式可以有效的降低源代码与Spring技术的耦合度，在Spring技术底层及诸多框架的整合中大量使用</li></ul><h5 id="2、注入属性"><a href="#2、注入属性" class="headerlink" title="2、注入属性"></a>2、注入属性</h5><ul><li><code>@AutoWired</code>：根据属性类型进行注入</li><li><code>@Qualifier</code>：根据属性名称进行注入（需要和<code>@AutoWired</code>注解一起使用）</li><li><code>@Resource</code>：可以根据属性类型注入，也可以根据属性名称注入</li><li><code>@Value</code>：注入普通类型的属性</li></ul><h6 id="1、-AutoWired注入属性步骤："><a href="#1、-AutoWired注入属性步骤：" class="headerlink" title="1、@AutoWired注入属性步骤："></a>1、<code>@AutoWired</code>注入属性步骤：</h6><ul><li>1、创建service和dao对象，在Service类和Dao类上添加对应的创建对象注解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.dao;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserDao</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.dao.impl;<br><br><span class="hljs-keyword">import</span> org.example.spring5.dao.UserDao;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Repository;<br><br><span class="hljs-meta">@Repository</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserDaoImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">UserDao</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;UserDaoImpl.add&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>2、在Service类中注入dao对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.service;<br><br><span class="hljs-keyword">import</span> org.example.spring5.dao.UserDao;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserService</span> &#123;<br><br>    <span class="hljs-comment">//在属性名上面添加@Autowired注解，不需要创建set方法</span><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> UserDao userDao;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;UserService.add&quot;</span>);<br>        userDao.add();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h6 id="2、-Qualifier注解使用方法"><a href="#2、-Qualifier注解使用方法" class="headerlink" title="2、@Qualifier注解使用方法"></a>2、<code>@Qualifier</code>注解使用方法</h6><p>步骤跟<code>@Autowired</code>注解一样，唯一的区别就是需要和<code>@Autowired</code>注解同时使用，并且要指定<code>@Autowired(&quot;属性名称&quot;)</code></p><h6 id="3、-Resource注解使用方法"><a href="#3、-Resource注解使用方法" class="headerlink" title="3、@Resource注解使用方法"></a>3、<code>@Resource</code>注解使用方法</h6><p>如果只写<code>@Resource</code> 代表根据属性类型注入；</p><p>如果写<code>@Resource(name = &quot;属性名称&quot;)</code> 根据属性名称注入。</p><p><code>@Resource</code>注解是javax包下面的，而不是spring中的，所以不推荐使用这个注解</p><h6 id="4、-Value注解使用方法"><a href="#4、-Value注解使用方法" class="headerlink" title="4、@Value注解使用方法"></a>4、<code>@Value</code>注解使用方法</h6><p>直接在属性上面使用</p><h5 id="3、完全注解开发"><a href="#3、完全注解开发" class="headerlink" title="3、完全注解开发"></a>3、完全注解开发</h5><h6 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h6><ul><li><p>1、创建配置类，代替xml配置文件</p><p><code>@Configuration</code>注解：使用<code>proxyBeanMethods=true</code>属性可以保障调用此方法得到的对象是从容器中获取的，而不是重新创建的。它默认就是true</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.config;<br><br><span class="hljs-keyword">import</span> org.springframework.context.annotation.ComponentScan;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><span class="hljs-meta">@Configuration</span>  <span class="hljs-comment">//代表这是一个配置类，用于替代xml配置文件</span><br><span class="hljs-meta">@ComponentScan(basePackages = &#123;&quot;org.example.spring5&quot;&#125;)</span>  <span class="hljs-comment">//开启组件扫描</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpringConfig</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>2、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testSpring</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">ApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AnnotationConfigApplicationContext</span>(SpringConfig.class);<br>    <span class="hljs-type">UserService</span> <span class="hljs-variable">userService</span> <span class="hljs-operator">=</span> context.getBean(<span class="hljs-string">&quot;userService&quot;</span>, UserService.class);<br>    userService.add();<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h2 id="2、AOP"><a href="#2、AOP" class="headerlink" title="2、AOP"></a>2、AOP</h2><h3 id="2-1、什么是AOP"><a href="#2-1、什么是AOP" class="headerlink" title="2.1、什么是AOP"></a>2.1、什么是AOP</h3><ul><li>AOP：面向切面编程</li><li>不修改源代码，添加新功能</li></ul><h3 id="2-2、AOP的底层原理"><a href="#2-2、AOP的底层原理" class="headerlink" title="2.2、AOP的底层原理"></a>2.2、AOP的底层原理</h3><ul><li>AOP的底层原理是动态代理，有两种动态代理<ul><li>有接口的情况，使用JDK的动态代理：创建接口实现类的代理对象来实现方法的增强</li><li>没有接口的情况，使用CGLIB的动态代理：创建当前类的子类的代理对象来实现方法的增强</li></ul></li></ul><h3 id="2-3、JDK动态代理"><a href="#2-3、JDK动态代理" class="headerlink" title="2.3、JDK动态代理"></a>2.3、JDK动态代理</h3><p>使用Proxy类的newProxyInstance() 方法，会返回一个接口实现类的代理对象</p><p>newProxyInstance() 方法有三个参数，分别是：</p><ul><li><code>ClassLoader loader</code>：代理类的类加载器</li><li><code>Class&lt;?&gt;[] interfaces</code>: 增强方法所在的类实现的接口的class，支持多个</li><li><code>InvocationHandler handler</code>:实现接口InvocationHandler，创建代理对象，写增强的方法</li></ul><h4 id="举例"><a href="#举例" class="headerlink" title="举例:"></a>举例:</h4><p>1、创建一个接口和它的实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserDao</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">add</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span>;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">update</span><span class="hljs-params">(String id)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserDaoImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">UserDao</span>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">add</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span> &#123;<br>        <span class="hljs-keyword">return</span> a+b;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">update</span><span class="hljs-params">(String id)</span> &#123;<br>        <span class="hljs-keyword">return</span> id;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>2、定义一个代理类，实现InvocationHandler接口，重写其中的invoke方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5;<br><br><span class="hljs-keyword">import</span> java.lang.reflect.InvocationHandler;<br><span class="hljs-keyword">import</span> java.lang.reflect.Method;<br><span class="hljs-keyword">import</span> java.util.Arrays;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserDaoProxy</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">InvocationHandler</span> &#123;<br>    <span class="hljs-comment">//1、把创建的谁的代理对象，把谁传递过来</span><br>    <span class="hljs-keyword">private</span> Object obj;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">UserDaoProxy</span><span class="hljs-params">(Object obj)</span> &#123;<br>        <span class="hljs-built_in">this</span>.obj = obj;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 写增强的逻辑</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Throwable</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">invoke</span><span class="hljs-params">(Object proxy, Method method, Object[] args)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>        System.out.println(<span class="hljs-string">&quot;方法之前执行&quot;</span> + method.getName() + <span class="hljs-string">&quot;:传递的参数。。。&quot;</span> + Arrays.toString(args));<br>        <span class="hljs-type">Object</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> method.invoke(obj, args); <span class="hljs-comment">// 执行方法</span><br>        System.out.println(<span class="hljs-string">&quot;方法之后执行&quot;</span> + obj);<br>        <span class="hljs-keyword">return</span> res;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>3、使用Proxy.newProxuInterface() 方法创建代理对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5;<br><br><span class="hljs-keyword">import</span> java.lang.reflect.Proxy;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JDKProxy</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-comment">//创建接口实现类的代理对象</span><br>        Class[] interfaces = &#123;UserDao.class&#125;;<br>        <span class="hljs-type">UserDao</span> <span class="hljs-variable">userDao</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UserDaoImpl</span>();<br>        <span class="hljs-type">UserDao</span> <span class="hljs-variable">proxyDao</span> <span class="hljs-operator">=</span> (UserDao) Proxy.newProxyInstance(UserDao.class.getClassLoader(), interfaces, <span class="hljs-keyword">new</span> <span class="hljs-title class_">UserDaoProxy</span>(userDao));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-4、AOP的操作术语"><a href="#2-4、AOP的操作术语" class="headerlink" title="2.4、AOP的操作术语"></a>2.4、AOP的操作术语</h3><ul><li>1、连接点：类中的哪些方法可以被增强，哪些方法就是连接点</li><li>2、切入点：实际上真正被增强的方法就是切入点</li><li>3、通知（增强）：实际上增强的逻辑部分就是增强。有多种类型：<ul><li>前置通知 <code>@Before</code>：在增强的方法之前执行</li><li>后置通知 <code>@AfterReturning</code>：在增强的方法之后执行</li><li>环绕通知 <code>@Around</code>：在增强的方法前后都执行</li><li>异常通知 <code>@AfterThrowing</code>：当增强的方法出现异常时执行。如果出现异常，环绕通知在方法之后不执行，后置通知不执行</li><li>最终通知 <code>@After</code>：类似于finally。不管有没有异常都会执行</li></ul></li><li>4、切面：是一个动作，把 通知 应用到 切入点 的过程就是切面</li></ul><p>切入点的表达式：</p><ul><li>1、切入点表达式的作用：知道对哪个类里面的哪个方法进行增强</li><li>2、语法：<code>execution([权限修饰符][返回类型][全类名][方法名称]([参数列表]))</code><ul><li>权限修饰符可以使用 <code>*</code> 代替，表示任意的修饰符</li><li>返回类型可以省略</li><li>参数列表可以使用 <code>..</code> 表示方法中的参数</li><li>举例1：对 org.example.dao.BookDao 类中的 add 方法进行增强：<code>execution(* org.example.dao.BookDao.add(..)</code></li><li>举例2：对 org.example.dao.BookDao 类中的所有方法进行增强：<code>execution(* org.example.dao.BookDao.*(..))</code></li><li>举例3：对 org.example.dao 包中的所有类，类里边的所有方法进行增强：<code>execution(* org.example.dao.*.*(..))</code></li></ul></li></ul><h3 id="2-5、Spring框架一般基于AspectJ实现AOP操作"><a href="#2-5、Spring框架一般基于AspectJ实现AOP操作" class="headerlink" title="2.5、Spring框架一般基于AspectJ实现AOP操作"></a>2.5、Spring框架一般基于AspectJ实现AOP操作</h3><h4 id="2-5-1、什么是AspectJ"><a href="#2-5-1、什么是AspectJ" class="headerlink" title="2.5.1、什么是AspectJ"></a>2.5.1、什么是AspectJ</h4><p>AspectJ 不是Spring的组成部分，它是单独、独立的AOP框架。一般把AspectJ 和Spring框架一起使用，进行AOP操作</p><h4 id="2-5-2、基于AspectJ-实现AOP操作"><a href="#2-5-2、基于AspectJ-实现AOP操作" class="headerlink" title="2.5.2、基于AspectJ 实现AOP操作"></a>2.5.2、基于AspectJ 实现AOP操作</h4><p><strong>引入依赖：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aop --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-aop<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.2.6.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>      <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aspects --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-aspects<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.2.6.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>      <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/cglib/cglib --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>cglib<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>cglib<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>      <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/aopalliance/aopalliance --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>aopalliance<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>aopalliance<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>      <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.aspectj<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>aspectjweaver<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.6.8<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>runtime<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="1、基于xml配置文件方式实现（不常用）"><a href="#1、基于xml配置文件方式实现（不常用）" class="headerlink" title="1、基于xml配置文件方式实现（不常用）"></a>1、基于xml配置文件方式实现（不常用）</h5><h6 id="1、创建被增强类和增强类"><a href="#1、创建被增强类和增强类" class="headerlink" title="1、创建被增强类和增强类"></a>1、创建被增强类和增强类</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.aopxml;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Book</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">buy</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;Book.buy&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.aopxml;<br><br><span class="hljs-keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BookProxy</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 前置通知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">before</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;BookProxy.before&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 后置通知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterReturning</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;BookProxy.afterReturning&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 异常通知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterThrowing</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;BookProxy.afterThrowing&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 最终通知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">after</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;BookProxy.after&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 环绕通知</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> proceedingJoinPoint</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@throws</span> Throwable</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">around</span><span class="hljs-params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>        System.out.println(<span class="hljs-string">&quot;BookProxy.around 环绕通知之前&quot;</span>);<br>        proceedingJoinPoint.proceed();<br>        System.out.println(<span class="hljs-string">&quot;BookProxy.around 环绕通知之后&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="2、在Spring的xml配置文件中创建两个类对象-并在Spring的xml配置文件中配置切入点"><a href="#2、在Spring的xml配置文件中创建两个类对象-并在Spring的xml配置文件中配置切入点" class="headerlink" title="2、在Spring的xml配置文件中创建两个类对象,并在Spring的xml配置文件中配置切入点"></a>2、在Spring的xml配置文件中创建两个类对象,并在Spring的xml配置文件中配置切入点</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:aop</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/aop&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--创建对象--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;book&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.aopxml.Book&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;bookProxy&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.example.spring5.aopxml.BookProxy&quot;</span>/&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置AOP的增强--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">aop:config</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--配置切入点--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">aop:pointcut</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;p&quot;</span> <span class="hljs-attr">expression</span>=<span class="hljs-string">&quot;execution(* org.example.spring5.aopxml.Book.buy(..))&quot;</span>/&gt;</span><br>        <span class="hljs-comment">&lt;!--配置切面  aop:aspect ref=&quot;增强类对象的id&quot; --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">aop:aspect</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;bookProxy&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--配置增强作用在具体的方法上 aop:before method=&quot;增强类中的方法名&quot; pointcut-red=&quot;上面配置的切入点的id&quot;  --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">aop:before</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;before&quot;</span> <span class="hljs-attr">pointcut-ref</span>=<span class="hljs-string">&quot;p&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">aop:after-returning</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;afterReturning&quot;</span> <span class="hljs-attr">pointcut-ref</span>=<span class="hljs-string">&quot;p&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">aop:after-throwing</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;afterThrowing&quot;</span> <span class="hljs-attr">pointcut-ref</span>=<span class="hljs-string">&quot;p&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">aop:after</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;after&quot;</span> <span class="hljs-attr">pointcut-ref</span>=<span class="hljs-string">&quot;p&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">aop:around</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;around&quot;</span> <span class="hljs-attr">pointcut-ref</span>=<span class="hljs-string">&quot;p&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">aop:aspect</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">aop:config</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="2-1、基于注解方式实现（常用）"><a href="#2-1、基于注解方式实现（常用）" class="headerlink" title="2.1、基于注解方式实现（常用）"></a>2.1、基于注解方式实现（常用）</h5><h6 id="1、创建被增强类，在类中定义方法，并使用注解-Component创建被增强类的对象"><a href="#1、创建被增强类，在类中定义方法，并使用注解-Component创建被增强类的对象" class="headerlink" title="1、创建被增强类，在类中定义方法，并使用注解@Component创建被增强类的对象"></a>1、创建被增强类，在类中定义方法，并使用注解<code>@Component</code>创建被增强类的对象</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.aopanno;<br><br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 被增强类（连接点）</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span> &#123;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-keyword">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;User.add&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="2、创建增强类，编写增强逻辑，并使用注解-Component创建增强类对象-使用注解-Aspect-生成代理对象，并且通过在对应通知方法上加上对应通知的注解，使用切入点表达式来配置不同类型的通知"><a href="#2、创建增强类，编写增强逻辑，并使用注解-Component创建增强类对象-使用注解-Aspect-生成代理对象，并且通过在对应通知方法上加上对应通知的注解，使用切入点表达式来配置不同类型的通知" class="headerlink" title="2、创建增强类，编写增强逻辑，并使用注解@Component创建增强类对象,使用注解@Aspect 生成代理对象，并且通过在对应通知方法上加上对应通知的注解，使用切入点表达式来配置不同类型的通知"></a>2、创建增强类，编写增强逻辑，并使用注解<code>@Component</code>创建增强类对象,使用注解<code>@Aspect</code> 生成代理对象，并且通过在对应通知方法上加上对应通知的注解，使用切入点表达式来配置不同类型的通知</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.aopanno;<br><br><span class="hljs-keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.*;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 增强类（切入点）</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@Aspect</span>  <span class="hljs-comment">// 生成代理对象</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserProxy</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 前置通知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Before(value = &quot;execution(* org.example.spring5.aopanno.User.add(..))&quot;)</span>  <span class="hljs-comment">// value可以省略</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">before</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;UserProxy.before&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 后置通知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@AfterReturning(&quot;execution(* org.example.spring5.aopanno.User.add(..))&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterReturning</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;UserProxy.afterReturning&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 异常通知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@AfterThrowing(&quot;execution(* org.example.spring5.aopanno.User.add(..))&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterThrowing</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;UserProxy.afterThrowing&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 最终通知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@After(&quot;execution(* org.example.spring5.aopanno.User.add(..))&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">after</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;UserProxy.after&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 环绕通知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Around(&quot;execution(* org.example.spring5.aopanno.User.add(..))&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">around</span><span class="hljs-params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>        System.out.println(<span class="hljs-string">&quot;UserProxy.around 环绕之前&quot;</span>);<br>        proceedingJoinPoint.proceed();  <span class="hljs-comment">// 代表执行目标方法</span><br>        System.out.println(<span class="hljs-string">&quot;UserProxy.around 环绕之后&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="3、进行通知的配置"><a href="#3、进行通知的配置" class="headerlink" title="3、进行通知的配置"></a>3、进行通知的配置</h6><p>在Spring的xml配置文件中，引入context和aop命名空间，然后开启组件扫描；并开启生成代理对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;<br>&lt;beans xmlns=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span><br>       xmlns:xsi=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br>       xmlns:context=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span>  引入context命名空间<br>       xmlns:aop=<span class="hljs-string">&quot;http://www.springframework.org/schema/aop&quot;</span>   引入aop命名空间<br>       xsi:schemaLocation=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span><br><span class="hljs-string">       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd  引入context命名空间</span><br><span class="hljs-string">       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;  引入aop命名空间<br><br>    &lt;!--开启组件扫描--&gt;<br>    &lt;context:component-scan base-<span class="hljs-keyword">package</span>=<span class="hljs-string">&quot;org.example.spring5.aopanno&quot;</span>/&gt;<br><br>    &lt;!--开启AspectJ 生成代理对象  aop:aspectj-autoproxy：寻找<span class="hljs-meta">@Aspect</span>注解，只要有这个注解就会自动生成代理对象--&gt;<br>    &lt;aop:aspectj-autoproxy/&gt;<br>&lt;/beans&gt;<br></code></pre></td></tr></table></figure><h5 id="2-2、基于注解方式实现的细节"><a href="#2-2、基于注解方式实现的细节" class="headerlink" title="2.2、基于注解方式实现的细节"></a>2.2、基于注解方式实现的细节</h5><h6 id="2-2-1、当有多个不同类型的通知对同一个切入点进行增强时，提取相同的切入点表达式"><a href="#2-2-1、当有多个不同类型的通知对同一个切入点进行增强时，提取相同的切入点表达式" class="headerlink" title="2.2.1、当有多个不同类型的通知对同一个切入点进行增强时，提取相同的切入点表达式"></a>2.2.1、当有多个不同类型的通知对同一个切入点进行增强时，提取相同的切入点表达式</h6><p>首先在增强类中定义一个方法，在新定义的方法上加上注解<code>@Pointcut(&quot;切入点表达式&quot;)</code>，然后在通知注解中将切入点表达式替换成新定义的方法名</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.aopanno;<br><br><span class="hljs-keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.*;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 增强类（切入点）</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@Aspect</span>  <span class="hljs-comment">// 生成代理对象</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserProxy</span> &#123;<br><br>    <span class="hljs-comment">//把相同的切入点进行抽取</span><br>    <span class="hljs-meta">@Pointcut(value = &quot;execution(* org.example.spring5.aopanno.User.add(..))&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">pointDemo</span><span class="hljs-params">()</span> &#123;<br>    &#125;<br><br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 前置通知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Before(value = &quot;pointDemo()&quot;)</span>  <span class="hljs-comment">// value可以省略</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">before</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;UserProxy.before&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 后置通知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@AfterReturning(&quot;pointDemo()&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterReturning</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;UserProxy.afterReturning&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 异常通知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@AfterThrowing(&quot;pointDemo()&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterThrowing</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;UserProxy.afterThrowing&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 最终通知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@After(&quot;pointDemo()&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">after</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;UserProxy.after&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 环绕通知</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Around(&quot;pointDemo()&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">around</span><span class="hljs-params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>        System.out.println(<span class="hljs-string">&quot;UserProxy.around 环绕之前&quot;</span>);<br>        proceedingJoinPoint.proceed();  <span class="hljs-comment">// 代表执行目标方法</span><br>        System.out.println(<span class="hljs-string">&quot;UserProxy.around 环绕之后&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="2-2-2、当有多个增强类对同一个方法进行增强时，可以设置增强类的优先级"><a href="#2-2-2、当有多个增强类对同一个方法进行增强时，可以设置增强类的优先级" class="headerlink" title="2.2.2、当有多个增强类对同一个方法进行增强时，可以设置增强类的优先级"></a>2.2.2、当有多个增强类对同一个方法进行增强时，可以设置增强类的优先级</h6><p>可以在不同的增强类上面加上注解<code>@Order(数字类型的值)</code>。这个数字类型的值越小，优先级越高</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.aopanno;<br><br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Aspect;<br><span class="hljs-keyword">import</span> org.aspectj.lang.annotation.Before;<br><span class="hljs-keyword">import</span> org.springframework.core.annotation.Order;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Order(1)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PersonProxy</span> &#123;<br><br>    <span class="hljs-meta">@Before(&quot;execution(* org.example.spring5.aopanno.User.add(..))&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">before</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;PersonProxy.before&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="2-2-3、完全使用注解"><a href="#2-2-3、完全使用注解" class="headerlink" title="2.2.3、完全使用注解"></a>2.2.3、完全使用注解</h6><p>完全注解启动时可以使用 <code>@EnableAspectJAutAoProxy(proxyTargetClass = true)</code> 注解来替换xml中的 <code>&lt;aop:aspectj-autoproxy/&gt;</code> 标签，用于将加了@Aspect注意的类生成代理对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.aopanno.config;<br><br><span class="hljs-keyword">import</span> org.springframework.context.annotation.ComponentScan;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.EnableAspectJAutoProxy;<br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@ComponentScan(&quot;org.example.spring5.aopanno&quot;)</span><br><span class="hljs-meta">@EnableAspectJAutoProxy(proxyTargetClass = true)</span>  <span class="hljs-comment">// 替代xml中的&lt;aop:aspectj-autoproxy/&gt;标签，用于将加了@Aspect注解的类生成代理对象</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpringConfig</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="3、JdbcTemplate"><a href="#3、JdbcTemplate" class="headerlink" title="3、JdbcTemplate"></a>3、JdbcTemplate</h2><h3 id="3-1、什么是JdbcTemplate"><a href="#3-1、什么是JdbcTemplate" class="headerlink" title="3.1、什么是JdbcTemplate"></a>3.1、什么是JdbcTemplate</h3><ul><li>Spring框架对JDBC进行了封装，使用JdbcTemplate 可以实现方便的对数据库进行操作</li></ul><h3 id="3-2、准备工作"><a href="#3-2、准备工作" class="headerlink" title="3.2、准备工作"></a>3.2、准备工作</h3><h4 id="1、引入依赖"><a href="#1、引入依赖" class="headerlink" title="1、引入依赖"></a>1、引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.1.6<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>druid<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.1.9<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-jdbc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.2.6.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-tx --&gt;</span><br>        <span class="hljs-comment">&lt;!--事务--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-tx<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.2.6.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-orm --&gt;</span><br>        <span class="hljs-comment">&lt;!--整合其他框架用--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-orm<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.2.6.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2、在Spring的xml配置文件中配置数据库连接池；配置JdbcTemplate对象，注入DataSource；开启组件扫描"><a href="#2、在Spring的xml配置文件中配置数据库连接池；配置JdbcTemplate对象，注入DataSource；开启组件扫描" class="headerlink" title="2、在Spring的xml配置文件中配置数据库连接池；配置JdbcTemplate对象，注入DataSource；开启组件扫描"></a>2、在Spring的xml配置文件中配置数据库连接池；配置JdbcTemplate对象，注入DataSource；开启组件扫描</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:context</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--数据库连接池的配置--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span> <span class="hljs-attr">destroy-method</span>=<span class="hljs-string">&quot;close&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;jdbc:mysql://主机:端口/spring&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;root&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;root&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driverClassName&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--创建JdbcTemplate的对象,注入dataSource--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;jdbcTemplate&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;dataSource&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--开启组件扫描--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;org.example.spring5&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3、创建service类、dao类，并在类上加上对应的注解，将它们交给Spring管理；在dao中注入jdbcTemplate对象"><a href="#3、创建service类、dao类，并在类上加上对应的注解，将它们交给Spring管理；在dao中注入jdbcTemplate对象" class="headerlink" title="3、创建service类、dao类，并在类上加上对应的注解，将它们交给Spring管理；在dao中注入jdbcTemplate对象"></a>3、创建service类、dao类，并在类上加上对应的注解，将它们交给Spring管理；在dao中注入jdbcTemplate对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.dao;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">BookDao</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.dao.impl;<br><br><span class="hljs-keyword">import</span> org.example.spring5.dao.BookDao;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Repository;<br><br><span class="hljs-meta">@Repository</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BookDaoImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">BookDao</span> &#123;<br><br>    <span class="hljs-comment">//注入JdbcTemplate</span><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> JdbcTemplate jdbcTemplate;<br><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.service;<br><br><span class="hljs-keyword">import</span> org.example.spring5.dao.BookDao;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BookService</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> BookDao bookDao;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-3、操作数据库"><a href="#3-3、操作数据库" class="headerlink" title="3.3、操作数据库"></a>3.3、操作数据库</h3><h4 id="1、增加、修改、删除操作"><a href="#1、增加、修改、删除操作" class="headerlink" title="1、增加、修改、删除操作"></a>1、增加、修改、删除操作</h4><p><strong>调用 <code>jdbcTemplate.update(String sql,Object... args)</code> 方法实现添加操作</strong></p><p>举例:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addBook</span><span class="hljs-params">(Book book)</span> &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">sql</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;insert into t_book values(?,?,?)&quot;</span>;<br>    Object[] args = &#123;book.getUserId(), book.getUsername(), book.getUstatus()&#125;;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">insert</span> <span class="hljs-operator">=</span> jdbcTemplate.update(sql, args);<br>    System.out.println(<span class="hljs-string">&quot;insert = &quot;</span> + insert);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2、查询操作"><a href="#2、查询操作" class="headerlink" title="2、查询操作"></a>2、查询操作</h4><h5 id="2-1、查询返回某个值"><a href="#2-1、查询返回某个值" class="headerlink" title="2.1、查询返回某个值"></a>2.1、查询返回某个值</h5><p><strong>调用 <code>jdbcTemplate.queryForObject(String sql,Class&lt;T&gt; 返回值类型.class)</code>方法实现查询某个值</strong> </p><h5 id="2-2、查询返回对象"><a href="#2-2、查询返回对象" class="headerlink" title="2.2、查询返回对象"></a>2.2、查询返回对象</h5><p>**调用 <code>jdbcTemplate.queryForObject(String sql,RowMapper&lt;T&gt; rowMapper,Class&lt;T&gt; 返回值类型.class)</code>方法实现查询某个对象 **</p><p>其中RowMapper是一个接口，用于返回不同类型的数据。使用这个接口中的实现类完成数据的封装。一般常用它的实现类BeanPropertyRowMapper来处理</p><h5 id="2-3、查询返回集合"><a href="#2-3、查询返回集合" class="headerlink" title="2.3、查询返回集合"></a>2.3、查询返回集合</h5><p><strong>调用 <code>jdbcTemplate.query(String sql,RowMapper&lt;T&gt; rowMapper,Class&lt;T&gt; 返回值类型.class)</code> 方法实现查询集合</strong></p><h4 id="3、批量操作"><a href="#3、批量操作" class="headerlink" title="3、批量操作"></a>3、批量操作</h4><p><strong>批量添加、修改、删除</strong></p><p><strong>调用 <code>jdbcTemplate.batchUpdate(String sql,List&lt;Object []&gt; batchArgs)</code> 来实现批量操作</strong></p><h2 id="4、事务操作"><a href="#4、事务操作" class="headerlink" title="4、事务操作"></a>4、事务操作</h2><h3 id="4-1、什么是事务"><a href="#4-1、什么是事务" class="headerlink" title="4.1、什么是事务"></a>4.1、什么是事务</h3><p>事务是数据库操作最基本的单元，是指逻辑上的一组操作。如果有一个操作失败，那就都失败</p><h3 id="4-2、事务有4大特性-ACID"><a href="#4-2、事务有4大特性-ACID" class="headerlink" title="4.2、事务有4大特性 ACID"></a>4.2、事务有4大特性 ACID</h3><ul><li>原子性：事务中的所有操作要么全部完成，要么全部不完成，不会出现部分完成的情况。如果事务在执行过程中发生了错误，所有的操作都会被回滚到事务开始前的状态，保证数据的一致性。</li><li>一致性：事务执行前后，数据库的完整性约束没有被破坏。在事务执行过程中，如果数据不满足约束条件，则事务会被回滚，保证数据的一致性和完整性</li><li>隔离性：多个事务同时执行时，每个事务都应该感觉不到其他事务的存在。事务之间要相互隔离，保证并发执行的正确性。数据库系统提供了四种隔离级别：读未提交（Read Uncommitted）、读已提交（Read Committed）、可重复读（Repeatable Read）、串行化（Serializable）。</li><li>持久性：事务完成后，对数据库的修改是永久性的，即使系统崩溃也不会丢失。数据库系统会将事务的结果写入到永久存储器中，保证数据的持久性。</li></ul><h3 id="4-3、Spring事务管理"><a href="#4-3、Spring事务管理" class="headerlink" title="4.3、Spring事务管理"></a>4.3、Spring事务管理</h3><h4 id="1、介绍"><a href="#1、介绍" class="headerlink" title="1、介绍"></a>1、介绍</h4><p>事务管理通常加到Service层</p><p>在Spring进行事务管理操作有两种方式：</p><ul><li><strong>声明式事务管理（使用）</strong></li><li>编程式事务管理</li></ul><p>声明式事务管理有两种方式：</p><ul><li><strong>基于注解方式（方便）</strong></li><li>基于xml配置文件方式</li></ul><p>在Spring中进行声明式事务管理，底层使用AOP原理</p><h4 id="2、事务管理相关API接口"><a href="#2、事务管理相关API接口" class="headerlink" title="2、事务管理相关API接口"></a>2、事务管理相关API接口</h4><p>提供了一个<strong>接口（PlatformTransactionManager）</strong>，代表事务管理器。这个接口针对不同框架提供了不同的实现类</p><p>对于Jdbc模板和MyBatis框架提供的实现类都是<strong>DataSourceTransactionManager</strong></p><h4 id="3、注解方式实现声明式事务管理"><a href="#3、注解方式实现声明式事务管理" class="headerlink" title="3、注解方式实现声明式事务管理"></a>3、注解方式实现声明式事务管理</h4><ul><li><p>1、在Spring 的xml配置文件中配置事务管理器；开启事务注解，并指出使用的是哪个事务管理器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:context</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:tx</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/tx&quot;</span>  <span class="hljs-attr">新的命名空间tx</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span>  新的命名空间tx<br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;org.example.spring5&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;jdbc:mysql://主机:端口/数据库&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;用户名&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;密码&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driverClassName&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;jdbcTemplate&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;dataSource&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--创建事务管理器：DataSourceTransactionManager--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;transactionManager&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;dataSource&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--开启事务注解,在其中指出使用的是哪个事务管理器--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tx:annotation-driven</span> <span class="hljs-attr">transaction-manager</span>=<span class="hljs-string">&quot;transactionManager&quot;</span>/&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>2、在Service类或者方法上添加事务注解<code>@Transactional</code></p><p><code>@Transactional</code>这个注解既可以添加在类上，也可以添加到方法上 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.service;<br><br><span class="hljs-keyword">import</span> org.example.spring5.dao.UserDao;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><span class="hljs-keyword">import</span> org.springframework.transaction.annotation.Transactional;<br><br><span class="hljs-meta">@Service</span><br><span class="hljs-meta">@Transactional</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserService</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> UserDao userDao;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">accountMoney</span><span class="hljs-params">()</span> &#123;<br><br>        userDao.reduceMoney();<br>        <span class="hljs-comment">//模拟异常</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span> / <span class="hljs-number">0</span>;<br>        userDao.addMoney();<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="4、-Transactional注解参数配置"><a href="#4、-Transactional注解参数配置" class="headerlink" title="4、@Transactional注解参数配置"></a>4、<code>@Transactional</code>注解参数配置</h4><ul><li><p><font color=#3271ae><strong><code>propagation</code></strong></font>：设置事务的传播行为。默认值为<code>Propagation.REQUIRED</code>，表示方法需要在一个事务中执行。</p><ul><li><p>1、<font color=#3271ae><strong><code>REQUIRED</code></strong> </font>表示当前方法必须运行在事务中，如果当前存在事务，则加入该事务，否则创建一个新的事务。<font color=#3271ae>这个传播行为适用于需要保证方法和方法之间的事务一致性的情况，<strong>例如在一个方法中调用了另一个方法，这两个方法需要在同一个事务中执行。</strong></font></p></li><li><p>2、**<code>REQUIRES_NEW</code>** 表示当前方法必须运行在一个新的事务中，如果当前存在事务，则挂起该事务，并创建一个新的事务。这个传播行为适用于需要在方法中执行独立的事务，不受外部事务的影响，<strong>例如需要在方法中进行数据的修改或删除操作。如果方法执行过程中发生异常，只会回滚当前方法的事务，不会影响外部事务的执行。</strong></p></li><li><p>3、**<code>SUPPORTS</code>** 表示当前方法不需要事务支持，如果当前存在事务，则加入该事务，否则以非事务方式运行。这个传播行为适用于不需要在方法中进行数据库操作，或者需要在方法中进行只读操作的情况，<strong>例如查询操作。</strong></p></li><li><p>4、<code>MANDATORY</code> 表示当前方法必须运行在事务中，如果当前不存在事务，则抛出异常。</p></li><li><p>5、<code>NOT_SUPPORTED</code> 表示当前方法不需要事务支持，如果当前存在事务，则挂起该事务，并以非事务方式运行。</p></li><li><p>6、<code>NEVER</code> 表示当前方法不允许运行在事务中，如果当前存在事务，则抛出异常。</p></li><li><p>7、<code>NESTED</code> 表示当前方法必须运行在一个嵌套事务中，如果当前存在事务，则在该事务的上下文中运行，否则创建一个新的嵌套事务。</p></li></ul></li><li><p><font color=#3271ae><strong><code>isolation</code></strong></font>：设置事务的隔离级别。默认值为<code>Isolation.DEFAULT</code>，表示使用数据库的默认隔离级别。其他可选值包括<code>Isolation.READ_UNCOMMITTED</code>、<code>Isolation.READ_COMMITTED</code>、<code>Isolation.REPEATABLE_READ</code>和<code>Isolation.SERIALIZABLE</code>等。其中MySQL数据库默认使用的隔离级别是：<strong>repeatable_read</strong></p><ul><li><p>在并发事务执行的情况下，可能会出现以下三种问题：</p><ol><li>脏读：一个事务读取了另一个事务还未提交的数据，然后基于这个未提交的数据进行了操作。如果这个事务回滚，那么所读取的数据就是无效的，这就是脏读。</li><li>不可重复读：一个事务读取了同一行数据两次，但是在两次读取之间，另一个事务修改了该行数据，导致第二次读取的数据与第一次读取的数据不一致。这就是不可重复读。</li><li>幻读：一个事务读取了一组数据，然后另一个事务插入了一行数据，导致第一个事务再次读取这组数据时，发现该组数据中多了一行数据，这就是幻读。</li></ol><p>这三种问题的区别在于，脏读主要发生在写操作上，不可重复读主要发生在修改操作上，幻读主要发生在插入和删除操作上。为了避免这些问题，需要使用合适的事务隔离级别。</p></li><li><p>事务的隔离级别共有四种，分别是：</p><ol><li><code>READ_UNCOMMITTED</code>：读未提交。在该隔离级别下，一个事务可以读取另一个事务还未提交的数据，可能会出现脏读、不可重复读和幻读的问题。</li><li><code>READ_COMMITTED</code>：读已提交。在该隔离级别下，一个事务只能读取另一个事务已经提交的数据，可以避免脏读的问题，但是可能会出现不可重复读和幻读的问题。</li><li><code>REPEATABLE_READ</code>：可重复读。在该隔离级别下，一个事务在执行期间多次读取同一行数据时，会保证数据的一致性，避免了不可重复读的问题，但是可能会出现幻读的问题。</li><li><code>SERIALIZABLE</code>：串行化。在该隔离级别下，所有事务串行执行，避免了脏读、不可重复读和幻读的问题，但是会降低并发性能。</li></ol></li></ul></li><li><p><code>timeout</code>：设置事务的超时时间，单位为秒。<strong>默认值为-1</strong>，表示没有超时限制。</p><ul><li>事务需要在一定时间内进行提交，如果在规定时间内不提交进行回滚</li></ul></li><li><p><code>readOnly</code>：设置事务是否为只读事务。<strong>默认值为false</strong>，表示事务可以读取和修改数据。如果设置为true，则只能读取数据，不能修改数据，这样可以提高事务的并发性能。</p></li><li><p><code>rollbackFor</code>和<code>noRollbackFor</code>：指定需要回滚的异常类型和不需要回滚的异常类型。如果出现指定的异常类型，则事务会回滚；如果出现指定的异常类型之外的异常，则事务不会回滚。可以使用<code>value</code>属性指定多个异常类型。</p></li></ul><h4 id="5、xml方式实现声明式事务管理"><a href="#5、xml方式实现声明式事务管理" class="headerlink" title="5、xml方式实现声明式事务管理"></a>5、xml方式实现声明式事务管理</h4><h5 id="开启组件扫描；配置数据源；配置Jdbc模板；配置事务管理器；配置事务的通知；配置切入点和切面"><a href="#开启组件扫描；配置数据源；配置Jdbc模板；配置事务管理器；配置事务的通知；配置切入点和切面" class="headerlink" title="开启组件扫描；配置数据源；配置Jdbc模板；配置事务管理器；配置事务的通知；配置切入点和切面"></a>开启组件扫描；配置数据源；配置Jdbc模板；配置事务管理器；配置事务的通知；配置切入点和切面</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:context</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:tx</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/tx&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:aop</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/aop&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">        http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">        http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--开启组件扫描--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;org.example.spring5&quot;</span>/&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置数据源dataSource--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;jdbc:mysql://主机:端口/spring&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;用户名&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;密码&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driverClassName&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置jdbc模板--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;jdbcTemplate&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;dataSource&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置事务管理器--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;transactionManager&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;dataSource&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置通知，利用tx:advice--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tx:advice</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;txadvice&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--配置事务的相关参数--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tx:attributes</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--指定在哪种规则的方法上面添加事务--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">tx:method</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;accountMoney&quot;</span> <span class="hljs-attr">propagation</span>=<span class="hljs-string">&quot;REQUIRED&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tx:attributes</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">tx:advice</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置切入点和切面--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">aop:config</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--配置切入点--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">aop:pointcut</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;pt&quot;</span> <span class="hljs-attr">expression</span>=<span class="hljs-string">&quot;execution(* org.example.spring5.service.UserService.*(..))&quot;</span>/&gt;</span><br>        <span class="hljs-comment">&lt;!--配置切面：给切入点上设置事务的通知--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">aop:advisor</span> <span class="hljs-attr">advice-ref</span>=<span class="hljs-string">&quot;txadvice&quot;</span> <span class="hljs-attr">pointcut-ref</span>=<span class="hljs-string">&quot;pt&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">aop:config</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="6、全注解方式实现声明式事务管理"><a href="#6、全注解方式实现声明式事务管理" class="headerlink" title="6、全注解方式实现声明式事务管理"></a>6、全注解方式实现声明式事务管理</h4><h5 id="创建配置类，在配置类中添加注解来替代xml文件"><a href="#创建配置类，在配置类中添加注解来替代xml文件" class="headerlink" title="创建配置类，在配置类中添加注解来替代xml文件"></a>创建配置类，在配置类中添加注解来替代xml文件</h5><p>@EnableTransactionManagement会自动配置一个基于注解的事务管理器，它会扫描所有被@Transactional注解标记的方法，并在这些方法执行时开启事务。当方法执行成功时，它会提交事务，否则会回滚事务。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.config;<br><br><span class="hljs-keyword">import</span> com.alibaba.druid.pool.DruidDataSource;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.ComponentScan;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;<br><span class="hljs-keyword">import</span> org.springframework.jdbc.datasource.DataSourceTransactionManager;<br><span class="hljs-keyword">import</span> org.springframework.transaction.annotation.EnableTransactionManagement;<br><br><span class="hljs-keyword">import</span> javax.sql.DataSource;<br><br><span class="hljs-meta">@Configuration</span>  <span class="hljs-comment">// 代表这是个配置类</span><br><span class="hljs-meta">@ComponentScan(basePackages = &quot;org.example.spring5&quot;)</span>  <span class="hljs-comment">// 开启组件扫描</span><br><span class="hljs-meta">@EnableTransactionManagement</span>  <span class="hljs-comment">// 自动配置一个基于注解的事务管理器</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">TxConfig</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建数据库连接池DataSource</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> DruidDataSource <span class="hljs-title function_">getDruidDataSource</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">DruidDataSource</span> <span class="hljs-variable">dataSource</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DruidDataSource</span>();<br>        dataSource.setUrl(<span class="hljs-string">&quot;jdbc:mysql://主机:端口/spring&quot;</span>);<br>        dataSource.setUsername(<span class="hljs-string">&quot;用户名&quot;</span>);<br>        dataSource.setPassword(<span class="hljs-string">&quot;密码&quot;</span>);<br>        dataSource.setDriverClassName(<span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span>);<br>        <span class="hljs-keyword">return</span> dataSource;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 创建JdbcTemplate</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> dataSource 从IOC容器中自动查找DataSource，也就是上面这个方法创建的DataSource</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> JdbcTemplate <span class="hljs-title function_">getJdbcTemplate</span><span class="hljs-params">(DataSource dataSource)</span> &#123;<br>        <span class="hljs-type">JdbcTemplate</span> <span class="hljs-variable">jdbcTemplate</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JdbcTemplate</span>();<br>        jdbcTemplate.setDataSource(dataSource);<br>        <span class="hljs-keyword">return</span> jdbcTemplate;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 配置事务管理器</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> dataSource</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> DataSourceTransactionManager <span class="hljs-title function_">getDataSourceTransactionManager</span><span class="hljs-params">(DataSource dataSource)</span> &#123;<br>        <span class="hljs-type">DataSourceTransactionManager</span> <span class="hljs-variable">dataSourceTransactionManager</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataSourceTransactionManager</span>();<br>        dataSourceTransactionManager.setDataSource(dataSource);<br>        <span class="hljs-keyword">return</span> dataSourceTransactionManager;<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="5、Spring5框架的一些新功能"><a href="#5、Spring5框架的一些新功能" class="headerlink" title="5、Spring5框架的一些新功能"></a>5、Spring5框架的一些新功能</h2><h3 id="1、整合第三方日志工具Log4j2"><a href="#1、整合第三方日志工具Log4j2" class="headerlink" title="1、整合第三方日志工具Log4j2"></a>1、整合第三方日志工具Log4j2</h3><p>Spring5框架自带了通用的日志封装，但是也能自己整合其他的第三方日志工具，比如<code>Log4j</code></p><p>Spring5已经移除Log4jConfigListener，官方建议使用Log4j2</p><h4 id="1-1、引入依赖"><a href="#1-1、引入依赖" class="headerlink" title="1.1、引入依赖"></a>1.1、引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>log4j-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.11.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>log4j-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.11.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.logging.log4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>log4j-slf4j-impl<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.11.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.slf4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>slf4j-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.7.30<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="1-2、创建log4j2-xml-配置文件（文件名是固定的）"><a href="#1-2、创建log4j2-xml-配置文件（文件名是固定的）" class="headerlink" title="1.2、创建log4j2.xml 配置文件（文件名是固定的）"></a>1.2、创建log4j2.xml 配置文件（文件名是固定的）</h4><p>日志：ERROR &gt; WARN &gt; INFO &gt; DEBUG</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-comment">&lt;!--日志级别以及优先级排序: OFF &gt; FATAL &gt; ERROR &gt; WARN &gt; INFO &gt; DEBUG &gt; TRACE &gt; ALL --&gt;</span><br><span class="hljs-comment">&lt;!--Configuration 后面的 status 用于设置 log4j2 自身内部的信息输出，可以不设置，当设置成 trace 时，可以看到 log4j2 内部各种详细输出--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span> <span class="hljs-attr">status</span>=<span class="hljs-string">&quot;INFO&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--先定义所有的 appender--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appenders</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--输出日志信息到控制台--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">console</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Console&quot;</span> <span class="hljs-attr">target</span>=<span class="hljs-string">&quot;SYSTEM_OUT&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--控制日志输出的格式--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">PatternLayout</span> <span class="hljs-attr">pattern</span>=<span class="hljs-string">&quot;%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%t] %-5level %logger&#123;36&#125; - %msg%n&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">console</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">appenders</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--然后定义 logger，只有定义 logger 并引入的 appender，appender 才会生效!--&gt;</span><br>    <span class="hljs-comment">&lt;!--root：用于指定项目的根日志，如果没有单独指定 Logger，则会使用 root 作为默认的日志输出--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">loggers</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">root</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;info&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;Console&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">loggers</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p><strong>通过上面两步，就可以在Spring5中整合Log4j2日志框架了。</strong></p><p><strong>另外，也可以自己在控制台手动输入日志：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.slf4j.Logger;<br><span class="hljs-keyword">import</span> org.slf4j.LoggerFactory;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserLog</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Logger</span> <span class="hljs-variable">log</span> <span class="hljs-operator">=</span> LoggerFactory.getLogger(UserLog.class);<br>    <br>    方法() &#123;<br>    log.warn/error/info...(<span class="hljs-string">&quot;手动输出日志&quot;</span>)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2、Spring5框架核心容器支持-Nullable注解"><a href="#2、Spring5框架核心容器支持-Nullable注解" class="headerlink" title="2、Spring5框架核心容器支持@Nullable注解"></a>2、Spring5框架核心容器支持<code>@Nullable</code>注解</h3><ul><li>@Nullable 注解可以使用在方法上、属性上、参数上。表示方法返回值可以为空，属性值可以为空，参数值可以为空</li></ul><h3 id="3、Spring5核心容器支持函数时风格GenericApplicationContext"><a href="#3、Spring5核心容器支持函数时风格GenericApplicationContext" class="headerlink" title="3、Spring5核心容器支持函数时风格GenericApplicationContext"></a>3、Spring5核心容器支持函数时风格GenericApplicationContext</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//函数式风格</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testGenericApplicationContext</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">GenericApplicationContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">GenericApplicationContext</span>();<br>    <span class="hljs-comment">//注册对象</span><br>    context.refresh();<br>    context.registerBean(<span class="hljs-string">&quot;user1&quot;</span>, User.class, () -&gt; <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>());<br>    <span class="hljs-comment">//获取在Spring中注册的对象</span><br>    <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> (User) context.getBean(<span class="hljs-string">&quot;user1&quot;</span>);<br>    System.out.println(<span class="hljs-string">&quot;user = &quot;</span> + user);<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4、整合JUnit4单元测试"><a href="#4、整合JUnit4单元测试" class="headerlink" title="4、整合JUnit4单元测试"></a>4、整合JUnit4单元测试</h3><h4 id="4-1、引入依赖"><a href="#4-1、引入依赖" class="headerlink" title="4.1、引入依赖"></a>4.1、引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.2.6.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="4-2、加上注解"><a href="#4-2、加上注解" class="headerlink" title="4.2、加上注解"></a>4.2、加上注解</h4><ul><li><code>@RunWith</code>：用于指定当前使用的是哪个版本的JUnit</li><li><code>@ContextConfiguration</code>：它告诉JUnit测试类在运行测试之前需要加载哪些Spring配置文件或注解，从而创建Spring应用程序上下文</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.test;<br><br><span class="hljs-keyword">import</span> org.example.spring5.service.UserService;<br><span class="hljs-keyword">import</span> org.junit.Test;<br><span class="hljs-keyword">import</span> org.junit.runner.RunWith;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.test.context.ContextConfiguration;<br><span class="hljs-keyword">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;<br><br><span class="hljs-meta">@RunWith(SpringJUnit4ClassRunner.class)</span>  <span class="hljs-comment">//@RunWith注解用于指定当前使用的是哪个版本的JUnit</span><br><span class="hljs-meta">@ContextConfiguration(&quot;classpath:bean1.xml&quot;)</span><span class="hljs-comment">// 加载配置文件,等价于 ApplicationContext context = new ClassPathXmlApplicationContext(&quot;bean1.xml&quot;);  然后就可以在下面利用@AutoWired注解直接注入对象了</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JTest4</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> UserService userService;<br><br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test1</span><span class="hljs-params">()</span>&#123;<br>        userService.accountMoney();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="5、整合JUnit5单元测试"><a href="#5、整合JUnit5单元测试" class="headerlink" title="5、整合JUnit5单元测试"></a>5、整合JUnit5单元测试</h3><h4 id="5-1、引入依赖"><a href="#5-1、引入依赖" class="headerlink" title="5.1、引入依赖"></a>5.1、引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.junit.jupiter<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit-jupiter-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.9.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>compile<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="5-2、加入JUnit5的新注解"><a href="#5-2、加入JUnit5的新注解" class="headerlink" title="5.2、加入JUnit5的新注解"></a>5.2、加入JUnit5的新注解</h4><ul><li>@ExtendWith(SpringExtension.class)<br>@ContextConfiguration(“classpath:bean1.xml”)</li><li>@SpringJUnitConfig (location&#x3D;”classpath:bean1.xml”)  这个注解等同于上面两个注解之和，作用是告诉JUnit测试类在运行测试之前需要加载哪些Spring配置文件或注解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.spring5.test;<br><br><span class="hljs-keyword">import</span> org.example.spring5.service.UserService;<br><span class="hljs-keyword">import</span> org.junit.jupiter.api.Test;<br><span class="hljs-keyword">import</span> org.junit.jupiter.api.extension.ExtendWith;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.test.context.ContextConfiguration;<br><span class="hljs-keyword">import</span> org.springframework.test.context.junit.jupiter.SpringExtension;<br><br><span class="hljs-meta">@ExtendWith(SpringExtension.class)</span><br><span class="hljs-meta">@ContextConfiguration(&quot;classpath:bean1.xml&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JTest5</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> UserService userService;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">test1</span><span class="hljs-params">()</span>&#123;<br>        userService.accountMoney(); <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="二、MyBatis"><a href="#二、MyBatis" class="headerlink" title="二、MyBatis"></a>二、MyBatis</h1><p>MySQL不同版本的注意事项：</p><ul><li><p>1、驱动类driver-class-name</p><ul><li>MySQL5使用jdbc5驱动，驱动类使用：<code>com.mysql.jdbc.Driver</code></li><li>MySQL8使用jdbc8驱动，驱动类使用：<code>com.mysql.cj.jdbc.Driver</code></li></ul></li><li><p>2、连接地址url</p><ul><li>MySQL5版本的url：<code>jdbc:mysql://localhost:3306/ssm</code></li><li>MySQL8版本的url：<code>jdbc:mysql://localhost:3306/ssm?serverTimezone=UTC</code></li></ul></li></ul><h2 id="1、搭建MyBatis"><a href="#1、搭建MyBatis" class="headerlink" title="1、搭建MyBatis"></a>1、搭建MyBatis</h2><h3 id="1-1、创建maven工程，引入依赖"><a href="#1-1、创建maven工程，引入依赖" class="headerlink" title="1.1、创建maven工程，引入依赖"></a>1.1、创建maven工程，引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--MyBatis核心--&gt;</span><br><span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.7<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!--junit--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.12<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!--MySQL驱动--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>8.0.16<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="1-2、创建表"><a href="#1-2、创建表" class="headerlink" title="1.2、创建表"></a>1.2、创建表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `t_user` (<br>  `id` <span class="hljs-type">int</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT,<br>  `username` <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `password` <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `age` <span class="hljs-type">int</span> <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `gender` <span class="hljs-type">char</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  `email` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb4 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8mb4_0900_ai_ci;<br></code></pre></td></tr></table></figure><h3 id="1-3、创建实体类"><a href="#1-3、创建实体类" class="headerlink" title="1.3、创建实体类"></a>1.3、创建实体类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.mybatis.pojo;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer id;<br>    <span class="hljs-keyword">private</span> String username;<br>    <span class="hljs-keyword">private</span> String password;<br>    <span class="hljs-keyword">private</span> Integer age;<br>    <span class="hljs-keyword">private</span> String gender;<br>    <span class="hljs-keyword">private</span> String email;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">User</span><span class="hljs-params">()</span> &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">User</span><span class="hljs-params">(Integer id, String username, String password, Integer age, String gender, String email)</span> &#123;<br>        <span class="hljs-built_in">this</span>.id = id;<br>        <span class="hljs-built_in">this</span>.username = username;<br>        <span class="hljs-built_in">this</span>.password = password;<br>        <span class="hljs-built_in">this</span>.age = age;<br>        <span class="hljs-built_in">this</span>.gender = gender;<br>        <span class="hljs-built_in">this</span>.email = email;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getId</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> id;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setId</span><span class="hljs-params">(Integer id)</span> &#123;<br>        <span class="hljs-built_in">this</span>.id = id;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getUsername</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> username;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setUsername</span><span class="hljs-params">(String username)</span> &#123;<br>        <span class="hljs-built_in">this</span>.username = username;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getPassword</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> password;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setPassword</span><span class="hljs-params">(String password)</span> &#123;<br>        <span class="hljs-built_in">this</span>.password = password;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getAge</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> age;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAge</span><span class="hljs-params">(Integer age)</span> &#123;<br>        <span class="hljs-built_in">this</span>.age = age;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getGender</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> gender;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setGender</span><span class="hljs-params">(String gender)</span> &#123;<br>        <span class="hljs-built_in">this</span>.gender = gender;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getEmail</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> email;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setEmail</span><span class="hljs-params">(String email)</span> &#123;<br>        <span class="hljs-built_in">this</span>.email = email;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;User&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;id=&quot;</span> + id +<br>                <span class="hljs-string">&quot;, username=&#x27;&quot;</span> + username + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, password=&#x27;&quot;</span> + password + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, age=&quot;</span> + age +<br>                <span class="hljs-string">&quot;, gender=&#x27;&quot;</span> + gender + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, email=&#x27;&quot;</span> + email + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-4、创建MyBatis-的核心配置文件"><a href="#1-4、创建MyBatis-的核心配置文件" class="headerlink" title="1.4、创建MyBatis 的核心配置文件"></a>1.4、创建MyBatis 的核心配置文件</h3><p>核心配置文件主要用于配置数据库的环境以及MyBatis的全局配置信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">configuration</span> <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span> <span class="hljs-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置连接数据库的环境--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">environments</span> <span class="hljs-attr">default</span>=<span class="hljs-string">&quot;development&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">environment</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;development&quot;</span>&gt;</span><br>            <span class="hljs-comment">&lt;!--事务管理器--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">transactionManager</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;JDBC&quot;</span>/&gt;</span><br>            <span class="hljs-comment">&lt;!--数据源--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">dataSource</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;POOLED&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driver&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;jdbc:mysql://主机:端口/数据库?serverTimezone=UTC&quot;</span>/&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;用户名&quot;</span>/&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;密码&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">dataSource</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">environment</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">environments</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--引入MyBatis的映射文件--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mappers</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">resource</span>=<span class="hljs-string">&quot;mappers/UserMapper.xml&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mappers</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="1-5、创建Mapper接口"><a href="#1-5、创建Mapper接口" class="headerlink" title="1.5、创建Mapper接口"></a>1.5、创建Mapper接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.mybatis.mapper;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">UserMapper</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-title function_">addUser</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-6、创建MyBatis的映射文件"><a href="#1-6、创建MyBatis的映射文件" class="headerlink" title="1.6、创建MyBatis的映射文件"></a>1.6、创建MyBatis的映射文件</h3><p>MyBatis映射文件存放的位置是src&#x2F;main&#x2F;resources&#x2F;mappers目录下</p><p>MyBatis中可以面向接口操作数据，要保证两个一致：</p><ul><li>mapper接口的<font color=#3271ae><strong>全类名</strong></font>和映射文件的<font color=#3271ae><strong>命名空间（namespace）</strong></font>保持一致</li><li>mapper接口中方法的<font color=#3271ae><strong>方法名</strong></font>和映射文件中编写SQL的标签的<font color=#3271ae><strong>id属性</strong></font>保持一致</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">mapper</span> <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="hljs-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!--注意这个命名空间是 对应的Mapper接口的全类名--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;com.example.mybatis.mapper.UserMapper&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- id 要和 方法名 保持一致 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">insert</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;addUser&quot;</span>&gt;</span><br>        insert into t_user values (null,&#x27;admin&#x27;,&#x27;123456&#x27;,23,&#x27;男&#x27;,&#x27;123456@qq.com&#x27;);<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">insert</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="1-7、测试"><a href="#1-7、测试" class="headerlink" title="1.7、测试"></a>1.7、测试</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.mybatis.test;<br><br><span class="hljs-keyword">import</span> com.example.mybatis.mapper.UserMapper;<br><span class="hljs-keyword">import</span> org.apache.ibatis.io.Resources;<br><span class="hljs-keyword">import</span> org.apache.ibatis.session.SqlSession;<br><span class="hljs-keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;<br><span class="hljs-keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;<br><span class="hljs-keyword">import</span> org.junit.Test;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.InputStream;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyBatisTest</span> &#123;<br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testInsert</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-comment">//1、获取核心配置文件的输入流(读取)</span><br>        <span class="hljs-type">InputStream</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> Resources.getResourceAsStream(<span class="hljs-string">&quot;mybatis-config.xml&quot;</span>);<br>        <span class="hljs-comment">//2、获取SqlSessionFactoryBuilder对象</span><br>        <span class="hljs-type">SqlSessionFactoryBuilder</span> <span class="hljs-variable">sqlSessionFactoryBuilder</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlSessionFactoryBuilder</span>();<br>        <span class="hljs-type">SqlSessionFactory</span> <span class="hljs-variable">sqlSessionFactory</span> <span class="hljs-operator">=</span> sqlSessionFactoryBuilder.build(is);<br>        <span class="hljs-type">SqlSession</span> <span class="hljs-variable">sqlSession</span> <span class="hljs-operator">=</span> sqlSessionFactory.openSession();<br>        <span class="hljs-comment">//3、获取UserMapper的代理实现类对象</span><br>        <span class="hljs-type">UserMapper</span> <span class="hljs-variable">userMapper</span> <span class="hljs-operator">=</span> sqlSession.getMapper(UserMapper.class);<br>        <span class="hljs-comment">//4、执行方法</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">res</span> <span class="hljs-operator">=</span> userMapper.addUser();<br>        System.out.println(<span class="hljs-string">&quot;res = &quot;</span> + res);<br>        <span class="hljs-comment">//5、利用这种方式创建的sqlSession不会自动提交事务。手动提交事务</span><br>        sqlSession.commit();<br>        <span class="hljs-comment">//6、关闭sqlSession对象</span><br>        sqlSession.close();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="1-8、加入log4j日志功能（可选）"><a href="#1-8、加入log4j日志功能（可选）" class="headerlink" title="1.8、加入log4j日志功能（可选）"></a>1.8、加入log4j日志功能（可选）</h3><h4 id="1、引入依赖-1"><a href="#1、引入依赖-1" class="headerlink" title="1、引入依赖"></a>1、引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--log4j--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>log4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>log4j<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.12<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2、创建log4j-xml配置文件"><a href="#2、创建log4j-xml配置文件" class="headerlink" title="2、创建log4j.xml配置文件"></a>2、创建<code>log4j.xml</code>配置文件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">log4j</span>:configuration <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;log4j.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">log4j:configuration</span> <span class="hljs-attr">xmlns:log4j</span>=<span class="hljs-string">&quot;http://jakarta.apache.org/log4j/&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appender</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;STDOUT&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.apache.log4j.ConsoleAppender&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Encoding&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">layout</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.apache.log4j.PatternLayout&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ConversionPattern&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;%-5p %d&#123;MM-dd HH:mm:ss,SSS&#125;%m (%F:%L) \n&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">layout</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">appender</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;java.sql&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">level</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;debug&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">logger</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.apache.ibatis&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">level</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;info&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">logger</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">level</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;debug&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;STDOUT&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">log4j:configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>log4j的日志的级别</strong></p><p>FATAL(致命)&gt;ERROR(错误)&gt;WARN(警告)&gt;INFO(信息)&gt;DEBUG(调试)</p><p>从左到右打印的内容越来越详细</p><h2 id="2、MyBatis-的核心配置文件：mybatis-config-xml"><a href="#2、MyBatis-的核心配置文件：mybatis-config-xml" class="headerlink" title="2、MyBatis 的核心配置文件：mybatis-config.xml"></a>2、MyBatis 的核心配置文件：mybatis-config.xml</h2><h3 id="2-1、标签"><a href="#2-1、标签" class="headerlink" title="2.1、&lt;environments&gt;标签"></a>2.1、<code>&lt;environments&gt;</code>标签</h3><ul><li><code>&lt;environments&gt;</code>标签：配置多个连接数据库的环境<ul><li>default属性：设置默认使用的环境的id【<code>&lt;environment&gt;</code>标签的id】</li></ul></li><li><code>&lt;environment&gt;</code>标签：设置一个具体的连接数据库的环境<ul><li>id属性：设置环境的唯一标识，不能重复</li></ul></li><li><code>&lt;transactionManager&gt;</code>标签：设置事务管理器<ul><li>type属性：设置事务管理的方式，取值有两种：JDBC &#x2F; MANAGED<ul><li>JDBC：表示使用JDBC中原生的事务管理方式</li><li>MANAGED：被管理，例如Spring</li></ul></li></ul></li><li><code>&lt;dataSource&gt;</code>标签：设置数据源<ul><li>type属性：设置数据源的类型，取值有三种：POOLED &#x2F; UNPOOLED &#x2F;JNDI<ul><li>POOLED：表示使用数据库连接池</li><li>UNPOOLED：表示不使用数据库连接池</li><li>JNDI：表示使用上下文中的数据源</li></ul></li></ul></li></ul><h3 id="2-2、标签"><a href="#2-2、标签" class="headerlink" title="2.2、&lt;properties&gt;标签"></a>2.2、<code>&lt;properties&gt;</code>标签</h3><ul><li><code>&lt;properties&gt;</code>标签：用于引入外部的properties文件<ul><li>resource属性：properties文件的全路径</li></ul></li></ul><p>使用<code>&lt;properties&gt;</code>标签引入了外部的properties文件之后，就可以使用<code>$&#123;key&#125;</code>的方式访问value</p><h3 id="2-3、标签"><a href="#2-3、标签" class="headerlink" title="2.3、&lt;typeAliases&gt;标签"></a>2.3、<code>&lt;typeAliases&gt;</code>标签</h3><p>Mybatis核心配置文件中的标签必须按照指定的顺序配置：<code>properties?,settings?,typeAliases?,typeHandlers?,objectFactory?,objectWrapperFactory?,reflectorFactory?,plugins?,environments?,databaseIdProvider?,mappers?</code></p><ul><li><code>&lt;typeAliases&gt;</code>标签：设置类型别名。可以为某个具体的类型设置一个别名</li><li><code>&lt;typeAliase&gt;</code>标签：设置具体的别名<ul><li>type属性：类型</li><li>alias：别名</li></ul></li><li><code>&lt;package&gt;</code>标签：通过包设置类型别名，指定包下所有的类型，将全部拥有默认的别名，也就是它的类名，并且不区分大小写<ul><li>name属性：包路径</li></ul></li></ul><p><strong>举例：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--类型别名--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">typeAliases</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--为User类设置别名user，之后在映射文件中设置resultType的时候，就可以使用user来代替User类的全类名了--&gt;</span><br>    <span class="hljs-comment">&lt;!-- &lt;typeAlias type=&quot;com.example.mybatis.pojo.User&quot; alias=&quot;user&quot;/&gt; --&gt;</span><br>    <span class="hljs-comment">&lt;!--在设置别名的时候，设置了type属性之后，如果不设置alias属性，会有一个默认的别名，就是它的类型名，并且不区分大小写--&gt;</span><br>    <span class="hljs-comment">&lt;!-- &lt;typeAlias type=&quot;com.example.mybatis.pojo.User&quot;/&gt; --&gt;</span><br>    <span class="hljs-comment">&lt;!--通过包设置类型别名，指定包下所有的类型，将全部拥有默认的别名，也就是它的类名，并且不区分大小写--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">package</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;com.example.mybatis.pojo&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">typeAliases</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-4、标签"><a href="#2-4、标签" class="headerlink" title="2.4、&lt;mappers&gt;标签"></a>2.4、<code>&lt;mappers&gt;</code>标签</h3><ul><li><code>&lt;mappers&gt;</code>标签：引入MyBatis 的映射文件</li><li><code>&lt;mapper&gt;</code>标签：引入具体的映射文件<ul><li>resource属性：映射文件的路径</li></ul></li><li><code>&lt;package&gt;</code>标签：通过包来引入映射文件。要求当前映射文件所在的包要和mapper接口所在的包一样；映射文件的名字要和Mapper接口的名字一样<ul><li>name：包路径</li></ul></li></ul><h2 id="3、使用idea定义模板文件"><a href="#3、使用idea定义模板文件" class="headerlink" title="3、使用idea定义模板文件"></a>3、使用idea定义模板文件</h2><p><img src="/img/ssm_img/%E4%BD%BF%E7%94%A8idea%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%9D%BF.jpg" alt="使用idea自定义模板"></p><h2 id="4、MyBatis获取参数值"><a href="#4、MyBatis获取参数值" class="headerlink" title="4、MyBatis获取参数值"></a>4、MyBatis获取参数值</h2><p>MyBatis获取参数值的两种方式：<code>$&#123;&#125;</code>和<code>#&#123;&#125;</code></p><p><code>$&#123;&#125;</code>的本质就是字符串拼接，<code>#&#123;&#125;</code>的本质就是占位符赋值</p><ul><li><code>$&#123;&#125;</code>使用字符串拼接的方式拼接sql，如果是字符串类型或日期类型的字段进行赋值时，需要手动加单引号</li><li><code>#&#123;&#125;</code>使用占位符赋值的方式拼接sql，可以自动添加单引号；可以避免sql注入<strong>【常用】</strong></li></ul><h3 id="4-1、参数是单个基本数据类型或者String类型"><a href="#4-1、参数是单个基本数据类型或者String类型" class="headerlink" title="4.1、参数是单个基本数据类型或者String类型"></a>4.1、参数是单个基本数据类型或者String类型</h3><p>在映射文件中使用<code>#&#123;任意字符&#125;</code>代表这个参数</p><h3 id="4-2、参数是多个基本数据类型或者String类型"><a href="#4-2、参数是多个基本数据类型或者String类型" class="headerlink" title="4.2、参数是多个基本数据类型或者String类型"></a>4.2、参数是多个基本数据类型或者String类型</h3><p>可以在映射文件中使用<code>#&#123;arg0&#125;</code>或者<code>#&#123;param1&#125;</code>代表第一个参数，使用<code>#&#123;arg1&#125;</code>或者<code>#&#123;param2&#125;</code>代表第二个参数…</p><h3 id="4-3、参数是Map集合"><a href="#4-3、参数是Map集合" class="headerlink" title="4.3、参数是Map集合"></a>4.3、参数是Map集合</h3><p>在映射文件中使用<code>#&#123;自定义map的key&#125;</code>代表参数</p><h3 id="4-4、参数是实体类类型"><a href="#4-4、参数是实体类类型" class="headerlink" title="4.4、参数是实体类类型"></a>4.4、<font color=#3271ae>参数是实体类类型</font></h3><p>在映射文件中使用<code>#&#123;属性名&#125;</code>就可以获取对应的属性值</p><h3 id="4-5、参数不是实体类型类型，使用注解-Param-自定义参数名"><a href="#4-5、参数不是实体类型类型，使用注解-Param-自定义参数名" class="headerlink" title="4.5、参数不是实体类型类型，使用注解@Param(&quot;自定义参数名&quot;) "></a>4.5、<font color=#3271ae>参数不是实体类型类型，使用注解<code>@Param(&quot;自定义参数名&quot;)</code> </font></h3><p>也可以在传参的时候使用注解<font color=#3271ae><strong><code>@Param(&quot;自定义参数名&quot;)</code></strong></font>，这样在映射文件中就可以直接使用<font color=#3271ae><strong><code>#&#123;注解中自定义的参数名&#125;</code></strong></font>来代表这个参数了</p><h2 id="5、MyBatis的各种查询的返回值问题"><a href="#5、MyBatis的各种查询的返回值问题" class="headerlink" title="5、MyBatis的各种查询的返回值问题"></a>5、MyBatis的各种查询的返回值问题</h2><ul><li><p>MyBatis为Java中常用的类型设置了类型别名。resultType中可以直接写数据类型的名字，或者全类名都行</p></li><li><p>并不是所有的查询结果都有对应的实体类。当没有对应的实体类的时候，可以设置返回值类型为Map。</p></li><li><p>当返回的结果中有多条Map集合时，有两种解决方案：</p><ul><li>可以使用List集合将Map集合包裹起来；【用的多】</li><li>也可以使用注解<code>@MapKey(&quot;自定义大Map的键&quot;)</code>把当前查询的数据所转换的Map集合放到一个大Map集合中。</li></ul></li></ul><h2 id="6、MyBatis执行特殊SQL"><a href="#6、MyBatis执行特殊SQL" class="headerlink" title="6、MyBatis执行特殊SQL"></a>6、MyBatis执行特殊SQL</h2><h3 id="1、模糊查询"><a href="#1、模糊查询" class="headerlink" title="1、模糊查询"></a>1、模糊查询</h3><p>模糊查询时，如果参数需要写在<code> &#39;&#39;</code> 中的时候，不能使用<code>#&#123;&#125;</code>占位符赋值，因为<code>#&#123;&#125;</code>会自动给参数加上两个单引号。可以有三种解决方案</p><h4 id="方案1：使用-字符串拼接"><a href="#方案1：使用-字符串拼接" class="headerlink" title="方案1：使用${}字符串拼接"></a>方案1：使用<code>$&#123;&#125;</code>字符串拼接</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getUserByLike&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;user&quot;</span>&gt;</span><br>    select * from t_user where username like &#x27;%$&#123;mohu&#125;%&#x27;;<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="方案2：使用MySQL中的concat-字符串拼接函数"><a href="#方案2：使用MySQL中的concat-字符串拼接函数" class="headerlink" title="方案2：使用MySQL中的concat()字符串拼接函数"></a>方案2：使用MySQL中的<code>concat()</code>字符串拼接函数</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getUserByLike&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;user&quot;</span>&gt;</span><br>   select * from t_user where username like concat(&#x27;%&#x27;,#&#123;mohu&#125;,&#x27;%&#x27;);<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="方案3：使用双引号把-包裹起来"><a href="#方案3：使用双引号把-包裹起来" class="headerlink" title="方案3：使用双引号把%包裹起来"></a>方案3：使用双引号把<code>%</code>包裹起来</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getUserByLike&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;user&quot;</span>&gt;</span><br>   select * from t_user where username like &quot;%&quot;#&#123;mohu&#125;&quot;%&quot;<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2、批量删除"><a href="#2、批量删除" class="headerlink" title="2、批量删除"></a>2、批量删除</h3><p>这里也不能使用<code>#&#123;&#125;</code>，因为<code>#&#123;&#125;</code>会自动给参数加上两个单引号。只能使用<code>$&#123;&#125;</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">delete</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;deleteMoreUser&quot;</span>&gt;</span><br>    delete from t_user where id in ($&#123;ids&#125;);<br><span class="hljs-tag">&lt;/<span class="hljs-name">delete</span>&gt;</span><br></code></pre></td></tr></table></figure><p>但是在实际开发中一般使用动态SQL来完成这种操作</p><h3 id="3、动态设置表名"><a href="#3、动态设置表名" class="headerlink" title="3、动态设置表名"></a>3、动态设置表名</h3><p>在SQL语句中，表名不能添加单引号，所以使用<code>$&#123;&#125;</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getUserList&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;user&quot;</span>&gt;</span><br>    select * from $&#123;tableName&#125;;<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="4、添加功能获取自增的主键"><a href="#4、添加功能获取自增的主键" class="headerlink" title="4、添加功能获取自增的主键"></a>4、添加功能获取自增的主键</h3><p>在映射文件中的<code>&lt;insert&gt;</code>标签中设置<code>useGenerateKeys=“true”</code>代表使用自增主键；并通过设置<code>keyProperty</code>把获取到的自增主键存储到传递过来的实体类对象中的哪个属性中</p><p>注意：insert方法的返回值是固定的，它只能表示是否添加成功。如果返回值是1代表成功，0代表失败</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--useGenerateKeys：是否使用自增的主键    keyProperty：把获取的主键存储到传递过来的实体类对象的哪一个属性中--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">insert</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;addUser&quot;</span> <span class="hljs-attr">useGeneratedKeys</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">keyProperty</span>=<span class="hljs-string">&quot;id&quot;</span>&gt;</span><br>    insert into t_user values(null,#&#123;username&#125;,#&#123;password&#125;,#&#123;age&#125;,#&#123;gender&#125;,#&#123;email&#125;);<br><span class="hljs-tag">&lt;/<span class="hljs-name">insert</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="7、MyBatisc处理字段名与属性名不一致的情况"><a href="#7、MyBatisc处理字段名与属性名不一致的情况" class="headerlink" title="7、MyBatisc处理字段名与属性名不一致的情况"></a>7、MyBatisc处理字段名与属性名不一致的情况</h2><p>数据库表结构：</p><p><img src="/img/ssm_img/mybatis-resultMap-emp.jpg" alt="mybatis-resultMap-emp"></p><p><img src="/img/ssm_img/mybatis-resultMap-dept.jpg" alt="mybatis-resultMap-dept"></p><p>实体类代码：</p><p>数据库Emp表中有一个dept_id字段，在实体类中定义的是Dept类型的属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.mybatis.pojo;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Emp</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer empId;<br>    <span class="hljs-keyword">private</span> String empName;<br>    <span class="hljs-keyword">private</span> Integer empAge;<br>    <span class="hljs-keyword">private</span> String empGender;<br>    <span class="hljs-comment">//Dept类型</span><br>    <span class="hljs-keyword">private</span> Dept dept;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Emp</span><span class="hljs-params">()</span> &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Emp</span><span class="hljs-params">(Integer empId, String empName, Integer empAge, String empGender)</span> &#123;<br>        <span class="hljs-built_in">this</span>.empId = empId;<br>        <span class="hljs-built_in">this</span>.empName = empName;<br>        <span class="hljs-built_in">this</span>.empAge = empAge;<br>        <span class="hljs-built_in">this</span>.empGender = empGender;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getEmpId</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> empId;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setEmpId</span><span class="hljs-params">(Integer empId)</span> &#123;<br>        <span class="hljs-built_in">this</span>.empId = empId;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getEmpName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> empName;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setEmpName</span><span class="hljs-params">(String empName)</span> &#123;<br>        <span class="hljs-built_in">this</span>.empName = empName;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getEmpAge</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> empAge;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setEmpAge</span><span class="hljs-params">(Integer empAge)</span> &#123;<br>        <span class="hljs-built_in">this</span>.empAge = empAge;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getEmpGender</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> empGender;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setEmpGender</span><span class="hljs-params">(String empGender)</span> &#123;<br>        <span class="hljs-built_in">this</span>.empGender = empGender;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Dept <span class="hljs-title function_">getDept</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> dept;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDept</span><span class="hljs-params">(Dept dept)</span> &#123;<br>        <span class="hljs-built_in">this</span>.dept = dept;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Emp&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;empId=&quot;</span> + empId +<br>                <span class="hljs-string">&quot;, empName=&#x27;&quot;</span> + empName + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, empAge=&quot;</span> + empAge +<br>                <span class="hljs-string">&quot;, empGender=&#x27;&quot;</span> + empGender + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, dept=&quot;</span> + dept +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.mybatis.pojo;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Dept</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer deptId;<br>    <span class="hljs-keyword">private</span> String deptName;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Dept</span><span class="hljs-params">()</span> &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Dept</span><span class="hljs-params">(Integer deptId, String deptName)</span> &#123;<br>        <span class="hljs-built_in">this</span>.deptId = deptId;<br>        <span class="hljs-built_in">this</span>.deptName = deptName;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getDeptId</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> deptId;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDeptId</span><span class="hljs-params">(Integer deptId)</span> &#123;<br>        <span class="hljs-built_in">this</span>.deptId = deptId;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getDeptName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> deptName;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDeptName</span><span class="hljs-params">(String deptName)</span> &#123;<br>        <span class="hljs-built_in">this</span>.deptName = deptName;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Dept&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;deptId=&quot;</span> + deptId +<br>                <span class="hljs-string">&quot;, deptName=&#x27;&quot;</span> + deptName + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="7-1、数据库表与实体类映射关系"><a href="#7-1、数据库表与实体类映射关系" class="headerlink" title="7.1、数据库表与实体类映射关系"></a>7.1、数据库表与实体类映射关系</h3><p>当数据库表的字段名与实体类的属性名不一致时，如何处理映射关系？</p><h4 id="方式1、为查询的字段设置别名，设置别名为实体类的属性名【不常用】"><a href="#方式1、为查询的字段设置别名，设置别名为实体类的属性名【不常用】" class="headerlink" title="方式1、为查询的字段设置别名，设置别名为实体类的属性名【不常用】"></a>方式1、为查询的字段设置别名，设置别名为实体类的属性名【不常用】</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpByEmpId&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;emp&quot;</span>&gt;</span><br>    select emp_id as empId,emp_name as empName,emp_age as empAge,emp_gender as empGender<br>    from t_emp<br>    where emp_id = #&#123;empId&#125;;<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="方式2、当字段名符合MySQL的要求（使用下划线-）-并且实体类的属性名符合Java的要求（使用驼峰），此时可以在MyBatis的核心配置文件中设置一个全局配置，可以自动将下划线映射为驼峰"><a href="#方式2、当字段名符合MySQL的要求（使用下划线-）-并且实体类的属性名符合Java的要求（使用驼峰），此时可以在MyBatis的核心配置文件中设置一个全局配置，可以自动将下划线映射为驼峰" class="headerlink" title="方式2、当字段名符合MySQL的要求（使用下划线_）,并且实体类的属性名符合Java的要求（使用驼峰），此时可以在MyBatis的核心配置文件中设置一个全局配置，可以自动将下划线映射为驼峰"></a>方式2、当字段名符合MySQL的要求（使用下划线<code>_</code>）,并且实体类的属性名符合Java的要求（使用驼峰），此时可以在MyBatis的核心配置文件中设置一个全局配置，可以自动将下划线映射为驼峰</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--设置全局配置，作用于MyBatis的所有增删改查功能--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">settings</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--自动将下划线映射到骆驼--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">setting</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">settings</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="方式3、在映射文件中使用标签实现自定义映射"><a href="#方式3、在映射文件中使用标签实现自定义映射" class="headerlink" title="方式3、在映射文件中使用&lt;resultMap&gt;标签实现自定义映射"></a>方式3、在映射文件中使用<code>&lt;resultMap&gt;</code>标签实现自定义映射</h4><p><code>&lt;resultMap&gt;</code>标签常用的子标签：</p><ul><li><code>&lt;id&gt;</code>标签：用来处理主键和属性名的映射关系 </li><li><code>&lt;result&gt;</code>标签：用来处理普通字段和属性名的映射关系</li><li><code>&lt;association&gt;</code>标签：处理多对一</li><li><code>&lt;collection&gt;</code>标签：处理一对多</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--自定义映射--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;empResultMap&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo.Emp&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- id标签 用来处理主键和属性名的映射关系 --&gt;</span><br>    <span class="hljs-comment">&lt;!-- result标签 用来处理普通字段和属性名的映射关系 --&gt;</span><br>    <span class="hljs-comment">&lt;!-- association标签 处理多对一 --&gt;</span><br>    <span class="hljs-comment">&lt;!-- collection标签 处理一对多 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empId&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empName&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_age&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empAge&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_gender&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empGender&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpByEmpId&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;empResultMap&quot;</span>&gt;</span><br>    select * from t_emp where emp_id = #&#123;empId&#125;;<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="7-2、多对一映射处理（一对一也这么处理）"><a href="#7-2、多对一映射处理（一对一也这么处理）" class="headerlink" title="7.2、多对一映射处理（一对一也这么处理）"></a>7.2、多对一映射处理（一对一也这么处理）</h3><h4 id="方式1、级联方式处理映射关系"><a href="#方式1、级联方式处理映射关系" class="headerlink" title="方式1、级联方式处理映射关系"></a>方式1、级联方式处理映射关系</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;empAndDeptResultMap&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo.Emp&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empId&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empName&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_age&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empAge&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_gender&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empGender&quot;</span>/&gt;</span><br>    <span class="hljs-comment">&lt;!--当前emp中有个属性叫dept，这里就可以通过以下这种方式来映射--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;dept_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;dept.deptId&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;dept_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;dept.deptName&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="方式2、使用标签处理映射关系"><a href="#方式2、使用标签处理映射关系" class="headerlink" title="方式2、使用&lt;association&gt;标签处理映射关系"></a>方式2、使用<code>&lt;association&gt;</code>标签处理映射关系</h4><ul><li><code>&lt;association&gt;</code>标签：专门处理多对一的映射关系（处理实体类类型的属性）<ul><li>property 属性：设置属性名称</li><li>javaType 属性：设置属性的类型</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;empAndDeptResultMap2&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo.Emp&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empId&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empName&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_age&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empAge&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_gender&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empGender&quot;</span>/&gt;</span><br>    <span class="hljs-comment">&lt;!--property：设置属性    javaType：设置属性的类型 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">association</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;dept&quot;</span> <span class="hljs-attr">javaType</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo.Dept&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;dept_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;deptId&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;dept_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;deptName&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">association</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="方式3、分步查询"><a href="#方式3、分步查询" class="headerlink" title="方式3、分步查询"></a>方式3、分步查询</h4><p><strong><font color=#ee5253>踩坑：一定要事先在MyBatis的核心配置文件中全局配置好下划线映射驼峰</font></strong></p><h5 id="1、实体类"><a href="#1、实体类" class="headerlink" title="1、实体类"></a>1、实体类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.mybatis.pojo;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Emp</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer empId;<br>    <span class="hljs-keyword">private</span> String empName;<br>    <span class="hljs-keyword">private</span> Integer empAge;<br>    <span class="hljs-keyword">private</span> String empGender;<br>    <span class="hljs-keyword">private</span> Dept dept;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Emp</span><span class="hljs-params">()</span> &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Emp</span><span class="hljs-params">(Integer empId, String empName, Integer empAge, String empGender)</span> &#123;<br>        <span class="hljs-built_in">this</span>.empId = empId;<br>        <span class="hljs-built_in">this</span>.empName = empName;<br>        <span class="hljs-built_in">this</span>.empAge = empAge;<br>        <span class="hljs-built_in">this</span>.empGender = empGender;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getEmpId</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> empId;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setEmpId</span><span class="hljs-params">(Integer empId)</span> &#123;<br>        <span class="hljs-built_in">this</span>.empId = empId;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getEmpName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> empName;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setEmpName</span><span class="hljs-params">(String empName)</span> &#123;<br>        <span class="hljs-built_in">this</span>.empName = empName;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getEmpAge</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> empAge;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setEmpAge</span><span class="hljs-params">(Integer empAge)</span> &#123;<br>        <span class="hljs-built_in">this</span>.empAge = empAge;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getEmpGender</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> empGender;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setEmpGender</span><span class="hljs-params">(String empGender)</span> &#123;<br>        <span class="hljs-built_in">this</span>.empGender = empGender;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Dept <span class="hljs-title function_">getDept</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> dept;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDept</span><span class="hljs-params">(Dept dept)</span> &#123;<br>        <span class="hljs-built_in">this</span>.dept = dept;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Emp&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;empId=&quot;</span> + empId +<br>                <span class="hljs-string">&quot;, empName=&#x27;&quot;</span> + empName + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, empAge=&quot;</span> + empAge +<br>                <span class="hljs-string">&quot;, empGender=&#x27;&quot;</span> + empGender + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, dept=&quot;</span> + dept +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.mybatis.pojo;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Dept</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer deptId;<br>    <span class="hljs-keyword">private</span> String deptName;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Dept</span><span class="hljs-params">()</span> &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Dept</span><span class="hljs-params">(Integer deptId, String deptName)</span> &#123;<br>        <span class="hljs-built_in">this</span>.deptId = deptId;<br>        <span class="hljs-built_in">this</span>.deptName = deptName;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getDeptId</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> deptId;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDeptId</span><span class="hljs-params">(Integer deptId)</span> &#123;<br>        <span class="hljs-built_in">this</span>.deptId = deptId;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getDeptName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> deptName;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDeptName</span><span class="hljs-params">(String deptName)</span> &#123;<br>        <span class="hljs-built_in">this</span>.deptName = deptName;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Dept&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;deptId=&quot;</span> + deptId +<br>                <span class="hljs-string">&quot;, deptName=&#x27;&quot;</span> + deptName + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="2、首先定义好Mapper"><a href="#2、首先定义好Mapper" class="headerlink" title="2、首先定义好Mapper"></a>2、首先定义好Mapper</h5><p>EmpMapper:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*分步查询第一步：先查询emp表*/</span><br>Emp <span class="hljs-title function_">getEmpAndDeptByStepOne</span><span class="hljs-params">(<span class="hljs-meta">@Param(&quot;empId&quot;)</span>Integer empId)</span>;<br></code></pre></td></tr></table></figure><p>DeptMapper:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*分步查询第二步*/</span><br>Dept <span class="hljs-title function_">getEmpAndDeptByStepTwo</span><span class="hljs-params">(<span class="hljs-meta">@Param(&quot;deptId&quot;)</span> Integer deptId)</span>;<br></code></pre></td></tr></table></figure><h5 id="3、编写EmpMapper-xml"><a href="#3、编写EmpMapper-xml" class="headerlink" title="3、编写EmpMapper.xml"></a>3、编写EmpMapper.xml</h5><p><code>&lt;association&gt;</code> 标签中三个属性：</p><ul><li>property属性：emp类中定义的dept属性</li><li>select属性：分步查询下一步的sql语句的唯一标识（接口的全路径）</li><li>column属性：分步查询下一步的sql语句中需要传递的参数（也就是在这一步查询出来的，要作为下一步的参数）</li><li>fetchType属性：lazy(延迟加载，默认值)、eager（立即加载）</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpAndDeptByStepResultMap&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo.Emp&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empId&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empName&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_age&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empAge&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_gender&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empGender&quot;</span>/&gt;</span><br>    <span class="hljs-comment">&lt;!--select：中要写的就是下一步的sql语句的唯一标识    column：下一步sql语句需要传递的参数--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">association</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;dept&quot;</span> <span class="hljs-attr">select</span>=<span class="hljs-string">&quot;org.example.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;dept_id&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpAndDeptByStepOne&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;getEmpAndDeptByStepResultMap&quot;</span>&gt;</span><br>    select * from t_emp where emp_id = #&#123;empId&#125;<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="4、编写DeptMapper-xml"><a href="#4、编写DeptMapper-xml" class="headerlink" title="4、编写DeptMapper.xml"></a>4、编写DeptMapper.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpAndDeptByStepTwo&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo.Dept&quot;</span>&gt;</span><br>    select *<br>    from t_dept<br>    where dept_id = #&#123;deptId&#125;;<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>首先定义一个<code>&lt;resultMap&gt;</code>。然后在<code>&lt;resultMap&gt;</code>标签中的子标签<code>&lt;association&gt;</code>中的<code>property</code>属性中定义好实体类中的那个对象属性，在<code>select</code>属性定义好下一步的sql路径，在<code>column</code>属性定义好下一步需要的参数，然后MyBatis就会根据<code>select</code>属性自动查找下一步的sql，最终完成分步查询</strong></p><h4 id="方式3中分布查询的优点：可以实现延迟加载"><a href="#方式3中分布查询的优点：可以实现延迟加载" class="headerlink" title="方式3中分布查询的优点：可以实现延迟加载"></a>方式3中分布查询的优点：可以实现延迟加载</h4><p>分布查询的优点：可以实现延迟加载</p><p>但是必须在MyBatis核心配置文件中设置全局配置信息<code>&lt;settings&gt;</code>：</p><ul><li>lazyLoadingEnabled：延迟加载的全局开关。当开启时，所有关联对象都会延迟加载</li><li>aggressiveLazyLoading：默认每个属性会按需加载（false）。当开启（true）时，任何方法的调用都会加载该对象的所有属性。</li></ul><p>如果我开启了延迟加载，但是我想让某一个方法实现立即加载，其他的方法不变（仍然是延迟加载），可以在<code>&lt;association&gt;</code>标签中设置<code>fetchType</code>属性，这个属性共有两个取值：eager（立即加载）、lazy（延迟加载，默认值），</p><h3 id="7-3、一对多映射处理"><a href="#7-3、一对多映射处理" class="headerlink" title="7.3、一对多映射处理"></a>7.3、一对多映射处理</h3><p>首先需要先在一这个实体类中设置多的那个属性为List集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.mybatis.pojo;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Dept</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer deptId;<br>    <span class="hljs-keyword">private</span> String deptName;<br>    <span class="hljs-comment">// 一对多</span><br>    <span class="hljs-keyword">private</span> List&lt;Emp&gt; emps;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Dept</span><span class="hljs-params">()</span> &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Dept</span><span class="hljs-params">(Integer deptId, String deptName)</span> &#123;<br>        <span class="hljs-built_in">this</span>.deptId = deptId;<br>        <span class="hljs-built_in">this</span>.deptName = deptName;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">getDeptId</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> deptId;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDeptId</span><span class="hljs-params">(Integer deptId)</span> &#123;<br>        <span class="hljs-built_in">this</span>.deptId = deptId;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getDeptName</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> deptName;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDeptName</span><span class="hljs-params">(String deptName)</span> &#123;<br>        <span class="hljs-built_in">this</span>.deptName = deptName;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> List&lt;Emp&gt; <span class="hljs-title function_">getEmps</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> emps;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setEmps</span><span class="hljs-params">(List&lt;Emp&gt; emps)</span> &#123;<br>        <span class="hljs-built_in">this</span>.emps = emps;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Dept&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;deptId=&quot;</span> + deptId +<br>                <span class="hljs-string">&quot;, deptName=&#x27;&quot;</span> + deptName + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, emps=&quot;</span> + emps +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="方式1、使用标签处理"><a href="#方式1、使用标签处理" class="headerlink" title="方式1、使用&lt;collection&gt;标签处理"></a>方式1、使用<code>&lt;collection&gt;</code>标签处理</h4><ul><li><code>&lt;collection&gt;</code>标签：处理一对多映射<ul><li>property属性：实体类中的集合属性名</li><li>ofType属性：设置集合中存储的属性类型</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--处理一对多--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;deptAndEmpResultMap&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo.Dept&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;dept_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;deptId&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;dept_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;deptName&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">collection</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;emps&quot;</span> <span class="hljs-attr">ofType</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo.Emp&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empId&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empName&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_age&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empAge&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;emp_gender&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;empGender&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">collection</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getDeptAndEmpByDeptId&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;deptAndEmpResultMap&quot;</span>&gt;</span><br>    select *<br>    from t_dept d<br>             left join t_emp e on d.dept_id = e.dept_id<br>    where d.dept_id = #&#123;deptId&#125;;<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="方式2、分步查询"><a href="#方式2、分步查询" class="headerlink" title="方式2、分步查询"></a>方式2、分步查询</h4><p>类似于多对一映射关系中的<code>&lt;association&gt;</code>标签，这里使用的是<code>&lt;collection&gt;</code>标签，也是使用<code>select</code>属性和<code>column</code>属性</p><h5 id="1、定义好Mapper"><a href="#1、定义好Mapper" class="headerlink" title="1、定义好Mapper"></a>1、定义好Mapper</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// DeptMapper</span><br>    <span class="hljs-comment">/*一对多分步查询*/</span><br>    Dept <span class="hljs-title function_">getDeptAndEmpByStepOne</span><span class="hljs-params">(<span class="hljs-meta">@Param(&quot;deptId&quot;)</span>Integer deptId)</span>;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// EmpMapper</span><br>    <span class="hljs-comment">/*分步查询一对多第二步*/</span><br>    List&lt;Emp&gt; <span class="hljs-title function_">getDeptAndEmpByStepTwo</span><span class="hljs-params">(<span class="hljs-meta">@Param(&quot;deptId&quot;)</span>Integer deptId)</span>;<br></code></pre></td></tr></table></figure><h5 id="2、编写DeptMapper-xml"><a href="#2、编写DeptMapper-xml" class="headerlink" title="2、编写DeptMapper.xml"></a>2、编写DeptMapper.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--分步查询 一对多--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;deptAndEmpByStepOneResultMap&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo.Dept&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;dept_id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;deptId&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;dept_name&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;deptName&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">collection</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;emps&quot;</span> <span class="hljs-attr">select</span>=<span class="hljs-string">&quot;org.example.mybatis.mapper.EmpMapper.getDeptAndEmpByStepTwo&quot;</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;dept_id&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getDeptAndEmpByStepOne&quot;</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">&quot;deptAndEmpByStepOneResultMap&quot;</span>&gt;</span><br>    select * from t_dept where dept_id = #&#123;deptId&#125;;<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="3、编写EmpMapper-xml-1"><a href="#3、编写EmpMapper-xml-1" class="headerlink" title="3、编写EmpMapper.xml"></a>3、编写EmpMapper.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getDeptAndEmpByStepTwo&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo.Emp&quot;</span>&gt;</span><br>    select * from t_emp where dept_id = #&#123;deptId&#125;;<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="8、动态SQL"><a href="#8、动态SQL" class="headerlink" title="8、动态SQL"></a>8、动态SQL</h2><h3 id="1、if"><a href="#1、if" class="headerlink" title="1、if"></a>1、if</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs xml">   <span class="hljs-comment">&lt;!--if标签--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpByCondition&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo.Emp&quot;</span>&gt;</span><br>       select * from t_emp where 1=1<br>       <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;empName!=null and empName!=&#x27;&#x27;&quot;</span>&gt;</span><br>           and emp_name=#&#123;empName&#125;<br>       <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;empAge!=null and empAge!=&#x27;&#x27;&quot;</span>&gt;</span><br>           and emp_age=#&#123;empAge&#125;<br>       <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;empGender!=null and empGender!=&#x27;&#x27;&quot;</span>&gt;</span><br>           and emp_gender=#&#123;empGender&#125;<br>       <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2、where"><a href="#2、where" class="headerlink" title="2、where"></a>2、where</h3><p><code>&lt;where&gt;</code>标签一般和<code>&lt;if&gt;</code>标签一块使用</p><ul><li>如果<code>&lt;where&gt;</code>标签中有条件成立，会自动生成where关键字</li><li>会自动将<code>&lt;if&gt;</code>标签中的and关键字去掉</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--where标签--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpByCondition&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo.Emp&quot;</span>&gt;</span><br>    select * from t_emp<br>    <span class="hljs-tag">&lt;<span class="hljs-name">where</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;empName!=null and empName!=&#x27;&#x27;&quot;</span>&gt;</span><br>            emp_name=#&#123;empName&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;empAge!=null and empAge!=&#x27;&#x27;&quot;</span>&gt;</span><br>            and emp_age=#&#123;empAge&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;empGender!=null and empGender!=&#x27;&#x27;&quot;</span>&gt;</span><br>            and emp_gender=#&#123;empGender&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">where</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3、trim"><a href="#3、trim" class="headerlink" title="3、trim"></a>3、trim</h3><p><code>&lt;trim&gt;</code>标签有4个属性：</p><ul><li>prefix：在内容前面自动加上某些内容</li><li>prefixOverrides：在内容前面自动去掉某些内容</li><li>suffix：在内容后面自动加上某些内容</li><li>suffixOverrides：在内容后面自动去掉某些内容</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpByCondition&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo.Emp&quot;</span>&gt;</span><br>    select * from t_emp<br>    <span class="hljs-tag">&lt;<span class="hljs-name">trim</span> <span class="hljs-attr">prefix</span>=<span class="hljs-string">&quot;where&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;empName!=null and empName!=&#x27;&#x27;&quot;</span>&gt;</span><br>            emp_name=#&#123;empName&#125; and<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;empAge!=null and empAge!=&#x27;&#x27;&quot;</span>&gt;</span><br>            emp_age=#&#123;empAge&#125; and<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">if</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;empGender!=null and empGender!=&#x27;&#x27;&quot;</span>&gt;</span><br>            emp_gender=#&#123;empGender&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">if</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">trim</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="4、choose、when、otherwise"><a href="#4、choose、when、otherwise" class="headerlink" title="4、choose、when、otherwise"></a>4、choose、when、otherwise</h3><p>when ：相当于<code>else if...</code> 如果第一个条件成立，后面就不运行了（至少有一个）</p><p>otherwise：相当于<code>else...</code>（最多有一个）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--choose--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpByChoose&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo.Emp&quot;</span>&gt;</span><br>    select * from t_emp<br>    <span class="hljs-tag">&lt;<span class="hljs-name">where</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">choose</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;empName!=null and empName!=&#x27;&#x27;&quot;</span>&gt;</span><br>                emp_name=#&#123;empName&#125;<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;empAge!=null and empAge!=&#x27;&#x27;&quot;</span>&gt;</span><br>                emp_age=#&#123;empAge&#125;<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">when</span> <span class="hljs-attr">test</span>=<span class="hljs-string">&quot;empGender!=null and empGender!=&#x27;&#x27;&quot;</span>&gt;</span><br>                emp_gender=#&#123;empGender&#125;<br>            <span class="hljs-tag">&lt;/<span class="hljs-name">when</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">choose</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">where</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="5、foreach"><a href="#5、foreach" class="headerlink" title="5、foreach"></a>5、foreach</h3><ul><li><code>&lt;foreach&gt;</code>标签的属性<ul><li>collection属性：用来设置当前要循环的集合或数组</li><li>item属性：代表集合或数组中的一条数据</li><li>separator属性：分隔符</li><li>open属性：表示循环开始时添加的字符串</li><li>close属性：表示循环结束时添加的字符串</li><li>index属性：当前循环的索引</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml">   <span class="hljs-comment">&lt;!--foreach--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">insert</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;insertMoreEmp&quot;</span>&gt;</span><br>       insert into t_emp values<br>       <span class="hljs-tag">&lt;<span class="hljs-name">foreach</span> <span class="hljs-attr">collection</span>=<span class="hljs-string">&quot;emps&quot;</span> <span class="hljs-attr">item</span>=<span class="hljs-string">&quot;emp&quot;</span> <span class="hljs-attr">separator</span>=<span class="hljs-string">&quot;,&quot;</span>&gt;</span><br>           (null,#&#123;emp.empName&#125;,#&#123;emp.empAge&#125;,#&#123;emp.empGender&#125;,null)<br>       <span class="hljs-tag">&lt;/<span class="hljs-name">foreach</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">insert</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--既可以使用 open=&quot;(&quot; close=&quot;)&quot;    也可以把（）放到foreach标签外面--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">delete</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;deleteMoreEmp&quot;</span>&gt;</span><br>       delete from t_emp where emp_id in<br>       <span class="hljs-tag">&lt;<span class="hljs-name">foreach</span> <span class="hljs-attr">collection</span>=<span class="hljs-string">&quot;empIds&quot;</span> <span class="hljs-attr">item</span>=<span class="hljs-string">&quot;empId&quot;</span> <span class="hljs-attr">separator</span>=<span class="hljs-string">&quot;,&quot;</span> <span class="hljs-attr">open</span>=<span class="hljs-string">&quot;(&quot;</span> <span class="hljs-attr">close</span>=<span class="hljs-string">&quot;)&quot;</span>&gt;</span><br>           #&#123;empId&#125;<br>       <span class="hljs-tag">&lt;/<span class="hljs-name">foreach</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">delete</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="6、SQL片段"><a href="#6、SQL片段" class="headerlink" title="6、SQL片段"></a>6、SQL片段</h3><p><code>&lt;sql&gt;</code>标签用于定义可重用的SQL片段，以便在多个SQL语句中共享。<code>&lt;sql&gt;</code>标签通常与<code>&lt;include&gt;</code>标签一起使用，以便在需要的地方插入SQL片段</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">sql</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;empColumns&quot;</span>&gt;</span><br>    emp_id,emp_name,emp_age,emp_gender,dept_id<br><span class="hljs-tag">&lt;/<span class="hljs-name">sql</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;getEmpByCondition&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;emp&quot;</span>&gt;</span><br>    select <span class="hljs-tag">&lt;<span class="hljs-name">include</span> <span class="hljs-attr">refid</span>=<span class="hljs-string">&quot;empColumns&quot;</span>/&gt;</span> from t_emp;<br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="9、MyBatis中的缓存"><a href="#9、MyBatis中的缓存" class="headerlink" title="9、MyBatis中的缓存"></a>9、MyBatis中的缓存</h2><h3 id="9-1、MyBatis的一级缓存【默认开启】"><a href="#9-1、MyBatis的一级缓存【默认开启】" class="headerlink" title="9.1、MyBatis的一级缓存【默认开启】"></a>9.1、MyBatis的一级缓存【默认开启】</h3><p><strong>一级缓存是SqlSession级别的，通过同一个SqlSession查询的数据会被缓存，下次查询相同的数据，就会从缓存中直接获取，不会从数据库重新访问</strong></p><p>使一级缓存失效的四种情况：</p><ol><li>不同的SqlSession对应不同的一级缓存</li><li>同一个SqlSession但是查询条件不同</li><li>同一个SqlSession两次查询期间执行了任何一次增删改操作</li><li>同一个SqlSession两次查询期间手动清空了缓存</li></ol><h3 id="9-2、MyBatis的二级缓存"><a href="#9-2、MyBatis的二级缓存" class="headerlink" title="9.2、MyBatis的二级缓存"></a>9.2、MyBatis的二级缓存</h3><p>二级缓存是SqlSessionFactory级别，通过同一个SqlSessionFactory创建的SqlSession查询的结果会被缓存；此后若再次执行相同的查询语句，结果就会从缓存中获取</p><p>二级缓存开启的条件：</p><ul><li><p>1、在核心配置文件中，设置全局配置属性cacheEnabled&#x3D;”true”，默认为true，不需要设置</p></li><li><p>2、在映射文件中设置标签<code>&lt;cache /&gt;</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">mapper</span> <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="hljs-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!--注意这个命名空间是 对应的Mapper接口的全类名--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;org.example.mybatis.mapper.CacheMapper&quot;</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--开启二级缓存，在映射文件中开启cache标签--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">cache</span>/&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>3、二级缓存必须在SqlSession关闭或提交之后有效 （因为查询的数据默认保存到一级缓存中，要想将数据保存到二级缓存中，必须关闭sqlSession）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//二级缓存</span><br><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testCache</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>    <span class="hljs-type">InputStream</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> Resources.getResourceAsStream(<span class="hljs-string">&quot;mybatis-config.xml&quot;</span>);<br>    <span class="hljs-type">SqlSessionFactory</span> <span class="hljs-variable">sqlSessionFactory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlSessionFactoryBuilder</span>().build(is);<br>    <span class="hljs-type">SqlSession</span> <span class="hljs-variable">sqlSession1</span> <span class="hljs-operator">=</span> sqlSessionFactory.openSession(<span class="hljs-literal">true</span>);<br>    <span class="hljs-type">CacheMapper</span> <span class="hljs-variable">mapper1</span> <span class="hljs-operator">=</span> sqlSession1.getMapper(CacheMapper.class);<br>    <span class="hljs-type">Emp</span> <span class="hljs-variable">emp1</span> <span class="hljs-operator">=</span> mapper1.getEmpById(<span class="hljs-number">1</span>);<br>    System.out.println(<span class="hljs-string">&quot;emp1 = &quot;</span> + emp1);<br>    sqlSession1.close();  <span class="hljs-comment">//关闭sqlSession1</span><br>    <span class="hljs-type">SqlSession</span> <span class="hljs-variable">sqlSession2</span> <span class="hljs-operator">=</span> sqlSessionFactory.openSession(<span class="hljs-literal">true</span>);<br>    <span class="hljs-type">CacheMapper</span> <span class="hljs-variable">mapper2</span> <span class="hljs-operator">=</span> sqlSession2.getMapper(CacheMapper.class);<br>    <span class="hljs-type">Emp</span> <span class="hljs-variable">emp2</span> <span class="hljs-operator">=</span> mapper2.getEmpById(<span class="hljs-number">1</span>);<br>    System.out.println(<span class="hljs-string">&quot;emp2 = &quot;</span> + emp2);<br>    sqlSession2.close();<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>4、查询的数据所转换的实体类类型必须实现序列化的接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Emp</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br></code></pre></td></tr></table></figure></li></ul><p>使二级缓存失效的情况：</p><ul><li>两次查询之间执行了任意的增删改，会使一级和二级缓存同时失效</li></ul><h3 id="9-3、二级缓存的相关配置（了解）"><a href="#9-3、二级缓存的相关配置（了解）" class="headerlink" title="9.3、二级缓存的相关配置（了解）"></a>9.3、二级缓存的相关配置（了解）</h3><p>在mapper配置文件中添加的cache标签可以设置一些属性：</p><ul><li>①eviction属性：缓存回收策略，默认的是 LRU。<ul><li>LRU（Least Recently Used） – 最近最少使用的：移除最长时间不被使用的对象。</li><li>FIFO（First in First out） – 先进先出：按对象进入缓存的顺序来移除它们。</li><li>SOFT – 软引用：移除基于垃圾回收器状态和软引用规则的对象。</li><li>WEAK – 弱引用：更积极地移除基于垃圾收集器状态和弱引用规则的对象。</li></ul></li><li>②flushInterval属性：刷新间隔，单位毫秒<ul><li>默认情况是不设置，也就是没有刷新间隔，缓存仅仅调用语句时刷新</li></ul></li><li>③size属性：引用数目，正整数<ul><li>代表缓存最多可以存储多少个对象，太大容易导致内存溢出</li></ul></li><li>④readOnly属性：只读， true&#x2F;false<ul><li>true：只读缓存；会给所有调用者返回缓存对象的相同实例。因此这些对象不能被修改。这提供了 很重要的性能优势。</li><li>false：读写缓存；会返回缓存对象的拷贝（通过序列化）。这会慢一些，但是安全，因此默认是false。</li></ul></li><li>⑤type属性：缓存的类型。默认是MyBatis中原生的二级缓存。也可以整合第三方缓存</li></ul><h3 id="9-4、MyBatis缓存查询的顺序"><a href="#9-4、MyBatis缓存查询的顺序" class="headerlink" title="9.4、MyBatis缓存查询的顺序"></a>9.4、MyBatis缓存查询的顺序</h3><p>先查询二级缓存，因为二级缓存中可能会有其他程序已经查出来的数据，可以拿来直接使用。</p><p>如果二级缓存没有命中，再查询一级缓存</p><p>如果一级缓存也没有命中，则查询数据库</p><p>SqlSession关闭之后，一级缓存中的数据会写入二级缓存</p><h3 id="9-5、整合第三方缓存EHCache（针对于二级缓存）"><a href="#9-5、整合第三方缓存EHCache（针对于二级缓存）" class="headerlink" title="9.5、整合第三方缓存EHCache（针对于二级缓存）"></a>9.5、整合第三方缓存EHCache（针对于二级缓存）</h3><p>1、添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--MyBatis EHCache整合包--&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis.caches<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-ehcache<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>     <span class="hljs-comment">&lt;!--slf4j日志门面的一个具体实现--&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>ch.qos.logback<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>logback-classic<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>2、创建EHCache的配置文件ehcache.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span> ?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">ehcache</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xsi:noNamespaceSchemaLocation</span>=<span class="hljs-string">&quot;../config/ehcache.xsd&quot;</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 磁盘保存路径 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">diskStore</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;E:\atguigu\ehcache&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">defaultCache</span></span><br><span class="hljs-tag">        <span class="hljs-attr">maxElementsInMemory</span>=<span class="hljs-string">&quot;1000&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">maxElementsOnDisk</span>=<span class="hljs-string">&quot;10000000&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">eternal</span>=<span class="hljs-string">&quot;false&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">overflowToDisk</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">timeToIdleSeconds</span>=<span class="hljs-string">&quot;120&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">timeToLiveSeconds</span>=<span class="hljs-string">&quot;120&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">diskExpiryThreadIntervalSeconds</span>=<span class="hljs-string">&quot;120&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">memoryStoreEvictionPolicy</span>=<span class="hljs-string">&quot;LRU&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">defaultCache</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">ehcache</span>&gt;</span><br></code></pre></td></tr></table></figure><p>EHCache配置文件说明</p><table><thead><tr><th><strong>属性名</strong></th><th><strong>是否必须</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>maxElementsInMemory</td><td>是</td><td>在内存中缓存的element的最大数目</td></tr><tr><td>maxElementsOnDisk</td><td>是</td><td>在磁盘上缓存的element的最大数目，若是0表示无穷大</td></tr><tr><td>eternal</td><td>是</td><td>设定缓存的elements是否永远不过期。 如果为true，则缓存的数据始终有效， 如果为false那么还要根据timeToIdleSeconds、timeToLiveSeconds判断</td></tr><tr><td>overflowToDisk</td><td>是</td><td>设定当内存缓存溢出的时候是否将过期的element缓存到磁盘上</td></tr><tr><td>timeToIdleSeconds</td><td>否</td><td>当缓存在EhCache中的数据前后两次访问的时间超过timeToIdleSeconds的属性取值时， 这些数据便会删除，默认值是0,也就是可闲置时间无穷大</td></tr><tr><td>timeToLiveSeconds</td><td>否</td><td>缓存element的有效生命期，默认是0.,也就是element存活时间无穷大</td></tr><tr><td>diskSpoolBufferSizeMB</td><td>否</td><td>DiskStore(磁盘缓存)的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区</td></tr><tr><td>diskPersistent</td><td>否</td><td>在VM重启的时候是否启用磁盘保存EhCache中的数据，默认是false。</td></tr><tr><td>diskExpiryThreadIntervalSeconds</td><td>否</td><td>磁盘缓存的清理线程运行间隔，默认是120秒。每个120s， 相应的线程会进行一次EhCache中数据的清理工作</td></tr><tr><td>memoryStoreEvictionPolicy</td><td>否</td><td>当内存缓存达到最大，有新的element加入的时候， 移除缓存中element的策略。 默认是LRU （最近最少使用），可选的有LFU （最不常使用）和FIFO （先进先出）</td></tr></tbody></table><p>3、在映射文件中设置二级缓存的类型</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--开启二级缓存，在映射文件中开启cache标签--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">cache</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;org.mybatis.caches.ehcache.EhcacheCache&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><p>4、加入logback日志</p><p>存在SLF4J时，作为简易日志的log4j将失效，此时我们需要借助SLF4J的具体实现logback来打印日志。 创建logback的配置文件logback.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span> <span class="hljs-attr">debug</span>=<span class="hljs-string">&quot;true&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定日志输出的位置 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appender</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;STDOUT&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">encoder</span>&gt;</span><br>            <span class="hljs-comment">&lt;!-- 日志输出的格式 --&gt;</span><br>            <span class="hljs-comment">&lt;!-- 按照顺序分别是： 时间、日志级别、线程名称、打印日志的类、日志主体内容、换行--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">pattern</span>&gt;</span>[%d&#123;HH:mm:ss.SSS&#125;] [%-5level] [%thread] [%logger][%msg]%n<span class="hljs-tag">&lt;/<span class="hljs-name">pattern</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">encoder</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">appender</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 设置全局日志级别。日志级别按顺序分别是： DEBUG、INFO、WARN、ERROR --&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定任何一个日志级别都只打印当前级别和后面级别的日志。 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">root</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;DEBUG&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 指定打印日志的appender，这里通过“STDOUT”引用了前面配置的appender --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;STDOUT&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 根据特殊需求指定局部日志级别 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.example.mybatis.mapper&quot;</span> <span class="hljs-attr">level</span>=<span class="hljs-string">&quot;DEBUG&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="10、MyBatis的逆向工程"><a href="#10、MyBatis的逆向工程" class="headerlink" title="10、MyBatis的逆向工程"></a>10、MyBatis的逆向工程</h2><p>正向工程：先创建Java实体类，由框架负责根据实体类生成数据库表。 Hibernate是支持正向工程的。</p><p>逆向工程：先创建数据库表，由框架负责根据数据库表，反向生成如下资源：</p><ul><li>Java实体类</li><li>Mapper接口</li><li>Mapper映射文件</li></ul><h3 id="10-1、创建逆向工程的步骤"><a href="#10-1、创建逆向工程的步骤" class="headerlink" title="10.1、创建逆向工程的步骤"></a>10.1、创建逆向工程的步骤</h3><h4 id="1、在pom-xml中添加插件"><a href="#1、在pom-xml中添加插件" class="headerlink" title="1、在pom.xml中添加插件"></a>1、在pom.xml中添加插件</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 控制Maven在构建过程中相关配置 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 构建过程中用到的插件 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 具体插件，逆向工程的操作是以构建过程中插件形式出现的 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis.generator<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.3.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 插件的依赖 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 逆向工程的核心依赖 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis.generator<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-generator-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.3.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-comment">&lt;!-- MySQL驱动 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>8.0.16<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2、创建逆向工程的配置文件"><a href="#2、创建逆向工程的配置文件" class="headerlink" title="2、创建逆向工程的配置文件"></a>2、创建逆向工程的配置文件</h4><p>文件名必须是：generatorConfig.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">generatorConfiguration</span> <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span> <span class="hljs-string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">generatorConfiguration</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">            targetRuntime: 执行生成的逆向工程的版本</span><br><span class="hljs-comment">                MyBatis3Simple: 生成基本的CRUD（清新简洁版）</span><br><span class="hljs-comment">                MyBatis3: 生成带条件的CRUD（奢华尊享版）</span><br><span class="hljs-comment">    --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;DB2Tables&quot;</span> <span class="hljs-attr">targetRuntime</span>=<span class="hljs-string">&quot;MyBatis3&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 数据库的连接信息 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">jdbcConnection</span> <span class="hljs-attr">driverClass</span>=<span class="hljs-string">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span><br><span class="hljs-tag">                        <span class="hljs-attr">connectionURL</span>=<span class="hljs-string">&quot;jdbc:mysql://主机:端口/mybatis?serverTimezone=UTC&quot;</span></span><br><span class="hljs-tag">                        <span class="hljs-attr">userId</span>=<span class="hljs-string">&quot;用户名&quot;</span></span><br><span class="hljs-tag">                        <span class="hljs-attr">password</span>=<span class="hljs-string">&quot;密码&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">jdbcConnection</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- javaBean的生成策略--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">javaModelGenerator</span> <span class="hljs-attr">targetPackage</span>=<span class="hljs-string">&quot;org.example.mybatis.pojo&quot;</span> <span class="hljs-attr">targetProject</span>=<span class="hljs-string">&quot;.\src\main\java&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;enableSubPackages&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;trimStrings&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">javaModelGenerator</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- SQL映射文件的生成策略 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">sqlMapGenerator</span> <span class="hljs-attr">targetPackage</span>=<span class="hljs-string">&quot;org.example.mybatis.mapper&quot;</span> <span class="hljs-attr">targetProject</span>=<span class="hljs-string">&quot;.\src\main\resources&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;enableSubPackages&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">sqlMapGenerator</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- Mapper接口的生成策略 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">javaClientGenerator</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;XMLMAPPER&quot;</span> <span class="hljs-attr">targetPackage</span>=<span class="hljs-string">&quot;org.example.mybatis.mapper&quot;</span> <span class="hljs-attr">targetProject</span>=<span class="hljs-string">&quot;.\src\main\java&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;enableSubPackages&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">javaClientGenerator</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 逆向分析的表 --&gt;</span><br>        <span class="hljs-comment">&lt;!-- tableName设置为*号，可以对应所有表，此时不写domainObjectName --&gt;</span><br>        <span class="hljs-comment">&lt;!-- domainObjectName属性指定生成出来的实体类的类名 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">tableName</span>=<span class="hljs-string">&quot;t_emp&quot;</span> <span class="hljs-attr">domainObjectName</span>=<span class="hljs-string">&quot;Emp&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">table</span> <span class="hljs-attr">tableName</span>=<span class="hljs-string">&quot;t_dept&quot;</span> <span class="hljs-attr">domainObjectName</span>=<span class="hljs-string">&quot;Dept&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">context</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">generatorConfiguration</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3、通过插件生成逆向工程"><a href="#3、通过插件生成逆向工程" class="headerlink" title="3、通过插件生成逆向工程"></a>3、通过插件生成逆向工程</h4><p><img src="/img/ssm_img/MyBatis%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B.jpg" alt="MyBatis逆向工程"></p><p>双击之后，就会生成对应的mapper接口，mapper.xml映射文件，实体类</p><p><img src="/img/ssm_img/MyBatis%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E6%88%90%E5%8A%9F.jpg" alt="MyBatis逆向工程成功"></p><h3 id="10-2、QBC风格"><a href="#10-2、QBC风格" class="headerlink" title="10.2、QBC风格"></a>10.2、QBC风格</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java">    <span class="hljs-meta">@Test</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testMBG</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-type">SqlSession</span> <span class="hljs-variable">sqlSession</span> <span class="hljs-operator">=</span> SqlSessionUtil.getSqlSession();<br>        <span class="hljs-type">EmpMapper</span> <span class="hljs-variable">mapper</span> <span class="hljs-operator">=</span> sqlSession.getMapper(EmpMapper.class);<br>        <span class="hljs-comment">//根据id查询</span><br><span class="hljs-comment">//        Emp emp = mapper.selectByPrimaryKey(1);</span><br><span class="hljs-comment">//        System.out.println(&quot;emp = &quot; + emp);</span><br><br>        <span class="hljs-comment">//查询所有</span><br><span class="hljs-comment">//        List&lt;Emp&gt; emps = mapper.selectByExample(null);</span><br><span class="hljs-comment">//        emps.forEach(System.out::println);</span><br><br>        <span class="hljs-comment">//查询员工姓名是张三,并且年龄小于20</span><br><span class="hljs-comment">//        EmpExample example = new EmpExample();</span><br><span class="hljs-comment">//        example.createCriteria().andEmpNameEqualTo(&quot;张三&quot;).andEmpAgeLessThan(20);</span><br><span class="hljs-comment">//        List&lt;Emp&gt; emps = mapper.selectByExample(example);</span><br><span class="hljs-comment">//        emps.forEach(System.out::println);</span><br><br>        <span class="hljs-comment">//修改</span><br>        <span class="hljs-type">Emp</span> <span class="hljs-variable">emp</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Emp</span>();<br>        emp.setEmpId(<span class="hljs-number">1</span>);<br>        emp.setEmpName(<span class="hljs-string">&quot;张三张三&quot;</span>);<br>        emp.setEmpAge(<span class="hljs-literal">null</span>);<br>        emp.setEmpGender(<span class="hljs-string">&quot;男&quot;</span>);<br><span class="hljs-comment">//        mapper.updateByPrimaryKey(emp);</span><br>        mapper.updateByPrimaryKeySelective(emp);<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="11、分页插件"><a href="#11、分页插件" class="headerlink" title="11、分页插件"></a>11、分页插件</h2><p>limit index,pageSize</p><p>pageSize：每页显示的条数</p><p>pageNum：当前页的页码</p><p>index：当前页的起始索引   &#x3D; <code> (当前页的页码 - 1) * 每页显示的条数</code></p><p>count：总记录数</p><p>totalPage：总页数 &#x3D; <code>(总记录数 % 每页显示的条数 == 0 ) ? (总记录数 / 每页显示的条数) : (总记录数 / 每页显示的条数) + 1</code></p><h3 id="11-1、分页插件的使用步骤"><a href="#11-1、分页插件的使用步骤" class="headerlink" title="11.1、分页插件的使用步骤"></a>11.1、分页插件的使用步骤</h3><h4 id="1、添加依赖"><a href="#1、添加依赖" class="headerlink" title="1、添加依赖"></a>1、添加依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.pagehelper<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>pagehelper<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.2.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2、在MyBatis的核心配置文件中配置"><a href="#2、在MyBatis的核心配置文件中配置" class="headerlink" title="2、在MyBatis的核心配置文件中配置"></a>2、在MyBatis的核心配置文件中配置</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--配置分页插件--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span> <span class="hljs-attr">interceptor</span>=<span class="hljs-string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3、测试"><a href="#3、测试" class="headerlink" title="3、测试"></a>3、测试</h4><p>在查询功能之前开启分页功能</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Test</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testPage</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">SqlSession</span> <span class="hljs-variable">sqlSession</span> <span class="hljs-operator">=</span> SqlSessionUtil.getSqlSession();<br>    <span class="hljs-type">EmpMapper</span> <span class="hljs-variable">mapper</span> <span class="hljs-operator">=</span> sqlSession.getMapper(EmpMapper.class);<br><br>    <span class="hljs-comment">//在查询功能之前开启分页功能,比如查询第一页，每页显示4条数据</span><br>    PageHelper.startPage(<span class="hljs-number">1</span>, <span class="hljs-number">4</span>);<br><br>    <span class="hljs-comment">//查询所有</span><br>    List&lt;Emp&gt; emps = mapper.selectByExample(<span class="hljs-literal">null</span>);<br>    <br>    <span class="hljs-comment">//在查询获取list集合之后，获取分页相关数据</span><br>    <span class="hljs-type">PageInfo</span> <span class="hljs-variable">pageInfo</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PageInfo</span>&lt;&gt;(emps,<span class="hljs-number">5</span>);<br><br>    emps.forEach(System.out::println);<br>&#125;<br></code></pre></td></tr></table></figure><p>此时查询出来的结果就只有4条了</p><h3 id="11-2、通过分页插件获取分页相关数据"><a href="#11-2、通过分页插件获取分页相关数据" class="headerlink" title="11.2、通过分页插件获取分页相关数据"></a>11.2、通过分页插件获取分页相关数据</h3><ul><li>在查询功能之前使用<code>PageHelper.startPage(int pageNum, int pageSize)</code>开启分页功能</li></ul><blockquote><p>pageNum：当前页的页码</p><p>pageSize：每页显示的条数</p></blockquote><ul><li>在查询获取list集合之后，使用<code>PageInfo pageInfo = new PageInfo&lt;&gt;(List list, int navigatePages)</code>获取分页相关数据</li></ul><blockquote><p>list：分页之后的数据</p><p>navigatePages：导航分页的页码数</p></blockquote><ul><li>PageInfo对象相关数据</li></ul><blockquote><ul><li>pageNum：当前页码 2</li><li>pageSize：每页记录数 4</li><li>size：当前页记录数 4</li><li>startRow：当前页第一条记录的行号 5</li><li>endRow：当前页最后一条记录的行号 8</li><li>total：总记录数 27</li><li>pages：总页数 7</li><li>list：当前页记录列表</li><li>prePage：上一页页码 1</li><li>nextPage：下一页页码 3</li><li>isFirstPage：是否为第一页</li><li>isLastPage：是否为最后一页</li><li>hasPreviousPage：是否有上一页</li><li>hasNextPage：是否有下一页</li><li>navigatePages：导航页码数 5</li><li>navigateFirstPage：导航条上的第一页页码 1</li><li>navigateLastPage：导航条上的最后一页页码 5</li><li>navigatepageNums：所有导航页号 [4, 5, 6, 7, 8]</li></ul></blockquote><h1 id="三、SpringMVC"><a href="#三、SpringMVC" class="headerlink" title="三、SpringMVC"></a>三、SpringMVC</h1><h3 id="1、SpringMVC简介"><a href="#1、SpringMVC简介" class="headerlink" title="1、SpringMVC简介"></a>1、SpringMVC简介</h3><h4 id="1、什么是MVC"><a href="#1、什么是MVC" class="headerlink" title="1、什么是MVC"></a>1、什么是MVC</h4><p>MVC是一种软件架构的思想，将软件按照模型、视图、控制器来划分</p><blockquote><ul><li><p>M：Model，模型层，指工程中的JavaBean，作用是处理数据</p></li><li><p>JavaBean分为两类：</p></li><li><p>一类称为实体类Bean：专门存储业务数据的，如 Student、User 等</p></li><li><p>一类称为业务处理 Bean：指 Service 或 Dao 对象，专门用于处理业务逻辑和数据访问。</p></li><li><p>V：View，视图层，指工程中的html或jsp等页面，作用是与用户进行交互，展示数据</p></li><li><p>C：Controller，控制层，指工程中的servlet，作用是接收请求和响应浏览器</p></li></ul></blockquote><p>MVC的工作流程： 用户通过视图层发送请求到服务器，在服务器中请求被Controller接收，Controller调用相应的Model层处理请求，处理完毕将结果返回到Controller，Controller再根据请求处理的结果找到相应的View视图，渲染数据后最终响应给浏览器</p><h4 id="2、什么是SpringMVC"><a href="#2、什么是SpringMVC" class="headerlink" title="2、什么是SpringMVC"></a>2、什么是SpringMVC</h4><p>SpringMVC是Spring的一个后续产品，是Spring的一个子项目</p><p>SpringMVC 是 Spring 为表述层开发提供的一整套完备的解决方案。在表述层框架历经 Strust、WebWork、Strust2 等诸多产品的历代更迭之后，目前业界普遍选择了 SpringMVC 作为 Java EE 项目表述层开发的<strong>首选方案</strong>。</p><blockquote><p>注：三层架构分为表述层（或表示层）、业务逻辑层、数据访问层，表述层表示前台页面和后台servlet</p></blockquote><h4 id="3、SpringMVC的特点"><a href="#3、SpringMVC的特点" class="headerlink" title="3、SpringMVC的特点"></a>3、SpringMVC的特点</h4><ul><li><strong>Spring</strong> <strong>家族原生产品</strong>，与 IOC 容器等基础设施无缝对接</li><li><strong>基于原生的Servlet</strong>，通过了功能强大的<strong>前端控制器DispatcherServlet</strong>，对请求和响应进行统一处理</li><li>表述层各细分领域需要解决的问题<strong>全方位覆盖</strong>，提供<strong>全面解决方案</strong> </li><li><strong>代码清新简洁</strong>，大幅度提升开发效率</li><li>内部组件化程度高，可插拔式组件<strong>即插即用</strong>，想要什么功能配置相应组件即可</li><li><strong>性能卓著</strong>，尤其适合现代大型、超大型互联网项目要求</li></ul><h3 id="2、入门案例"><a href="#2、入门案例" class="headerlink" title="2、入门案例"></a>2、入门案例</h3><h4 id="2-1、创建maven工程，在pom-xml中添加打包方式为war，刷新maven，右键项目-—-Open-Module-Settings"><a href="#2-1、创建maven工程，在pom-xml中添加打包方式为war，刷新maven，右键项目-—-Open-Module-Settings" class="headerlink" title="2.1、创建maven工程，在pom.xml中添加打包方式为war，刷新maven，右键项目 —&gt; Open Module Settings"></a>2.1、创建maven工程，在pom.xml中添加打包方式为war，刷新maven，右键项目 —&gt; Open Module Settings</h4><p><img src="/img/ssm_img/springmvc_%E9%85%8D%E7%BD%AE%E6%AD%A5%E9%AA%A41.jpg" alt="springmvc_配置步骤1"></p><p><img src="/img/ssm_img/springmvc_%E4%BF%AE%E6%94%B9webxml%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84.jpg" alt="springmvc_修改webxml文件路径"></p><p>修改完web.xml文件路径之后，就会自动创建webapp目录：</p><p><img src="/img/ssm_img/springmvc_%E4%BF%AE%E6%94%B9%E5%AE%8C%E6%88%90.jpg" alt="springmvc_修改完成"></p><h4 id="2-2、引入依赖"><a href="#2-2、引入依赖" class="headerlink" title="2.2、引入依赖"></a>2.2、引入依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- SpringMVC --&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-webmvc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>     <span class="hljs-comment">&lt;!-- 日志 --&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>ch.qos.logback<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>logback-classic<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>     <span class="hljs-comment">&lt;!-- ServletAPI --&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>javax.servlet<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javax.servlet-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.1.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>     <span class="hljs-comment">&lt;!-- Spring5和Thymeleaf整合包 --&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.thymeleaf<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>thymeleaf-spring5<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.0.12.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2-3、配置SpringMVC"><a href="#2-3、配置SpringMVC" class="headerlink" title="2.3、配置SpringMVC"></a>2.3、配置SpringMVC</h4><h5 id="1、配置web-xml，注册SpringMVC的前端控制器DispatcherServlet"><a href="#1、配置web-xml，注册SpringMVC的前端控制器DispatcherServlet" class="headerlink" title="1、配置web.xml，注册SpringMVC的前端控制器DispatcherServlet"></a>1、配置web.xml，注册SpringMVC的前端控制器DispatcherServlet</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">web-app</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;4.0&quot;</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 配置SpringMVC的前端控制器DispatcherServlet --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- servlet-name 名称自定义 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>SpringMVC<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 这个servlet-name 要和上面的servlet标签中的servlet-name一致 --&gt;</span><br>        <span class="hljs-comment">&lt;!-- servlet-name 有一个取值是default，处理静态资源 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>SpringMVC<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>        <span class="hljs-comment">&lt;!-- 被DispatcherServlet处理的哪些请求 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">web-app</span>&gt;</span><br></code></pre></td></tr></table></figure><p>url-pattern标签中使用<code>/</code>和<code>/*</code>的区别：</p><blockquote><ul><li><p><code>/</code>所匹配的请求可以是&#x2F;login或.html或.js或.css方式的请求路径，但是<code>/</code>不能匹配.jsp请求路径的请求。因此就可以避免在访问jsp页面时，该请求被DispatcherServlet处理，从而找不到相应的页面</p></li><li><p><code>/*</code>则能够匹配所有请求，例如在使用过滤器时，若需要对所有请求进行过滤，就需要使用<code>/*</code>的写法</p></li></ul></blockquote><h5 id="2、创建请求控制器"><a href="#2、创建请求控制器" class="headerlink" title="2、创建请求控制器"></a>2、创建请求控制器</h5><p>由于前端控制器对浏览器发送的请求进行了统一的处理，但是具体的请求有不同的处理过程，因此需要创建处理具体请求的类，即请求控制器。</p><p>请求控制器中每一个处理请求的方法成为控制器方法</p><p>因为SpringMVC的控制器由一个POJO（普通的Java类）担任，因此需要通过<code>@Controller</code>注解将其标识为一个控制层组件，交给Spring的IoC容器管理，此时SpringMVC才能够识别控制器的存在</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.springmvc.controller;<br><br><span class="hljs-keyword">import</span> org.springframework.stereotype.Controller;<br><br><span class="hljs-meta">@Controller</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HelloController</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="3、创建SpringMVC的配置文件"><a href="#3、创建SpringMVC的配置文件" class="headerlink" title="3、创建SpringMVC的配置文件"></a>3、创建SpringMVC的配置文件</h5><blockquote><p>SpringMVC的配置文件默认的位置和名称：</p><ul><li>默认位置：**<code>WEB-INF</code>**下</li><li>默认名称：**<code>&lt;servlet-name&gt;-servlet.xml</code>**      servlet-name 就是在web.xml中配置的</li></ul></blockquote><p>**<code>webapp/WEB-INF/SpringMVC-servlet.xml:</code>**（这个路径和文件名可以更改，步骤在第5步入门案例总结中）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:context</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--1、扫描控制层组件--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;org.example.springmvc.controller&quot;</span>/&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 配置Thymeleaf视图解析器 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;viewResolver&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.view.ThymeleafViewResolver&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;order&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;characterEncoding&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateEngine&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.SpringTemplateEngine&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateResolver&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver&quot;</span>&gt;</span><br>                        <span class="hljs-comment">&lt;!-- 物理视图 = 视图前缀 + 逻辑视图 + 视图后缀 --&gt;</span><br>                        <span class="hljs-comment">&lt;!-- 视图前缀 --&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;prefix&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;/WEB-INF/templates/&quot;</span>/&gt;</span><br>                        <span class="hljs-comment">&lt;!-- 视图后缀 --&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;suffix&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;.html&quot;</span>/&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateMode&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;HTML5&quot;</span>/&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;characterEncoding&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>    <br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="2-4、测试入门案例"><a href="#2-4、测试入门案例" class="headerlink" title="2.4、测试入门案例"></a>2.4、测试入门案例</h4><p>1、在WEB-INF目录下创建 &#x2F;templates&#x2F;index.html</p><p><img src="/img/ssm_img/springmvc%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B%E6%B5%8B%E8%AF%95html.jpg" alt="springmvc入门案例测试html"></p><p>2、在HelloController中编写代码</p><p><img src="/img/ssm_img/springmvc%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B%E6%B5%8B%E8%AF%95controller.jpg" alt="springmvc入门案例测试controller"></p><p>效果：</p><p><img src="/img/ssm_img/springmvc%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B%E6%BC%94%E7%A4%BA.jpg" alt="springmvc入门案例演示"></p><h4 id="2-5、入门案例总结"><a href="#2-5、入门案例总结" class="headerlink" title="2.5、入门案例总结"></a>2.5、入门案例总结</h4><h6 id="1、SpringMVC处理请求的流程"><a href="#1、SpringMVC处理请求的流程" class="headerlink" title="1、SpringMVC处理请求的流程"></a>1、SpringMVC处理请求的流程</h6><blockquote><ul><li>浏览器发送请求，若请求地址符合前端控制器(DispatcherServlet)的<code>url-pattern</code>，该请求就会被前端控制器DispatcherServlet处理。</li><li>前端控制器会读取SpringMVC的核心配置文件，通过扫描组件找到控制器(Controller)，将请求地址和控制器中<code>@RequestMapping</code>注解的value属性值进行匹配。若匹配成功，该注解所标识的控制器方法就是处理请求的方法。</li><li>处理请求的方法需要返回一个字符串类型的视图名称，该视图名称会被视图解析器解析，加上前缀和后缀组成视图的路径，通过Thymeleaf对视图进行渲染，最终转发到视图所对应页面</li></ul></blockquote><h6 id="2、修改SpringMVC配置文件的默认名称和默认路径"><a href="#2、修改SpringMVC配置文件的默认名称和默认路径" class="headerlink" title="2、修改SpringMVC配置文件的默认名称和默认路径"></a>2、修改SpringMVC配置文件的默认名称和默认路径</h6><blockquote><ul><li>1、在web.xml文件中的<code>&lt;servlet&gt;</code>标签内配置<code>&lt;init-param&gt;</code>标签，这个标签的作用就是设置Servlet 的初始化参数</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>SpringMVC<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--init-param：设置Servlet的初始化参数--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>contextConfigLocation<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span>  <span class="hljs-comment">&lt;!--contextConfigLocation：设置当前DispatcherServlet 要加载的SpringMVC配置文件 的路径--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span>  <span class="hljs-comment">&lt;!--表示在类路径下的springmvc.xml，也就是resource目录下,这个文件名可以自定义--&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>SpringMVC<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>2、在resource目录下创建springmvc.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs xml">&gt;<span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">xmlns:context</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="hljs-tag">      <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">      http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span><br>   <span class="hljs-comment">&lt;!--1、扫描控制层组件--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;org.example.springmvc.controller&quot;</span>/&gt;</span><br><br>   <span class="hljs-comment">&lt;!-- 配置Thymeleaf视图解析器 --&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;viewResolver&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.view.ThymeleafViewResolver&quot;</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;order&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>/&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;characterEncoding&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>/&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateEngine&quot;</span>&gt;</span><br>           <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.SpringTemplateEngine&quot;</span>&gt;</span><br>               <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateResolver&quot;</span>&gt;</span><br>                   <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver&quot;</span>&gt;</span><br>                       <span class="hljs-comment">&lt;!-- 物理视图 = 视图前缀 + 逻辑视图 + 视图后缀 --&gt;</span><br>                       <span class="hljs-comment">&lt;!-- 视图前缀 --&gt;</span><br>                       <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;prefix&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;/WEB-INF/templates/&quot;</span>/&gt;</span><br>                       <span class="hljs-comment">&lt;!-- 视图后缀 --&gt;</span><br>                       <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;suffix&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;.html&quot;</span>/&gt;</span><br>                       <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateMode&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;HTML5&quot;</span>/&gt;</span><br>                       <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;characterEncoding&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>                   <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>               <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>           <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>       <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure></blockquote><h6 id="3、将Servlet的初始化时间提前到服务器启动时"><a href="#3、将Servlet的初始化时间提前到服务器启动时" class="headerlink" title="3、将Servlet的初始化时间提前到服务器启动时"></a>3、将Servlet的初始化时间提前到服务器启动时</h6><blockquote><p>在web.xml文件中的<code>&lt;servlet&gt;</code>标签内配置<code>&lt;load-on-startup&gt;</code>标签</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml">&gt;<span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>SpringMVC<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>contextConfigLocation<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br><br>&gt;<span class="hljs-comment">&lt;!--建议将Servlet的初始化时间提前到服务器启动时。 Servlet的默认初始化时间是在第一次访问的时候--&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">load-on-startup</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">load-on-startup</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>SpringMVC<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure></blockquote><h6 id="查看一个类的内部结构的快捷键：Alt-7"><a href="#查看一个类的内部结构的快捷键：Alt-7" class="headerlink" title="查看一个类的内部结构的快捷键：Alt + 7"></a>查看一个类的内部结构的快捷键：<code>Alt + 7</code></h6><p><img src="/img/ssm_img/%E5%BF%AB%E6%8D%B7%E9%94%AE-%E6%9F%A5%E7%9C%8B%E4%B8%80%E4%B8%AA%E7%B1%BB%E6%88%96%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%86%85%E9%83%A8%E7%BB%93%E6%9E%9C.jpg" alt="快捷键-查看一个类或接口的内部结果"></p><h3 id="3、-RequestMapping注解"><a href="#3、-RequestMapping注解" class="headerlink" title="3、@RequestMapping注解"></a>3、<code>@RequestMapping</code>注解</h3><h4 id="1、-RequestMapping注解的功能"><a href="#1、-RequestMapping注解的功能" class="headerlink" title="1、@RequestMapping注解的功能"></a>1、<code>@RequestMapping</code>注解的功能</h4><blockquote><p><code>@RequestMapping</code>注解是Spring MVC框架中的一个核心注解，它的主要功能是将HTTP请求映射到控制器的处理方法上。</p><p>SpringMVC 接收到指定的请求，就会来找到在映射关系中对应的控制器中的方法来处理这个请求。</p><p>具体来说，<code>@RequestMapping</code>注解可以用于以下几个方面：</p><ol><li><p>映射请求路径：通过value或者path属性，指定处理请求的URL路径，例如：<code>@RequestMapping(&quot;/user&quot;)</code></p></li><li><p>设置请求方法：通过method属性，指定处理请求的HTTP方法，例如：<code>@RequestMapping(value = &quot;/user&quot;, method = RequestMethod.GET)</code></p></li><li><p>设置请求参数：通过params属性，指定处理请求的参数，例如：<code>@RequestMapping(value = &quot;/user&quot;, params = &quot;id=1&quot;)</code></p></li><li><p>设置请求头：通过headers属性，指定处理请求的请求头，例如：<code>@RequestMapping(value = &quot;/user&quot;, headers = &quot;content-type=text/html&quot;)</code></p></li><li><p>设置请求体：通过consumes属性，指定处理请求的请求体类型，例如：<code>@RequestMapping(value = &quot;/user&quot;, consumes = &quot;application/json&quot;)</code></p></li><li><p>设置响应体：通过produces属性，指定处理请求的响应体类型，例如：<code>@RequestMapping(value = &quot;/user&quot;, produces = &quot;application/json&quot;)</code></p></li></ol><p>除了上述功能之外，<code>@RequestMapping</code>注解还可以用于设置其他一些属性，例如：设置路径匹配模式、设置请求参数的正则表达式等等。总之，<code>@RequestMapping</code>注解是Spring MVC框架中非常重要的一个注解，它为控制器处理请求提供了非常灵活的方式。</p></blockquote><h4 id="2、-RequestMapping注解可以标识的位置"><a href="#2、-RequestMapping注解可以标识的位置" class="headerlink" title="2、@RequestMapping注解可以标识的位置"></a>2、<code>@RequestMapping</code>注解可以标识的位置</h4><blockquote><ul><li>类级别：可以在控制器类上使用<code>@RequestMapping</code>注解，用于指定控制器处理的请求的公共前缀。</li><li>方法级别：可以在控制器中的处理方法上使用<code>@RequestMapping</code>注解，用于指定该方法处理的请求路径、请求方法、请求参数等。</li></ul></blockquote><h4 id="3、-RequestMapping注解的value属性"><a href="#3、-RequestMapping注解的value属性" class="headerlink" title="3、@RequestMapping注解的value属性"></a>3、<code>@RequestMapping</code>注解的value属性</h4><blockquote><p><code>@RequestMapping</code>注解的value属性通过请求的请求地址匹配请求映射</p><p><code>@RequestMapping</code>注解的value属性可以接受多个值，用于指定多个请求URL路径，例如：<code>@RequestMapping(&#123;&quot;/hello&quot;,&quot;/abc&quot;&#125;)</code></p><p><code>@RequestMapping</code>注解的value属性必须设置，至少通过请求地址匹配请求映射</p></blockquote><h4 id="4、-RequestMapping注解的method属性（405）"><a href="#4、-RequestMapping注解的method属性（405）" class="headerlink" title="4、@RequestMapping注解的method属性（405）"></a>4、<code>@RequestMapping</code>注解的method属性（405）</h4><blockquote><p><code>@RequestMapping</code>注解的method属性是用于指定请求方法的属性，它可以标识在方法级别上。通过method属性，可以限制控制器处理请求的方法类型，例如GET、POST、PUT、DELETE等。</p><p><code>@RequestMapping</code>注解的method属性是一个RequestMethod类型的数组，表示该请求映射能够匹配多种请求方式的请求</p><p>需要注意的是，如果不指定method属性，则默认处理所有类型的请求方法。如果指定了method属性，若当前请求的请求地址满足请求映射的value属性，但是请求方式不满足method属性，则浏览器报错<code>405：Request method &#39;POST&#39; not supported</code></p></blockquote><h4 id="5、在-RequestMapping-的基础上，结合请求方法的一些派生注解："><a href="#5、在-RequestMapping-的基础上，结合请求方法的一些派生注解：" class="headerlink" title="5、在@RequestMapping 的基础上，结合请求方法的一些派生注解："></a>5、在<code>@RequestMapping</code> 的基础上，结合请求方法的一些派生注解：</h4><blockquote><p>这些派生注解可以更加方便地定义请求方法的处理方式。以下是一些常用的派生注解：</p><ol><li><code>@GetMapping</code>：用于处理HTTP GET请求方法。</li><li><code>@PostMapping</code>：用于处理HTTP POST请求方法。</li><li><code>@PutMapping</code>：用于处理HTTP PUT请求方法。</li><li><code>@DeleteMapping</code>：用于处理HTTP DELETE请求方法。</li></ol><p>这些派生注解都是基于<code>@RequestMapping</code>注解实现的，因此它们可以接受相同的参数，如<code>value</code>、<code>path</code>、<code>params</code>、<code>headers</code>等</p></blockquote><h4 id="6、-RequestMapping注解的params属性（了解）（400）"><a href="#6、-RequestMapping注解的params属性（了解）（400）" class="headerlink" title="6、@RequestMapping注解的params属性（了解）（400）"></a>6、<code>@RequestMapping</code>注解的params属性（了解）（400）</h4><blockquote><p>浏览器发送请求的参数必须满足params属性中的设置</p><p><code>@RequestMapping</code>注解的params属性通过请求的请求参数匹配请求映射</p><p><code>@RequestMapping</code>注解的params属性是一个字符串类型的数组，可以通过四种表达式设置请求参数和请求映射的匹配关系:</p><ul><li>“param”：要求请求映射所匹配的请求必须携带param请求参数</li><li>“!param”：要求请求映射所匹配的请求必须不能携带param请求参数</li><li>“param&#x3D;value”：要求请求映射所匹配的请求必须携带param请求参数且param&#x3D;value</li><li>“param!&#x3D;value”：要求请求映射所匹配的请求可以不携带param，或者必须携带param请求参数并且param!&#x3D;value</li></ul><p>如果有多个条件，则必须同时满足</p></blockquote><h4 id="7、-RequestMapping注解的headers属性（了解）（404）"><a href="#7、-RequestMapping注解的headers属性（了解）（404）" class="headerlink" title="7、@RequestMapping注解的headers属性（了解）（404）"></a>7、<code>@RequestMapping</code>注解的headers属性（了解）（404）</h4><blockquote><p><code>@RequestMapping</code>注解的headers属性可以用来限制请求头的条件。它接受一个字符串数组，每个字符串都是一个请求头的限制条件，多个条件之间是”与”的关系。可以通过四种表达式设置请求头信息和请求映射的匹配关系：</p><ul><li>“header”：要求请求映射所匹配的请求必须携带header请求头信息</li><li>“!header”：要求请求映射所匹配的请求必须不能携带header请求头信息</li><li>“header&#x3D;value”：要求请求映射所匹配的请求必须携带header请求头信息且header&#x3D;value</li><li>“header!&#x3D;value”：要求请求映射所匹配的请求可以不携带header，或者必须携带header请求头信息且header!&#x3D;value</li></ul><p>若当前请求满足<code>@RequestMapping</code>注解的value和method属性，但是不满足headers属性，此时页面显示404错误，即资源未找到</p><p><code>headers</code>属性只能用于限制请求头，不能用于限制请求体中的内容。如果需要限制请求体中的内容，可以使用<code>consumes</code>属性。</p></blockquote><h4 id="8、SpringMVC支持ant风格的路径"><a href="#8、SpringMVC支持ant风格的路径" class="headerlink" title="8、SpringMVC支持ant风格的路径"></a>8、SpringMVC支持ant风格的路径</h4><blockquote><p>Ant风格的路径匹配规则如下：</p><ul><li><code>?</code>：匹配任意单个字符</li><li><code>*</code>：匹配任意长度的字符，但不包括路径分隔符<code>/</code></li><li><code>**</code>：匹配任意长度的字符，包括路径分隔符<code>/</code></li></ul><p>需要注意的是，Ant风格的路径匹配规则只适用于路径部分，不包括查询参数部分。如果需要匹配查询参数，可以使用<code>params</code>属性</p></blockquote><h4 id="9、-RequestMapping使用路径中的占位符（重点）"><a href="#9、-RequestMapping使用路径中的占位符（重点）" class="headerlink" title="9、@RequestMapping使用路径中的占位符（重点）"></a>9、<code>@RequestMapping</code>使用路径中的占位符（重点）</h4><blockquote><p>原始方式：&#x2F;deleteUser?id&#x3D;1</p><p>rest方式：&#x2F;deleteUser&#x2F;1</p><p>SpringMVC路径中的占位符常用于RESTful风格中，当请求路径中将某些数据通过路径的方式传输到服务器中，就可以在相应的<code>@RequestMapping</code>注解的value属性中通过占位符<code>&#123;xxx&#125;</code>标识传输的数据，再通过**<code>@PathVariable(&quot;xxx&quot;)</code>**注解，将占位符所标识的数据赋值给控制器方法的形参</p></blockquote><h3 id="4、SpringMVC获取请求参数"><a href="#4、SpringMVC获取请求参数" class="headerlink" title="4、SpringMVC获取请求参数"></a>4、SpringMVC获取请求参数</h3><h4 id="1、通过ServletAPI获取请求参数"><a href="#1、通过ServletAPI获取请求参数" class="headerlink" title="1、通过ServletAPI获取请求参数"></a>1、通过ServletAPI获取请求参数</h4><blockquote><p>流程：</p><ol><li><p>客户端发送请求到服务器，服务器接收到请求后会被SpringMVC的<code>DispatcherServlet</code>拦截。</p></li><li><p><code>DispatcherServlet</code>根据请求的URL和配置的<code>HandlerMapping</code>找到对应的<code>Controller</code>。</p></li><li><p><code>Controller</code>中的方法被调用，方法的参数列表中可以包含<code>HttpServletRequest</code>和<code>HttpServletResponse</code>对象，通过这两个对象可以获取请求参数和设置响应内容。</p></li><li><p>在<code>HttpServletRequest</code>对象中可以通过以下方法获取请求参数：</p><ul><li><code>getParameter(String name)</code>：获取指定名称的参数值。</li><li><code>getParameterValues(String name)</code>：获取指定名称的参数值数组。</li><li><code>getParameterMap()</code>：获取所有的参数名和参数值的映射表。</li></ul><p>例如，以下是一个获取请求参数的示例代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/hello&quot;)</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">hello</span><span class="hljs-params">(HttpServletRequest request)</span> &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> request.getParameter(<span class="hljs-string">&quot;name&quot;</span>);<br>    String[] hobbies = request.getParameterValues(<span class="hljs-string">&quot;hobby&quot;</span>);<br>    Map&lt;String, String[]&gt; paramMap = request.getParameterMap();<br>    <span class="hljs-comment">// ...</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ol><p>总之，通过ServletAPI可以方便地获取请求参数，SpringMVC框架在处理请求时会自动将<code>HttpServletRequest</code>对象传递给<code>Controller</code>方法，从而可以方便地获取请求参数。</p></blockquote><h4 id="2、通过控制器方法的形参获取请求参数"><a href="#2、通过控制器方法的形参获取请求参数" class="headerlink" title="2、通过控制器方法的形参获取请求参数"></a>2、通过控制器方法的形参获取请求参数</h4><blockquote><p>直接在方法中声明参数：控制器方法可以直接在参数列表中声明与请求参数<strong>同名</strong>的参数，SpringMVC会自动将请求参数的值绑定到对应的参数上。</p><ul><li>若请求所传输的请求参数中有多个同名的请求参数，此时可以在控制器方法的形参中设置字符串数组或者字符串类型的形参接收此请求参数</li><li>若使用字符串数组类型的形参，此参数的数组中包含了每一个数据</li><li>若使用字符串类型的形参，此参数的值为每个数据中间使用逗号拼接的结果</li></ul></blockquote><h4 id="3、-RequestParam注解"><a href="#3、-RequestParam注解" class="headerlink" title="3、@RequestParam注解"></a>3、<code>@RequestParam</code>注解</h4><blockquote><p><code>@RequestParam</code>是将请求参数和控制器方法的形参创建映射关系</p><p><code>@RequestParam</code>注解一共有三个属性：</p><ul><li>value：指定为形参赋值的请求参数的参数名</li><li>required：设置是否必须传输此请求参数，默认值为true</li><li>若设置为true时，则当前请求必须传输value所指定的请求参数，若没有传输该请求参数，且没有设置defaultValue属性，则页面报错400：Required String parameter ‘xxx’ is not present；</li><li>若设置为false，则当前请求不是必须传输value所指定的请求参数，若没有传输，则注解所标识的形参的值为null</li><li>defaultValue：不管required属性值为true或false，当value所指定的请求参数没有传输或传输的值为””时，则使用默认值为形参赋值</li></ul></blockquote><h4 id="4、-RequestHeader注解"><a href="#4、-RequestHeader注解" class="headerlink" title="4、@RequestHeader注解"></a>4、<code>@RequestHeader</code>注解</h4><blockquote><p><code>@RequestHeader</code>注解是SpringMVC中用于绑定请求头信息的注解，可以将请求头信息的值绑定到方法参数上，并可以指定请求头的名称、是否必须以及默认值等信息。</p><p><code>@RequestHeader</code>注解有以下常用属性：</p><ul><li><code>value</code>：指定请求头的名称，如果不指定，则默认使用方法参数的名称。</li><li><code>required</code>：指定请求头是否是必须的，默认为<code>true</code>，表示请求头必须存在，如果不存在，则抛出异常。如果为<code>false</code>，表示请求头可以不存在，方法参数的值为<code>null</code>。</li><li><code>defaultValue</code>：指定请求头的默认值，如果请求头不存在，则使用默认值。如果请求头存在，则使用请求头的值。</li></ul></blockquote><h4 id="5、-CookieValue注解"><a href="#5、-CookieValue注解" class="headerlink" title="5、@CookieValue注解"></a>5、<code>@CookieValue</code>注解</h4><blockquote><p><code>@CookieValue</code>注解是SpringMVC中用于绑定Cookie值的注解，可以将请求中的Cookie值绑定到方法参数上，并可以指定Cookie的名称、是否必须以及默认值等信息。</p><p><code>@CookieValue</code>注解有以下常用属性：</p><ul><li><code>value</code>：指定Cookie的名称，如果不指定，则默认使用方法参数的名称。</li><li><code>required</code>：指定Cookie是否是必须的，默认为<code>true</code>，表示Cookie必须存在，如果不存在，则抛出异常。如果为<code>false</code>，表示Cookie可以不存在，方法参数的值为<code>null</code>。</li><li><code>defaultValue</code>：指定Cookie的默认值，如果Cookie不存在，则使用默认值。如果Cookie存在，则使用Cookie的值。</li></ul></blockquote><h4 id="6、通过pojo获取请求参数"><a href="#6、通过pojo获取请求参数" class="headerlink" title="6、通过pojo获取请求参数"></a>6、通过pojo获取请求参数</h4><blockquote><p>SpringMVC可以通过POJO（Plain Old Java Object）来获取请求参数，即将请求参数自动绑定到POJO对象的属性上。</p><p>要实现这个功能，需要满足以下条件：</p><ol><li>POJO对象必须具有无参构造函数。</li><li>POJO对象的属性名称必须与请求参数的名称相同。</li><li>POJO对象的属性类型必须与请求参数的类型相同或可以自动转换。</li></ol><p>例如，假设有以下的POJO类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span> &#123;<br> <span class="hljs-keyword">private</span> String name;<br> <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br> <span class="hljs-comment">// getter和setter方法</span><br>&gt;&#125;<br></code></pre></td></tr></table></figure><p>可以通过以下方式来获取请求参数并绑定到<code>User</code>对象上：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@RequestMapping(&quot;/user&quot;)</span><br>&gt;<span class="hljs-keyword">public</span> String <span class="hljs-title function_">getUserInfo</span><span class="hljs-params">(User user)</span> &#123;<br> <span class="hljs-comment">// 处理User对象</span><br> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;user_info&quot;</span>;<br>&gt;&#125;<br></code></pre></td></tr></table></figure><p>在上面的示例中，<code>User</code>对象的属性名称分别为<code>name</code>和<code>age</code>，与请求参数的名称相同。当请求参数中包含<code>name</code>和<code>age</code>参数时，SpringMVC会自动将这些参数绑定到<code>User</code>对象的属性上，从而实现了自动转换。</p><p>需要注意的是，如果请求参数的名称与POJO对象的属性名称不一致，可以使用<code>@RequestParam</code>注解来指定参数名称。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span> &#123;<br> <span class="hljs-meta">@RequestParam(&quot;username&quot;)</span><br> <span class="hljs-keyword">private</span> String name;<br> <span class="hljs-meta">@RequestParam(&quot;userage&quot;)</span><br> <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br> <span class="hljs-comment">// getter和setter方法</span><br>&gt;&#125;<br></code></pre></td></tr></table></figure><p>在上面的示例中，<code>@RequestParam(&quot;username&quot;)</code>指定了参数名称为<code>username</code>，<code>@RequestParam(&quot;userage&quot;)</code>指定了参数名称为<code>userage</code>。当请求参数中包含<code>username</code>和<code>userage</code>参数时，SpringMVC会自动将这些参数绑定到<code>User</code>对象的属性上，从而实现了自动转换。</p></blockquote><h4 id="7、解决获取请求参数的乱码问题"><a href="#7、解决获取请求参数的乱码问题" class="headerlink" title="7、解决获取请求参数的乱码问题"></a>7、解决获取请求参数的乱码问题</h4><blockquote><p>在SpringMVC中，如果请求参数中包含中文字符，可能会出现乱码的情况。这是因为在HTTP协议中，请求参数是以UTF-8编码发送的，而如果服务器没有正确设置编码方式，就会导致乱码问题的出现。</p><p>要解决SpringMVC获取请求参数的乱码问题，可以采取以下两种方式：</p><p>1.在web.xml中配置过滤器</p><p>可以在web.xml中配置一个字符编码过滤器，用于将请求参数的编码方式设置为UTF-8。以下是一个示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--配置Spring的编码过滤器--&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>characterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br>&gt;<span class="hljs-comment">&lt;!--设置请求的编码--&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>encoding<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>utf-8<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>&gt;<span class="hljs-comment">&lt;!--设置请求和响应的编码--&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>forceEncoding<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>characterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在上面的示例中，我们配置了一个名为<code>encodingFilter</code>的过滤器，将编码方式设置为UTF-8，并强制使用UTF-8编码。将该过滤器映射到所有的URL上，这样就可以解决请求参数的乱码问题。</p><p>SpringMVC中处理编码的过滤器一定要配置到其他过滤器之前，否则无效</p><p>2.在Controller中设置编码方式（不常用）</p><p>可以在Controller中使用<code>@RequestMapping</code>注解的<code>produces</code>属性来设置响应的编码方式。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@RequestMapping(value = &quot;/user&quot;, produces = &quot;text/html;charset=UTF-8&quot;)</span><br>&gt;<span class="hljs-keyword">public</span> String <span class="hljs-title function_">addUser</span><span class="hljs-params">(User user)</span> &#123;<br>&gt;<span class="hljs-comment">// 处理用户信息</span><br>&gt;<span class="hljs-keyword">return</span> <span class="hljs-string">&quot;user_info&quot;</span>;<br>&gt;&#125;<br></code></pre></td></tr></table></figure><p>在上面的示例中，我们使用了<code>@RequestMapping</code>注解的<code>produces</code>属性来设置响应的编码方式为UTF-8。这样就可以解决请求参数的乱码问题。</p><p>总之，无论使用哪种方式，都需要确保请求参数和响应的编码方式都是UTF-8，才能避免乱码问题的出现。</p></blockquote><h3 id="5、域对象共享数据"><a href="#5、域对象共享数据" class="headerlink" title="5、域对象共享数据"></a>5、域对象共享数据</h3><h4 id="1、往request域中共享数据"><a href="#1、往request域中共享数据" class="headerlink" title="1、往request域中共享数据"></a>1、往request域中共享数据</h4><h5 id="1-1、使用ServletAPI往request域对象共享数据（SpringMVC用不上）"><a href="#1-1、使用ServletAPI往request域对象共享数据（SpringMVC用不上）" class="headerlink" title="1.1、使用ServletAPI往request域对象共享数据（SpringMVC用不上）"></a>1.1、使用ServletAPI往request域对象共享数据（SpringMVC用不上）</h5><h5 id="1-2、使用ModelAndView往request域对象共享数据"><a href="#1-2、使用ModelAndView往request域对象共享数据" class="headerlink" title="1.2、使用ModelAndView往request域对象共享数据"></a>1.2、使用ModelAndView往request域对象共享数据</h5><blockquote><p>SpringMVC中的ModelAndView是一个非常重要的类，用于封装Controller处理结果的数据和视图信息。它包含了一个Model对象和一个View对象，Model对象用于存储Controller处理结果的数据，而View对象则用于指定返回给客户端的视图。</p><p>具体来说，ModelAndView类的主要作用如下：</p><ol><li>封装Controller处理结果的数据：Controller处理请求后，会将处理结果的数据存储到ModelAndView的Model对象中。这些数据可以是任何类型的Java对象，包括基本数据类型、集合、自定义对象等。</li><li>指定返回给客户端的视图：Controller处理完请求后，需要将处理结果返回给客户端。View对象就是用于指定返回给客户端的视图。SpringMVC支持多种视图类型，包括JSP视图、FreeMarker视图、Velocity视图等。</li></ol><p>使用ModelAndView类非常简单，只需要在Controller方法中创建一个ModelAndView对象，并设置Model和View即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@RequestMapping(&quot;/test/modelandview&quot;)</span><br> <span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">testmav</span><span class="hljs-params">()</span>&#123;<br>     <span class="hljs-type">ModelAndView</span> <span class="hljs-variable">mav</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>     <span class="hljs-comment">/**</span><br><span class="hljs-comment">      * ModelAndView包含Model和View的功能</span><br><span class="hljs-comment">      *      Model:向请求域中共享数据</span><br><span class="hljs-comment">      *      View：设置逻辑视图实现页面跳转</span><br><span class="hljs-comment">      */</span><br>     mav.addObject(<span class="hljs-string">&quot;testRequestScope&quot;</span>,<span class="hljs-string">&quot;hello ModelAndView!!!&quot;</span>); <span class="hljs-comment">// 向请求域中共享数据</span><br>     mav.setViewName(<span class="hljs-string">&quot;success&quot;</span>);  <span class="hljs-comment">//设置逻辑视图实现页面跳转</span><br>     <span class="hljs-keyword">return</span> mav;<br> &#125;<br></code></pre></td></tr></table></figure></blockquote><h5 id="1-3、使用Model往request域对象共享数据"><a href="#1-3、使用Model往request域对象共享数据" class="headerlink" title="1.3、使用Model往request域对象共享数据"></a>1.3、使用Model往request域对象共享数据</h5><blockquote><p>在SpringMVC中，可以使用Model对象向request域对象中共享数据。Model是一个接口，它定义了向request域对象中添加属性的方法。</p><p>在Controller方法中，可以通过方法参数中的Model对象来向request域中共享数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@RequestMapping(&quot;/test/model&quot;)</span><br>&gt;<span class="hljs-keyword">public</span> String <span class="hljs-title function_">testModel</span><span class="hljs-params">(Model model)</span> &#123;<br>&gt;model.addAttribute(<span class="hljs-string">&quot;testRequestScope&quot;</span>, <span class="hljs-string">&quot;hello model!!!&quot;</span>);<br>&gt;<span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&gt;&#125;<br></code></pre></td></tr></table></figure></blockquote><h5 id="1-4、使用ModelMap往request域共享数据"><a href="#1-4、使用ModelMap往request域共享数据" class="headerlink" title="1.4、使用ModelMap往request域共享数据"></a>1.4、使用ModelMap往request域共享数据</h5><blockquote><p>在SpringMVC中，可以使用ModelMap对象向request域中共享数据。ModelMap是一个实现了Map接口的类，它提供了向request域中添加属性的方法。</p><p>在Controller方法中，可以通过方法参数中的ModelMap对象来向request域中共享数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@RequestMapping(&quot;/test/modelmap&quot;)</span><br>&gt;<span class="hljs-keyword">public</span> String <span class="hljs-title function_">testModel</span><span class="hljs-params">(ModelMap modelMap)</span> &#123;<br>&gt;modelMap.addAttribute(<span class="hljs-string">&quot;testRequestScope&quot;</span>, <span class="hljs-string">&quot;hello modelMap!!!&quot;</span>);<br>&gt;<span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&gt;&#125;<br></code></pre></td></tr></table></figure></blockquote><h5 id="1-5、使用Map往request域共享数据"><a href="#1-5、使用Map往request域共享数据" class="headerlink" title="1.5、使用Map往request域共享数据"></a>1.5、使用Map往request域共享数据</h5><blockquote><p>在SpringMVC中，可以使用Map对象向request域中共享数据。Map是一个接口，它定义了向Map中添加属性的方法。</p><p>在Controller方法中，可以通过方法参数中的Map对象来向request域中共享数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@RequestMapping(&quot;/test/map&quot;)</span><br>&gt;<span class="hljs-keyword">public</span> String <span class="hljs-title function_">testModel</span><span class="hljs-params">(Map&lt;String,Object&gt; map)</span> &#123;<br>&gt;map.put(<span class="hljs-string">&quot;testRequestScope&quot;</span>,<span class="hljs-string">&quot;hello map!!!&quot;</span>);<br>&gt;<span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&gt;&#125;<br></code></pre></td></tr></table></figure></blockquote><h5 id="1-6、Model、ModelMap、Map作为参数的关系"><a href="#1-6、Model、ModelMap、Map作为参数的关系" class="headerlink" title="1.6、Model、ModelMap、Map作为参数的关系"></a>1.6、Model、ModelMap、Map作为参数的关系</h5><blockquote><p>Model、ModelMap、Map类型的参数其实本质上都是 BindingAwareModelMap 类型的</p></blockquote><h4 id="2、向session域中共享数据"><a href="#2、向session域中共享数据" class="headerlink" title="2、向session域中共享数据"></a>2、向session域中共享数据</h4><blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@RequestMapping(&quot;/test/session&quot;)</span><br>&gt;<span class="hljs-keyword">public</span> String <span class="hljs-title function_">testSession</span><span class="hljs-params">(HttpSession session)</span>&#123;<br>&gt;session.setAttribute(<span class="hljs-string">&quot;testSessionScope&quot;</span>,<span class="hljs-string">&quot;hello session!!!&quot;</span>);<br>&gt;<span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&gt;&#125;<br></code></pre></td></tr></table></figure></blockquote><h4 id="3、向application域中共享数据"><a href="#3、向application域中共享数据" class="headerlink" title="3、向application域中共享数据"></a>3、向application域中共享数据</h4><blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@RequestMapping(&quot;/test/application&quot;)</span><br>&gt;<span class="hljs-keyword">public</span> String <span class="hljs-title function_">testApplication</span><span class="hljs-params">(HttpSession session)</span>&#123;<br>&gt;<span class="hljs-type">ServletContext</span> <span class="hljs-variable">servletContext</span> <span class="hljs-operator">=</span> session.getServletContext();<br>&gt;servletContext.setAttribute(<span class="hljs-string">&quot;testApplicationScope&quot;</span>,<span class="hljs-string">&quot;hello application!!!&quot;</span>);<br>&gt;<span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&gt;&#125;<br></code></pre></td></tr></table></figure></blockquote><h3 id="6、SpringMVC的视图"><a href="#6、SpringMVC的视图" class="headerlink" title="6、SpringMVC的视图"></a>6、SpringMVC的视图</h3><p>SpringMVC中的视图是View接口，视图的作用渲染数据，将模型Model中的数据展示给用户</p><p>SpringMVC视图的种类很多，默认有转发视图和重定向视图</p><ul><li>当工程引入jstl的依赖，转发视图会自动转换为JstlView</li><li>若使用的视图技术为Thymeleaf，在SpringMVC的配置文件中配置了Thymeleaf的视图解析器，由此视图解析器解析之后所得到的是ThymeleafView</li></ul><h4 id="6-1、ThymeleafView"><a href="#6-1、ThymeleafView" class="headerlink" title="6.1、ThymeleafView"></a>6.1、ThymeleafView</h4><p>当控制器方法中所设置的视图名称没有任何前缀时，此时的视图名称会被SpringMVC配置文件中所配置的视图解析器解析，视图名称拼接视图前缀和视图后缀所得到的最终路径，会通过转发的方式实现跳转</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/test/view/thymeleaf&quot;)</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">testThymeleaf</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="6-2、转发视图"><a href="#6-2、转发视图" class="headerlink" title="6.2、转发视图"></a>6.2、转发视图</h4><p>SpringMVC中默认的转发视图是InternalResourceView</p><p>SpringMVC中创建转发视图的情况：</p><p>当控制器方法中所设置的视图名称以”forward:”为前缀时，创建InternalResourceView视图，此时的视图名称不会被SpringMVC配置文件中所配置的视图解析器解析，而是会将前缀”forward:”去掉，剩余部分作为最终路径通过转发的方式实现跳转</p><p>例如”forward:&#x2F;“，”forward:&#x2F;employee”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/test/view/forward&quot;)</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">testInternalResourceView</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;forward:/test/model&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="6-3、重定向视图"><a href="#6-3、重定向视图" class="headerlink" title="6.3、重定向视图"></a>6.3、重定向视图</h4><p>SpringMVC中默认的重定向视图是RedirectView</p><p>当控制器方法中所设置的视图名称以”redirect:”为前缀时，创建RedirectView视图，此时的视图名称不会被SpringMVC配置文件中所配置的视图解析器解析，而是会将前缀”redirect:”去掉，剩余部分作为最终路径通过重定向的方式实现跳转</p><p>例如”redirect:&#x2F;“，”redirect:&#x2F;employee”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/test/view/redirect&quot;)</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">testRedirectView</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;redirect:/test/model&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="6-4、视图控制器view-controller"><a href="#6-4、视图控制器view-controller" class="headerlink" title="6.4、视图控制器view-controller"></a>6.4、视图控制器view-controller</h4><p>当控制器方法中，仅仅用来实现页面跳转，即只需要设置视图名称时，可以将处理器方法使用view-controller标签进行表示</p><p>在SpringMVC的核心配置文件中,配置<code>&lt;mvc:view-controller&gt;</code>标签，其中path属性代表映射路径，view-name属性代表需要跳转的逻辑视图名称</p><p>但是当SpringMVC中设置任何一个view-controller时，其他控制器中的请求映射将全部失效，此时需要在SpringMVC的核心配置文件中设置开启mvc注解驱动的标签：<code>&lt;mvc:annotation-driven /&gt;</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--视图控制器，为当前的请求：/ 直接设置视图名称：index，实现页面跳转--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mvc:view-controller</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-attr">view-name</span>=<span class="hljs-string">&quot;index&quot;</span> /&gt;</span><br><br><span class="hljs-comment">&lt;!--如果使用了view-controller，其他控制器的映射都会失效，此时需要设置：mvc:annotation-driven，代表开启mvc的注解驱动 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mvc:annotation-driven</span> /&gt;</span><br></code></pre></td></tr></table></figure><h3 id="7、RESTful"><a href="#7、RESTful" class="headerlink" title="7、RESTful"></a>7、RESTful</h3><h4 id="7-1、RESTful简介"><a href="#7-1、RESTful简介" class="headerlink" title="7.1、RESTful简介"></a>7.1、RESTful简介</h4><p>REST：<strong>Re</strong>presentational <strong>S</strong>tate <strong>T</strong>ransfer，表现层资源状态转移。</p><blockquote><p>RESTful是一种架构风格，用于设计分布式系统。它是Representational State Transfer的缩写，翻译为“表现层状态转移”，是一种基于HTTP协议设计Web API的方法。RESTful是一种轻量级的、灵活的、可扩展的架构风格，它将资源和操作都映射为URI和HTTP方法，使得系统具有良好的可读性、可维护性和可扩展性。</p><p>RESTful架构风格的核心思想是将资源作为基本的概念，每个资源都可以通过URI来唯一标识。资源可以是任何类型的数据，比如用户、订单、商品等。RESTful API通过HTTP方法来对资源进行操作，常用的HTTP方法包括GET、POST、PUT、DELETE等。HTTP方法与资源的操作关系如下：</p><ul><li>GET：用于获取资源的信息。</li><li>POST：用于创建资源。</li><li>PUT：用于更新资源。</li><li>DELETE：用于删除资源。</li></ul><p>在RESTful架构中，资源的状态是通过HTTP状态码来表示的，常用的状态码包括200 OK、201 Created、204 No Content、400 Bad Request、401 Unauthorized、404 Not Found、500 Internal Server Error等。</p><p>RESTful API的设计需要遵循一些规范和约定，比如使用名词来表示资源、使用HTTP方法来表示操作、使用URI来唯一标识资源、使用HTTP状态码来表示资源状态等。这些规范和约定可以使得RESTful API具有良好的可读性、可维护性和可扩展性，同时也使得RESTful API易于使用和理解。</p></blockquote><h4 id="7-2、RESTful的实现"><a href="#7-2、RESTful的实现" class="headerlink" title="7.2、RESTful的实现"></a>7.2、RESTful的实现</h4><blockquote><p>具体说，就是 HTTP 协议里面，四个表示操作方式的动词：GET、POST、PUT、DELETE。</p><p>它们分别对应四种基本操作：GET 用来获取资源，POST 用来新建资源，PUT 用来更新资源，DELETE</p><p>用来删除资源。</p><p>REST 风格提倡 URL 地址使用统一的风格设计，从前到后各个单词使用斜杠分开，不使用问号键值对方式携带请求参数，而是将要发送给服务器的数据作为 URL 地址的一部分，以保证整体风格的一致性。</p><table><thead><tr><th><strong>操作</strong></th><th><strong>传统方式</strong></th><th><strong>REST风格</strong></th></tr></thead><tbody><tr><td>查询操作</td><td>getUserById?id&#x3D;1</td><td>user&#x2F;1–&gt;get请求方式</td></tr><tr><td>保存操作</td><td>saveUser</td><td>user–&gt;post请求方式</td></tr><tr><td>删除操作</td><td>deleteUser?id&#x3D;1</td><td>user&#x2F;1–&gt;delete请求方式</td></tr><tr><td>更新操作</td><td>updateUser</td><td>user–&gt;put请求方式</td></tr></tbody></table></blockquote><h4 id="7-3、HiddenHttpMethodFilter"><a href="#7-3、HiddenHttpMethodFilter" class="headerlink" title="7.3、HiddenHttpMethodFilter"></a>7.3、HiddenHttpMethodFilter</h4><p>HiddenHttpMethodFilter是Spring框架提供的一个过滤器，用于将HTTP请求中的“伪造”HTTP方法转换为真正的HTTP方法。HTTP协议中，除了GET和POST请求之外，还有DELETE、PUT、PATCH等HTTP方法，但是在HTML中，表单只支持GET和POST请求。为了实现其他HTTP方法的请求，可以使用HiddenHttpMethodFilter将“伪造”的HTTP方法转换为真正的HTTP方法。</p><p>使用HiddenHttpMethodFilter需要以下步骤：</p><ol><li><p>在web.xml文件中配置HiddenHttpMethodFilter：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>hiddenHttpMethodFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>hiddenHttpMethodFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>在HTML的form表单中使用POST请求，并添加一个name为“_method”的隐藏字段，该字段的value值为真正的HTTP方法，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!--put请求--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">th:action</span>=<span class="hljs-string">&quot;@&#123;/user&#125;&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--添加一个name为“_method”的隐藏字段，该字段的value值为真正的HTTP方法--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;_method&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;PUT&quot;</span>&gt;</span>  <br>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;修改用户信息&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在上述示例中，使用POST请求提交表单，但是添加了一个名为“_method”的隐藏字段，该字段的值为“put”，表示要发送一个put请求。</p></li><li><p>在控制器中使用@DeleteMapping、@PutMapping等注解处理DELETE、PUT等HTTP方法的请求，例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PutMapping(&quot;/user&quot;)</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">updateUser</span><span class="hljs-params">()</span>&#123;<br>    System.out.println(<span class="hljs-string">&quot;修改用户信息&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><p>使用HiddenHttpMethodFilter将“伪造”的HTTP方法转换为真正的HTTP方法，使得可以使用HTML表单发送PUT、DELETE请求。</p><h3 id="8、配置默认的Servlet处理静态资源"><a href="#8、配置默认的Servlet处理静态资源" class="headerlink" title="8、配置默认的Servlet处理静态资源"></a>8、配置默认的Servlet处理静态资源</h3><blockquote><p><code>&lt;mvc:default-servlet-handler /&gt;</code>是Spring MVC的配置之一，它的作用是将请求转发给Servlet容器中默认的Servlet，通常是用来处理静态资源的。例如，当你在浏览器中访问一个静态资源，例如图片、CSS或JavaScript文件时，这些请求会被默认的Servlet处理。配置<code>&lt;mvc:default-servlet-handler /&gt;</code>可以确保这些请求能够正确地被处理。</p><p>当前工程的web.xml配置的前端控制器DispatcherServlet的url-pattern是 &#x2F; ； tomcat的web.xml配置的DefaultServlet的url-pattern也是 &#x2F; 。此时浏览器发送的请求会优先被DispatcherServlet进行处理，但是DispatcherServlet无法处理静态资源。</p><ul><li>如果配置了<code>&lt;mvc:default-servlet-handler /&gt;</code>,此时浏览器发送的所有请求都会被DefaultServlet处理。</li><li>如果同时配置<code>&lt;mvc:default-servlet-handler /&gt;</code> 和<code>&lt;mvc:annotation-driven /&gt;</code>,浏览器发送的请求会先被DispatcherServlet处理，如果DispatcherServlet无法处理，DefaultServlet会处理</li></ul><p>在SpringMVC的核心配置文件中配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml">   <span class="hljs-comment">&lt;!--配置默认的Servlet处理静态资源--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">mvc:default-servlet-handler</span> /&gt;</span><br><br><span class="hljs-comment">&lt;!--配置mvc的注解驱动--&gt;</span><br>   <span class="hljs-tag">&lt;<span class="hljs-name">mvc:annotation-driven</span>/&gt;</span><br></code></pre></td></tr></table></figure></blockquote><h3 id="9、SpringMVC处理JSON格式的数据"><a href="#9、SpringMVC处理JSON格式的数据" class="headerlink" title="9、SpringMVC处理JSON格式的数据"></a>9、SpringMVC处理JSON格式的数据</h3><h4 id="1、-RequestBody注解"><a href="#1、-RequestBody注解" class="headerlink" title="1、@RequestBody注解"></a>1、<code>@RequestBody</code>注解</h4><blockquote><p><code>@RequestBody</code>是Spring框架中的一个注解，用于将HTTP请求体中的数据绑定到方法的参数上。通常情况下，<code>@RequestBody</code>注解用于处理POST请求中的JSON格式数据。</p><p>使用<code>@RequestBody</code>或者<code>@ResponseBody</code>获取json格式的请求参数的条件：</p><p>1、导入jackson的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml">&gt;<span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jackson-databind<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.12.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>2、SpringMVC的配置文件中设置开启mvc的注解驱动</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml">&gt;<span class="hljs-comment">&lt;!--开启mvc的注解驱动--&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">mvc:annotation-driven</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>3、在控制器方法的形参位置，设置json格式的请求参数要转换成的java类型（实体类或map）的参数，并使用<code>@RequestBody</code>注解标识。（如果有相对于的实体类就用实体类接收；如果没有，就用Map）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-comment">//将json格式的数据转换为实体类对象</span><br>&gt;<span class="hljs-meta">@RequestMapping(&quot;/test/RequestBody/json&quot;)</span><br>&gt;<span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">testRequestBody</span><span class="hljs-params">(<span class="hljs-meta">@RequestBody</span> User user, HttpServletResponseresponse)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>&gt;System.out.println(user); <span class="hljs-comment">//User&#123;id=null, username=&#x27;admin&#x27;, password=&#x27;123456&#x27;, age=null,gender=&#x27;null&#x27;&#125;</span><br>response.getWriter().print(<span class="hljs-string">&quot;hello,RequestBody&quot;</span>);<br>&gt;&#125;<br></code></pre></td></tr></table></figure><p>需要注意的是，在使用<code>@RequestBody</code>注解时，需要确保HTTP请求的Content-Type为”application&#x2F;json”，否则可能会导致数据转换失败。另外，如果请求体中的JSON格式数据与Java对象不匹配，则会抛出异常。</p></blockquote><h4 id="2、-ResponseBody注解"><a href="#2、-ResponseBody注解" class="headerlink" title="2、@ResponseBody注解"></a>2、<code>@ResponseBody</code>注解</h4><blockquote><p><code>@ResponseBody</code>注解是Spring MVC中的一个注解，用于将方法的返回值转换为指定的格式（如JSON、XML等）并输出到响应体中。</p><p>具体来说，当使用<code>@ResponseBody</code>注解时，Spring MVC会根据请求头中的Accept字段来判断客户端期望的响应格式，然后将方法的返回值转换为该格式并输出到响应体中。如果请求头中没有Accept字段，则默认使用JSON格式输出。</p><p>使用<code>@ResponseBody</code>注解的方法可以返回任意类型的数据，包括基本数据类型、集合、自定义对象等。Spring MVC会使用对应的转换器将返回值转换为指定的格式。</p><p>使用<code>@ResponseBody</code>注解的示例代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@RestController</span><br>&gt;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserController</span> &#123;<br>&gt;<span class="hljs-meta">@GetMapping(&quot;/users&quot;)</span><br>&gt;<span class="hljs-meta">@ResponseBody</span><br>&gt;<span class="hljs-keyword">public</span> List&lt;User&gt; <span class="hljs-title function_">getUsers</span><span class="hljs-params">()</span> &#123;<br>&gt;List&lt;User&gt; users = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;();<br>&gt;<span class="hljs-keyword">return</span> users;<br>&gt;&#125;<br>&gt;&#125;<br></code></pre></td></tr></table></figure><p>在上面的示例中，使用<code>@GetMapping</code>注解标记了一个GET请求的处理方法，并使用<code>@ResponseBody</code>注解将方法的返回值转换为JSON格式输出到响应体中。</p><p>需要注意的是，如果使用<code>@RestController</code>注解标记了一个类，则该类中的所有方法都默认使用<code>@ResponseBody</code>注解。</p></blockquote><h4 id="3、-RestController注解"><a href="#3、-RestController注解" class="headerlink" title="3、@RestController注解"></a>3、<code>@RestController</code>注解</h4><blockquote><p><code>@RestController</code>注解是<code>@Controller</code>和<code>@ResponseBody</code>注解的合并体，它的作用相当于同时使用<code>@Controller</code>和<code>@ResponseBody</code>注解。使用<code>@RestController</code>注解的类可以直接返回数据，而无需通过视图解析器进行视图渲染。</p><p>在<code>@RestController</code>类中，所有方法都默认使用<code>@ResponseBody</code>注解，因此方法的返回值会被转换为指定的格式（如JSON、XML等）并输出到响应体中。此外，@RestController还会自动将方法的返回值封装成ResponseEntity对象，其中包含了响应状态码、响应头信息以及响应体内容等信息。</p></blockquote><h3 id="10、文件上传和下载"><a href="#10、文件上传和下载" class="headerlink" title="10、文件上传和下载"></a>10、文件上传和下载</h3><p>Spring MVC可以通过MultipartFile实现文件的上传，并通过ResponseEntity实现文件的下载。</p><h4 id="1、文件下载"><a href="#1、文件下载" class="headerlink" title="1、文件下载"></a>1、文件下载</h4><blockquote><p>ResponseEntity是Spring MVC中的一个类，用于封装HTTP响应信息，包括响应状态码、响应头信息以及响应体内容等信息。</p><p>使用ResponseEntity可以更加灵活地控制HTTP响应，可以自定义响应状态码、响应头信息以及响应体内容等信息。此外，ResponseEntity还可以用于返回任意类型的数据，包括基本数据类型、集合、自定义对象等。</p><p>使用ResponseEntity的示例代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java">&gt;<span class="hljs-meta">@RestController</span><br>&gt;<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserController</span> &#123;<br>&gt;<span class="hljs-meta">@GetMapping(&quot;/users/&#123;id&#125;&quot;)</span><br>&gt;<span class="hljs-keyword">public</span> ResponseEntity&lt;User&gt; <span class="hljs-title function_">getUser</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> Long id)</span> &#123;<br>&gt;<span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> userService.getUserById(id);<br>&gt;<span class="hljs-keyword">if</span> (user != <span class="hljs-literal">null</span>) &#123;<br> <span class="hljs-keyword">return</span> ResponseEntity.ok(user);<br>&gt;&#125; <span class="hljs-keyword">else</span> &#123;<br> <span class="hljs-keyword">return</span> ResponseEntity.notFound().build();<br>&gt;&#125;<br>&gt;&#125;<br>&gt;&#125;<br></code></pre></td></tr></table></figure><p>在上面的示例中，使用<code>@GetMapping</code>注解标记了一个GET请求的处理方法。该方法根据用户ID查询用户信息，并根据查询结果返回不同的响应结果。如果查询到用户信息，则返回包含用户信息的ResponseEntity对象，并使用ok()方法设置响应状态码为200；如果未查询到用户信息，则返回一个空的ResponseEntity对象，并使用notFound()方法设置响应状态码为404。</p><p>需要注意的是，使用ResponseEntity时需要指定泛型类型，用于指定响应体的类型。此外，ResponseEntity的构造方法和静态工厂方法提供了多种重载形式，可以根据具体的需求进行调整。</p></blockquote><p>文件下载的示例代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RequestMapping(&quot;/test/down&quot;)</span><br><span class="hljs-keyword">public</span> ResponseEntity&lt;<span class="hljs-type">byte</span>[]&gt; testResponseEntity(HttpSession session) <span class="hljs-keyword">throws</span> IOException &#123;<br>    <span class="hljs-comment">//获取ServletContext对象</span><br>    <span class="hljs-type">ServletContext</span> <span class="hljs-variable">servletContext</span> <span class="hljs-operator">=</span> session.getServletContext();<br>    <span class="hljs-comment">//获取服务器中文件的真实路径</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">realPath</span> <span class="hljs-operator">=</span> servletContext.getRealPath(<span class="hljs-string">&quot;\\img\\1.jpg&quot;</span>);<br>    <span class="hljs-comment">//创建输入流</span><br>    <span class="hljs-type">InputStream</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(realPath);<br>    <span class="hljs-comment">//创建字节数组</span><br>    <span class="hljs-type">byte</span>[] bytes = <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[is.available()];<br>    <span class="hljs-comment">//将流读到字节数组中</span><br>    is.read(bytes);<br>    <span class="hljs-comment">//创建HttpHeaders对象设置响应头信息</span><br>    MultiValueMap&lt;String, String&gt; headers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HttpHeaders</span>();<br>    <span class="hljs-comment">//设置要下载方式以及下载文件的名字</span><br>    headers.add(<span class="hljs-string">&quot;Content-Disposition&quot;</span>, <span class="hljs-string">&quot;attachment;filename=1.jpg&quot;</span>);<br>    <span class="hljs-comment">//设置响应状态码</span><br>    <span class="hljs-type">HttpStatus</span> <span class="hljs-variable">statusCode</span> <span class="hljs-operator">=</span> HttpStatus.OK;<br>    <span class="hljs-comment">//创建ResponseEntity对象</span><br>    ResponseEntity&lt;<span class="hljs-type">byte</span>[]&gt; responseEntity = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ResponseEntity</span>&lt;<span class="hljs-type">byte</span>[]&gt;(bytes, headers,statusCode);<br>    <span class="hljs-comment">//关闭输入流</span><br>    is.close();<br>    <span class="hljs-keyword">return</span> responseEntity;<br>&#125;<br></code></pre></td></tr></table></figure><p>在上述代码中，使用FileInputStream读取指定位置的文件，并将该文件的内容封装到byte数组中。然后，创建一个ResponseEntity对象，并将该byte数组作为响应体返回。在创建ResponseEntity对象时，使用HttpHeaders设置响应头信息，其中包括Content-Disposition，用于指定文件名。最后，返回ResponseEntity对象即可实现文件下载。</p><h4 id="2、文件上传"><a href="#2、文件上传" class="headerlink" title="2、文件上传"></a>2、文件上传</h4><blockquote><p>MultipartFile是Spring框架提供的一个接口，用于表示HTTP请求中的文件。在SpringMVC中，可以使用MultipartFile来接收客户端上传的文件。MultipartFile接口提供了一些常用的方法，如获取文件名、获取文件大小、获取文件类型、获取文件输入流等。通过MultipartFile，开发者可以方便地处理文件上传相关的业务逻辑。在Spring Boot中，MultipartFile也可以用于处理文件上传。</p></blockquote><h5 id="2-1、添加依赖"><a href="#2-1、添加依赖" class="headerlink" title="2.1、添加依赖"></a>2.1、添加依赖</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-fileupload<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-fileupload<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="2-2、在SpringMVC的配置文件中添加配置："><a href="#2-2、在SpringMVC的配置文件中添加配置：" class="headerlink" title="2.2、在SpringMVC的配置文件中添加配置："></a>2.2、在SpringMVC的配置文件中添加配置：</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;multipartResolver&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><h5 id="2-3、在controller中编写接口"><a href="#2-3、在controller中编写接口" class="headerlink" title="2.3、在controller中编写接口"></a>2.3、在controller中编写接口</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/test/up&quot;)</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">testUp</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam(&quot;photo&quot;)</span> MultipartFile file, HttpSession session)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>    <span class="hljs-comment">//获取上传的文件的文件名</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> file.getOriginalFilename();<br>    <span class="hljs-comment">//处理文件重名问题</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">hzName</span> <span class="hljs-operator">=</span> fileName.substring(fileName.lastIndexOf(<span class="hljs-string">&quot;.&quot;</span>));<br>    fileName = UUID.randomUUID().toString() + hzName;<br>    <span class="hljs-comment">//获取服务器中photo目录的路径</span><br>    <span class="hljs-type">ServletContext</span> <span class="hljs-variable">servletContext</span> <span class="hljs-operator">=</span> session.getServletContext();<br>    <span class="hljs-type">String</span> <span class="hljs-variable">photoPath</span> <span class="hljs-operator">=</span> servletContext.getRealPath(<span class="hljs-string">&quot;photo&quot;</span>);<br>    <span class="hljs-type">File</span> <span class="hljs-variable">file1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(photoPath);<br>    <span class="hljs-keyword">if</span>(!file1.exists())&#123;<br>        file1.mkdir();<br>    &#125;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">finalPath</span> <span class="hljs-operator">=</span> photoPath + File.separator + fileName;<br>    <span class="hljs-comment">//实现上传功能</span><br>    file.transferTo(<span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(finalPath));<br>    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;success&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="11、拦截器"><a href="#11、拦截器" class="headerlink" title="11、拦截器"></a>11、拦截器</h3><h4 id="11-1、拦截器的配置"><a href="#11-1、拦截器的配置" class="headerlink" title="11.1、拦截器的配置"></a>11.1、拦截器的配置</h4><p>在SpringMVC中，我们可以通过配置拦截器（Interceptor）来对请求进行预处理和后处理，比如身份认证、日志记录、性能监控等。拦截器可以在请求到达Handler之前或者到达Handler之后对请求进行拦截和处理，可以对请求进行修改、重定向、转发等操作，还可以对响应进行修改、包装等操作。</p><p>下面是配置拦截器的步骤：</p><ol><li>创建一个拦截器类，实现HandlerInterceptor接口，并实现其中的preHandle、postHandle、afterCompletion方法。这些方法分别在请求到达Handler之前、Handler处理完毕之后、视图渲染完成之后被调用。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyInterceptor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">HandlerInterceptor</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">preHandle</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 在请求到达Handler之前执行（在控制器方法执行之前执行）</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>; <span class="hljs-comment">// 返回true表示不拦截，返回false表示拦截</span><br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">postHandle</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 在Handler处理完毕之后执行（在控制器方法执行之后执行）</span><br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">afterCompletion</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-comment">// 在视图渲染完成之后执行（在控制器方法执行之后，且渲染视图完成之后执行）</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="2"><li>在SpringMVC的配置文件中配置拦截器，并指定拦截的URL模式。</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml">    <span class="hljs-comment">&lt;!--配置拦截器--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mvc:interceptors</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--bean标签和ref标签所配置的拦截器默认对DispatcherServlet处理的所有请求进行拦截--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;bean class=&quot;org.example.springmvc.interceptor.FirstInterceptor&quot; /&gt;--&gt;</span><br><span class="hljs-comment">&lt;!--        &lt;ref bean=&quot;firstInterceptor&quot;/&gt;--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">mvc:interceptor</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">mvc:mapping</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/**&quot;</span>/&gt;</span>  <span class="hljs-comment">&lt;!--拦截哪些路径   /* 代表拦截/后面的一层路径；/** 代表拦截所有--&gt;</span><br><span class="hljs-comment">&lt;!--            &lt;mvc:exclude-mapping path=&quot;&quot;/&gt;   不拦截某些路径--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">ref</span> <span class="hljs-attr">bean</span>=<span class="hljs-string">&quot;firstInterceptor&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">mvc:interceptor</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">mvc:interceptors</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在上述配置中，使用<code>&lt;mvc:interceptors&gt;</code>标签来配置拦截器，使用<code>&lt;mvc:interceptor&gt;</code>标签来指定拦截的URL模式和拦截器类。其中，<code>&lt;mvc:mapping&gt;</code>标签用于指定URL模式，可以使用通配符（如&#x2F;**）来匹配多个URL。<bean>标签用于指定拦截器类。</p><p>注意：SpringMVC的拦截器只能拦截请求到达Handler之前和Handler处理完毕之后的操作，对于视图渲染过程中的操作无法拦截。如果需要在视图渲染过程中进行拦截和处理，可以使用过滤器（Filter）来实现。</p><h4 id="11-2、多个拦截器的执行顺序"><a href="#11-2、多个拦截器的执行顺序" class="headerlink" title="11.2、多个拦截器的执行顺序"></a>11.2、多个拦截器的执行顺序</h4><blockquote><ul><li>① 若每个拦截器的preHandle()都返回true</li><li>此时多个拦截器的执行顺序和拦截器<strong>在SpringMVC的配置文件的配置顺序</strong>有关：</li><li>preHandle()会按照配置的顺序执行，而postHandle()和afterCompletion()会按照配置的反序执行</li><li>② 若某个拦截器的preHandle()返回了false</li><li>preHandle()返回false和它之前的拦截器的preHandle()都会执行，postHandle()都不执行，返回false的拦截器之前的拦截器的afterCompletion()会执行</li><li>如果在拦截器中有返回false的情况，那么后续的拦截器和请求处理方法都不会被执行。因此，在配置多个拦截器时，需要确保拦截器的执行顺序和处理逻辑正确，以避免出现不必要的问题。</li></ul></blockquote><h3 id="12、异常处理器"><a href="#12、异常处理器" class="headerlink" title="12、异常处理器"></a>12、异常处理器</h3><h4 id="12-1、基于xml配置的异常处理"><a href="#12-1、基于xml配置的异常处理" class="headerlink" title="12.1、基于xml配置的异常处理"></a>12.1、基于xml配置的异常处理</h4><blockquote><p>SpringMVC提供了一个处理控制器方法执行过程中所出现的异常的接口：HandlerExceptionResolver</p><p>HandlerExceptionResolver接口的实现类有：DefaultHandlerExceptionResolver和SimpleMappingExceptionResolver</p><p>SpringMVC提供了自定义的异常处理器SimpleMappingExceptionResolver，使用方式：在SpringMVC的核心配置文件中：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs xml">&gt;<span class="hljs-comment">&lt;!--配置异常解析器--&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.web.servlet.handler.SimpleMappingExceptionResolver&quot;</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;exceptionMappings&quot;</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">props</span>&gt;</span><br>     <span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">         properties的键表示处理器方法执行过程中出现的异常</span><br><span class="hljs-comment">         properties的值表示若出现指定异常时，设置一个新的视图名称，跳转到指定页面</span><br><span class="hljs-comment">     --&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">prop</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;java.lang.ArithmeticException&quot;</span>&gt;</span>error<span class="hljs-tag">&lt;/<span class="hljs-name">prop</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">props</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>&gt;<span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment"> exceptionAttribute属性设置一个属性名，将出现的异常信息在请求域中进行共享</span><br><span class="hljs-comment">&gt;--&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;exceptionAttribute&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;ex&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br></code></pre></td></tr></table></figure></blockquote><h4 id="12-2、基于注解方式配置"><a href="#12-2、基于注解方式配置" class="headerlink" title="12.2、基于注解方式配置"></a>12.2、基于注解方式配置</h4><blockquote><p>在Spring MVC中，异常处理主要是通过<code>@ControllerAdvice</code>注解来实现的。<code>@ControllerAdvice</code>注解标注的类可以用于处理所有Controller中抛出的异常，包括系统异常、业务异常和参数校验异常等。</p><p>具体步骤如下：</p><ol><li>创建一个异常处理类，使用<code>@ControllerAdvice</code>注解标注该类，同时使用<code>@ExceptionHandler</code>注解来处理具体的异常。</li></ol><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@ControllerAdvice</span>  <span class="hljs-comment">//将当前类标识为异常处理的组件</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ExceptionController</span> &#123;<br><br>    <span class="hljs-meta">@ExceptionHandler(ArithmeticException.class)</span><br>    <span class="hljs-keyword">public</span> ModelAndView <span class="hljs-title function_">handleException</span><span class="hljs-params">(ArithmeticException e)</span>&#123;<br>        <span class="hljs-type">ModelAndView</span> <span class="hljs-variable">mv</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ModelAndView</span>();<br>        mv.addObject(<span class="hljs-string">&quot;ex&quot;</span>,e);<br>        mv.setViewName(<span class="hljs-string">&quot;error&quot;</span>);<br>        <span class="hljs-keyword">return</span> mv;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>上述代码中，使用<code>@ExceptionHandler</code>注解来处理所有的Exception异常，将异常信息放入ModelAndView对象中，并返回error视图。</p><ol start="2"><li>在Spring MVC配置文件中注册该异常处理类。</li></ol><p>例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml">&gt;<span class="hljs-tag">&lt;<span class="hljs-name">mvc:annotation-driven</span> /&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;com.example.controller&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>上述代码中，使用<code>&lt;mvc:annotation-driven /&gt;</code>标签启用注解驱动的Spring MVC，使用<code>&lt;context:component-scan /&gt;</code>标签扫描Controller包</p><p>通过以上步骤，就可以在Spring MVC应用中处理异常了。需要注意的是，异常处理类的优先级是按照声明的顺序来决定的，因此，如果有多个异常处理类，需要注意它们的顺序。另外，异常处理类也可以继承AbstractHandlerExceptionResolver类来实现异常处理。</p></blockquote><h3 id="13、注解配置SpringMVC"><a href="#13、注解配置SpringMVC" class="headerlink" title="13、注解配置SpringMVC"></a>13、注解配置SpringMVC</h3><p>使用配置类和注解代替web.xml和SpringMVC配置文件的功能</p><h4 id="13-1、创建初始化类，代替web-xml"><a href="#13-1、创建初始化类，代替web-xml" class="headerlink" title="13.1、创建初始化类，代替web.xml"></a>13.1、创建初始化类，代替web.xml</h4><p>在Servlet3.0环境中，容器会在类路径中查找实现javax.servlet.ServletContainerInitializer接口的类，如果找到的话就用它来配置Servlet容器。 Spring提供了这个接口的实现，名为SpringServletContainerInitializer，这个类反过来又会查找实现WebApplicationInitializer的类并将配置的任务交给它们来完成。Spring3.2引入了一个便利的WebApplicationInitializer基础实现，名为AbstractAnnotationConfigDispatcherServletInitializer，当我们的类扩展了<font color=#3271ae><strong>AbstractAnnotationConfigDispatcherServletInitializer</strong></font>并将其部署到Servlet3.0容器的时候，容器会自动发现它，并用它来配置Servlet上下文。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.springmvc.annotation.config;<br><br><span class="hljs-keyword">import</span> org.springframework.web.filter.CharacterEncodingFilter;<br><span class="hljs-keyword">import</span> org.springframework.web.filter.HiddenHttpMethodFilter;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;<br><br><span class="hljs-keyword">import</span> javax.servlet.Filter;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 用来代替web.xml</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WebInit</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractAnnotationConfigDispatcherServletInitializer</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 设置一个配置类，来代替Spring的配置文件</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> Class&lt;?&gt;[] getRootConfigClasses() &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;SpringConfig.class&#125;;  <span class="hljs-comment">// 将Spring的配置类放到这里</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 设置一个配置类，来代替SpringMVC的配置文件</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> Class&lt;?&gt;[] getServletConfigClasses() &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;WebConfig.class&#125;;  <span class="hljs-comment">// 将SpringMVC的配置类放到这里</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 设置SpringMVC的前端控制器DispatcherServlet的url-pattern</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> String[] getServletMappings() &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;/&quot;</span>&#125;;<br>    &#125;<br><br>    <span class="hljs-comment">//设置当前的过滤器</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> Filter[] getServletFilters() &#123;<br>        <span class="hljs-comment">//1、创建编码过滤器</span><br>        <span class="hljs-type">CharacterEncodingFilter</span> <span class="hljs-variable">characterEncodingFilter</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CharacterEncodingFilter</span>();<br>        characterEncodingFilter.setEncoding(<span class="hljs-string">&quot;utf-8&quot;</span>);<br>        characterEncodingFilter.setForceEncoding(<span class="hljs-literal">true</span>);<br><br>        <span class="hljs-comment">//2、创建处理请求方式的过滤器</span><br>        <span class="hljs-type">HiddenHttpMethodFilter</span> <span class="hljs-variable">hiddenHttpMethodFilter</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HiddenHttpMethodFilter</span>();<br><br>        <span class="hljs-comment">//将这俩过滤器放进来</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Filter</span>[]&#123;characterEncodingFilter,hiddenHttpMethodFilter&#125;;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="13-2、创建SpringConfig配置类，代替spring的配置文件"><a href="#13-2、创建SpringConfig配置类，代替spring的配置文件" class="headerlink" title="13.2、创建SpringConfig配置类，代替spring的配置文件"></a>13.2、创建SpringConfig配置类，代替spring的配置文件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.springmvc.annotation.config;<br><br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Spring的配置类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SpringConfig</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="13-3、创建WebConfig配置类，代替SpringMVC的配置文件"><a href="#13-3、创建WebConfig配置类，代替SpringMVC的配置文件" class="headerlink" title="13.3、创建WebConfig配置类，代替SpringMVC的配置文件"></a>13.3、创建WebConfig配置类，代替SpringMVC的配置文件</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.example.springmvc.annotation.config;<br><br><span class="hljs-keyword">import</span> org.example.springmvc.annotation.interceptor.FirstInterceptor;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.ComponentScan;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.web.context.ContextLoader;<br><span class="hljs-keyword">import</span> org.springframework.web.context.WebApplicationContext;<br><span class="hljs-keyword">import</span> org.springframework.web.multipart.commons.CommonsMultipartResolver;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.HandlerExceptionResolver;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.ViewResolver;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.config.annotation.*;<br><span class="hljs-keyword">import</span> org.springframework.web.servlet.handler.SimpleMappingExceptionResolver;<br><span class="hljs-keyword">import</span> org.thymeleaf.spring5.SpringTemplateEngine;<br><span class="hljs-keyword">import</span> org.thymeleaf.spring5.view.ThymeleafViewResolver;<br><span class="hljs-keyword">import</span> org.thymeleaf.templatemode.TemplateMode;<br><span class="hljs-keyword">import</span> org.thymeleaf.templateresolver.ITemplateResolver;<br><span class="hljs-keyword">import</span> org.thymeleaf.templateresolver.ServletContextTemplateResolver;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Properties;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 用来代替SpringMVC的核心配置文件</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@ComponentScan(&quot;org.example.springmvc.annotation.controller&quot;)</span>  <span class="hljs-comment">//扫描组件</span><br><span class="hljs-meta">@EnableWebMvc</span>  <span class="hljs-comment">// 开启MVC的注解驱动</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">WebConfig</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WebMvcConfigurer</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 配置默认的Servlet，来处理静态资源</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> configurer</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">configureDefaultServletHandling</span><span class="hljs-params">(DefaultServletHandlerConfigurer configurer)</span> &#123;<br>        configurer.enable();<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 配置视图控制器</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> registry</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addViewControllers</span><span class="hljs-params">(ViewControllerRegistry registry)</span> &#123;<br>        registry.addViewController(<span class="hljs-string">&quot;/&quot;</span>).setViewName(<span class="hljs-string">&quot;index&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 配置文件上传解析器</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> CommonsMultipartResolver <span class="hljs-title function_">multipartResolver</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CommonsMultipartResolver</span>();<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 配置拦截器</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> registry</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addInterceptors</span><span class="hljs-params">(InterceptorRegistry registry)</span> &#123;<br>        <span class="hljs-type">FirstInterceptor</span> <span class="hljs-variable">firstInterceptor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FirstInterceptor</span>();<br>        registry.addInterceptor(firstInterceptor)  <span class="hljs-comment">//添加哪个拦截器</span><br>                .addPathPatterns(<span class="hljs-string">&quot;/**&quot;</span>)  <span class="hljs-comment">//拦截哪些请求</span><br>                .excludePathPatterns();  <span class="hljs-comment">//不拦截哪些请求</span><br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 配置异常解析器</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> resolvers</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">configureHandlerExceptionResolvers</span><span class="hljs-params">(List&lt;HandlerExceptionResolver&gt; resolvers)</span> &#123;<br>        <span class="hljs-type">SimpleMappingExceptionResolver</span> <span class="hljs-variable">exceptionResolver</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleMappingExceptionResolver</span>();<br>        <span class="hljs-type">Properties</span> <span class="hljs-variable">prop</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Properties</span>();<br>        prop.setProperty(<span class="hljs-string">&quot;java.lang.ArithmeticException&quot;</span>,<span class="hljs-string">&quot;error&quot;</span>);<br>        exceptionResolver.setExceptionMappings(prop);<br>        exceptionResolver.setExceptionAttribute(<span class="hljs-string">&quot;ex&quot;</span>);<br>        resolvers.add(exceptionResolver);<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 配置视图解析器</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-comment">//配置生成模板解析器</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> ITemplateResolver <span class="hljs-title function_">templateResolver</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">WebApplicationContext</span> <span class="hljs-variable">webApplicationContext</span> <span class="hljs-operator">=</span> ContextLoader.getCurrentWebApplicationContext();<br>        <span class="hljs-comment">// ServletContextTemplateResolver需要一个ServletContext作为构造参数，可通过WebApplicationContext 的方法获得</span><br>        <span class="hljs-type">ServletContextTemplateResolver</span> <span class="hljs-variable">templateResolver</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span><br>                <span class="hljs-title class_">ServletContextTemplateResolver</span>(webApplicationContext.getServletContext());<br>        templateResolver.setPrefix(<span class="hljs-string">&quot;/WEB-INF/templates/&quot;</span>);<br>        templateResolver.setSuffix(<span class="hljs-string">&quot;.html&quot;</span>);<br>        templateResolver.setCharacterEncoding(<span class="hljs-string">&quot;UTF-8&quot;</span>);<br>        templateResolver.setTemplateMode(TemplateMode.HTML);<br>        <span class="hljs-keyword">return</span> templateResolver;<br>    &#125;<br>    <span class="hljs-comment">//生成模板引擎并为模板引擎注入模板解析器</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> SpringTemplateEngine <span class="hljs-title function_">templateEngine</span><span class="hljs-params">(ITemplateResolver templateResolver)</span> &#123;<br>        <span class="hljs-type">SpringTemplateEngine</span> <span class="hljs-variable">templateEngine</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpringTemplateEngine</span>();<br>        templateEngine.setTemplateResolver(templateResolver);<br>        <span class="hljs-keyword">return</span> templateEngine;<br>    &#125;<br>    <span class="hljs-comment">//生成视图解析器并未解析器注入模板引擎</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> ViewResolver <span class="hljs-title function_">viewResolver</span><span class="hljs-params">(SpringTemplateEngine templateEngine)</span> &#123;<br>        <span class="hljs-type">ThymeleafViewResolver</span> <span class="hljs-variable">viewResolver</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThymeleafViewResolver</span>();<br>        viewResolver.setCharacterEncoding(<span class="hljs-string">&quot;UTF-8&quot;</span>);<br>        viewResolver.setTemplateEngine(templateEngine);<br>        <span class="hljs-keyword">return</span> viewResolver;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="14、SpringMVC的执行流程"><a href="#14、SpringMVC的执行流程" class="headerlink" title="14、SpringMVC的执行流程"></a>14、SpringMVC的执行流程</h3><h4 id="1、SpringMVC的常用组件"><a href="#1、SpringMVC的常用组件" class="headerlink" title="1、SpringMVC的常用组件"></a>1、SpringMVC的常用组件</h4><blockquote><ul><li><p>DispatcherServlet：<strong>前端控制器</strong>，不需要工程师开发，由框架提供</p></li><li><p>作用：统一处理请求和响应，整个流程控制的中心，由它调用其它组件处理用户的请求</p></li><li><p>HandlerMapping：<strong>处理器映射器</strong>，不需要工程师开发，由框架提供</p></li><li><p>作用：根据请求的url、method等信息查找Handler，即控制器方法</p></li><li><p>Handler：<strong>处理器</strong>，需要工程师开发,也就是Controller</p></li><li><p>作用：在DispatcherServlet的控制下Handler对具体的用户请求进行处理</p></li><li><p>HandlerAdapter：<strong>处理器适配器</strong>，不需要工程师开发，由框架提供</p></li><li><p>作用：通过HandlerAdapter对处理器（控制器方法）进行执行</p></li><li><p>ViewResolver：<strong>视图解析器</strong>，不需要工程师开发，由框架提供</p></li><li><p>作用：进行视图解析，得到相应的视图，例如：ThymeleafView、InternalResourceView、RedirectView</p></li><li><p>View：<strong>视图</strong></p></li><li><p>作用：将模型数据通过页面展示给用户</p></li></ul></blockquote><h4 id="2、SpringMVC的执行流程"><a href="#2、SpringMVC的执行流程" class="headerlink" title="2、SpringMVC的执行流程"></a>2、SpringMVC的执行流程</h4><blockquote><ol><li><p>用户向服务器发送请求，请求被SpringMVC 前端控制器 DispatcherServlet捕获。</p></li><li><p>DispatcherServlet对请求URL进行解析，得到请求资源标识符（URI），判断请求URI对应的映射：</p></li></ol><p>a) 不存在</p><p>i. 再判断是否配置了<code>&lt;mvc:default-servlet-handler /&gt;</code></p><p>ii. 如果没配置，则控制台报映射查找不到，客户端展示404错误</p><p>iii. 如果有配置，则访问目标资源（一般为静态资源，如：JS,CSS,HTML），找不到客户端也会展示404</p><p>b) 存在则执行下面的流程</p><ol start="3"><li><p>根据该URI，调用HandlerMapping获得该Handler配置的所有相关的对象（包括Handler对象以及Handler对象对应的拦截器），最后以HandlerExecutionChain执行链对象的形式返回。</p></li><li><p>DispatcherServlet 根据获得的Handler，选择一个合适的HandlerAdapter。</p></li><li><p>如果成功获得HandlerAdapter，此时将开始执行拦截器的preHandler(…)方法【正向】</p></li><li><p>提取Request中的模型数据，填充Handler入参，开始执行Handler（Controller)方法，处理请求。</p></li></ol><p>在填充Handler的入参过程中，根据你的配置，Spring将帮你做一些额外的工作：</p><p>a) HttpMessageConveter： 将请求消息（如Json、xml等数据）转换成一个对象，将对象转换为指定的响应信息</p><p>b) 数据转换：对请求消息进行数据转换。如String转换成Integer、Double等</p><p>c) 数据格式化：对请求消息进行数据格式化。 如将字符串转换成格式化数字或格式化日期等</p><p>d) 数据验证： 验证数据的有效性（长度、格式等），验证结果存储到BindingResult或Error中</p><ol start="7"><li><p>Handler执行完成后，向DispatcherServlet 返回一个ModelAndView对象。</p></li><li><p>此时将开始执行拦截器的postHandle(…)方法【逆向】。</p></li><li><p>根据返回的ModelAndView（此时会判断是否存在异常：如果存在异常，则执行HandlerExceptionResolver进行异常处理）选择一个适合的ViewResolver进行视图解析，根据Model和View，来渲染视图。</p></li><li><p>渲染视图完毕执行拦截器的afterCompletion(…)方法【逆向】。</p></li><li><p>将渲染结果返回给客户端。</p></li></ol></blockquote><h1 id="四、SSM整合"><a href="#四、SSM整合" class="headerlink" title="四、SSM整合"></a>四、SSM整合</h1><h3 id="1、ContextLoaderListener"><a href="#1、ContextLoaderListener" class="headerlink" title="1、ContextLoaderListener"></a>1、ContextLoaderListener</h3><blockquote><p>Spring提供了监听器ContextLoaderListener，实现ServletContextListener接口，可监听ServletContext的状态，在web服务器的启动，读取Spring的配置文件，创建Spring的IOC容器。web应用中必须在web.xml中配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml">&gt;<span class="hljs-comment">&lt;!--在服务器启动时，加载Spring的配置文件，获取Spring的IOC容器--&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">listener</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="hljs-tag">&lt;/<span class="hljs-name">listener-class</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">listener</span>&gt;</span><br><br>&gt;<span class="hljs-comment">&lt;!--设置Spring的配置文件的位置--&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">context-param</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>contextConfigLocation<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>classpath:spring.xml<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">context-param</span>&gt;</span><br></code></pre></td></tr></table></figure></blockquote><h3 id="2、整合SSM"><a href="#2、整合SSM" class="headerlink" title="2、整合SSM"></a>2、整合SSM</h3><h4 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤"></a>步骤</h4><h5 id="1-1、创建maven工程，在pom-xml中添加打包方式为war，引入依赖，刷新maven，右键项目-—-Open-Module-Settings"><a href="#1-1、创建maven工程，在pom-xml中添加打包方式为war，引入依赖，刷新maven，右键项目-—-Open-Module-Settings" class="headerlink" title="1.1、创建maven工程，在pom.xml中添加打包方式为war，引入依赖，刷新maven，右键项目 —&gt; Open Module Settings"></a>1.1、创建maven工程，在pom.xml中添加打包方式为war，引入依赖，刷新maven，右键项目 —&gt; Open Module Settings</h5><p><img src="/img/ssm_img/springmvc_%E9%85%8D%E7%BD%AE%E6%AD%A5%E9%AA%A41.jpg" alt="springmvc_配置步骤1"></p><p><img src="/img/ssm_img/springmvc_%E4%BF%AE%E6%94%B9webxml%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84.jpg" alt="springmvc_修改webxml文件路径"></p><p>修改完web.xml文件路径之后，就会自动创建webapp目录：</p><p><img src="/img/ssm_img/springmvc_%E4%BF%AE%E6%94%B9%E5%AE%8C%E6%88%90.jpg" alt="springmvc_修改完成"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">packaging</span>&gt;</span>war<span class="hljs-tag">&lt;/<span class="hljs-name">packaging</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">spring.version</span>&gt;</span>5.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">spring.version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-context<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-beans<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--springmvc--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-webmvc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-jdbc<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-aspects<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- Mybatis核心 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.7<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--mybatis和spring的整合包--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-spring<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.0.6<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 连接池 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>druid<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.0.9<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- junit测试 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>junit<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>4.12<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- MySQL驱动 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>8.0.16<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- log4j日志 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>log4j<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>log4j<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.17<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- https://mvnrepository.com/artifact/com.github.pagehelper/pagehelper --&gt;</span>   <br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.github.pagehelper<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>pagehelper<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.2.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 日志 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>ch.qos.logback<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>logback-classic<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- ServletAPI --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>javax.servlet<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javax.servlet-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.1.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>provided<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jackson-databind<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.12.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--文件上传--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-fileupload<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-fileupload<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- Spring5和Thymeleaf整合包 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.thymeleaf<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>thymeleaf-spring5<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.0.12.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span> <br></code></pre></td></tr></table></figure><h5 id="1-2、创建表-1"><a href="#1-2、创建表-1" class="headerlink" title="1.2、创建表"></a>1.2、创建表</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `t_emp` (<br>    `emp_id` <span class="hljs-type">int</span>(<span class="hljs-number">11</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT,<br>    `emp_name` <span class="hljs-type">varchar</span>(<span class="hljs-number">20</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>    `age` <span class="hljs-type">int</span>(<span class="hljs-number">11</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>    `sex` <span class="hljs-type">char</span>(<span class="hljs-number">1</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>    `email` <span class="hljs-type">varchar</span>(<span class="hljs-number">50</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>    <span class="hljs-keyword">PRIMARY</span> KEY (`emp_id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8<br></code></pre></td></tr></table></figure><h5 id="1-3、配置web-xml"><a href="#1-3、配置web-xml" class="headerlink" title="1.3、配置web.xml"></a>1.3、配置web.xml</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">web-app</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span><br><span class="hljs-tag">         <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;4.0&quot;</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--配置Spring的编码过滤器--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>characterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>encoding<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>utf-8<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>forceEncoding<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>characterEncodingFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--设置处理请求方式的过滤器--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>hiddenHttpMethodFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-class</span>&gt;</span>org.springframework.web.filter.HiddenHttpMethodFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">filter-mapping</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">filter-name</span>&gt;</span>hiddenHttpMethodFilter<span class="hljs-tag">&lt;/<span class="hljs-name">filter-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/*<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">filter-mapping</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--设置SpringMVC的前端控制器DispatcherServlet--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>springmvc<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">init-param</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>contextConfigLocation<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>classpath:springmvc.xml<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">init-param</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">load-on-startup</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">load-on-startup</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>springmvc<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br>    <br>    <span class="hljs-comment">&lt;!--配置Spring的监听器，作用是在服务器启动时加载Spring的配置文件，加载IOC容器--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">listener</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="hljs-tag">&lt;/<span class="hljs-name">listener-class</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">listener</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--设置Spring配置文件的自定义名称和路径--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context-param</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-name</span>&gt;</span>contextConfigLocation<span class="hljs-tag">&lt;/<span class="hljs-name">param-name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param-value</span>&gt;</span>classpath:spring.xml<span class="hljs-tag">&lt;/<span class="hljs-name">param-value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">context-param</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">web-app</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="1-4、配置SpringMVC的核心配置文件"><a href="#1-4、配置SpringMVC的核心配置文件" class="headerlink" title="1.4、配置SpringMVC的核心配置文件"></a>1.4、配置SpringMVC的核心配置文件</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:context</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:mvc</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">       http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">       http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置组件控制层扫描--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;org.example.ssm.controller&quot;</span>/&gt;</span><br><br>    <span class="hljs-comment">&lt;!-- 配置Thymeleaf视图解析器 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;viewResolver&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.view.ThymeleafViewResolver&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;order&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;1&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;characterEncoding&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateEngine&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.SpringTemplateEngine&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateResolver&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver&quot;</span>&gt;</span><br>                        <span class="hljs-comment">&lt;!-- 物理视图 = 视图前缀 + 逻辑视图 + 视图后缀 --&gt;</span><br>                        <span class="hljs-comment">&lt;!-- 视图前缀 --&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;prefix&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;/WEB-INF/templates/&quot;</span>/&gt;</span><br>                        <span class="hljs-comment">&lt;!-- 视图后缀 --&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;suffix&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;.html&quot;</span>/&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;templateMode&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;HTML5&quot;</span>/&gt;</span><br>                        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;characterEncoding&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>                    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>                <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置默认的Servlet，来处理静态资源--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mvc:default-servlet-handler</span> /&gt;</span><br><br>    <span class="hljs-comment">&lt;!--开启mvc的注解驱动--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mvc:annotation-driven</span> /&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置视图解析器--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">mvc:view-controller</span> <span class="hljs-attr">path</span>=<span class="hljs-string">&quot;/&quot;</span> <span class="hljs-attr">view-name</span>=<span class="hljs-string">&quot;index&quot;</span> /&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置文件上传解析器 id是固定名称--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;multipartResolver&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span> /&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置拦截器--&gt;</span><br>    <span class="hljs-comment">&lt;!--配置异常处理器--&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="1-5、配置Spring的核心配置文件"><a href="#1-5、配置Spring的核心配置文件" class="headerlink" title="1.5、配置Spring的核心配置文件"></a>1.5、配置Spring的核心配置文件</h5><p>在Spring的核心配置文件中既可以引入MyBatis的核心配置文件，又可以直接对MyBatis和事务进行配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">beans</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xmlns:context</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/context&quot;</span> <span class="hljs-attr">xmlns:tx</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/tx&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="hljs-string"><span class="hljs-tag">       http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--扫描组件(除控制层)--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context:component-scan</span> <span class="hljs-attr">base-package</span>=<span class="hljs-string">&quot;org.example.ssm&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">context:exclude-filter</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;annotation&quot;</span></span><br><span class="hljs-tag">                                <span class="hljs-attr">expression</span>=<span class="hljs-string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span> <span class="hljs-comment">&lt;!--通过注解来排除@Controller--&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">context:component-scan</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--引入jdbc.properties配置文件--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">context:property-placeholder</span> <span class="hljs-attr">location</span>=<span class="hljs-string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span><br><br>    <span class="hljs-comment">&lt;!--配置数据源--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;driverClassName&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;username&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;password&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <span class="hljs-comment">&lt;!--整合MyBatis--&gt;</span><br>    <span class="hljs-comment">&lt;!--1、配置SqlSessionFactoryBean，可以直接在Spring的IOC中获取SqlSessionFactory对象--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span><br>        <span class="hljs-comment">&lt;!--        &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;/&gt; // 设置MyBatis的核心配置文件路径  --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;dataSource&quot;</span>/&gt;</span> <span class="hljs-comment">&lt;!--为SqlSession配置数据源--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;typeAliasesPackage&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;org.example.ssm.pojo&quot;</span>/&gt;</span> <span class="hljs-comment">&lt;!--设置类型别名所对应的包--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mapperLocations&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;classpath:mappers/*.xml&quot;</span>/&gt;</span>  <span class="hljs-comment">&lt;!--设置映射文件的路径。如果Mapper接口的包和映射文件的包一致就不需要设置--&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;configuration&quot;</span>&gt;</span>  <span class="hljs-comment">&lt;!--设置下划线转驼峰--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.apache.ibatis.session.Configuration&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;mapUnderscoreToCamelCase&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;plugins&quot;</span>&gt;</span>   <span class="hljs-comment">&lt;!--配置分页插件--&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">array</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;com.github.pagehelper.PageInterceptor&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">array</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--2、配置mapper扫描，可以将指定包下所有的Mapper接口，通过SqlSession创建代理实现类对象，并将这些对象交给IOC容器管理。就可以直接@Autowired了--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;basePackage&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;org.example.ssm.mapper&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br><br>    <br>    <span class="hljs-comment">&lt;!--事务--&gt;</span><br>    <span class="hljs-comment">&lt;!--1、配置基于注解的声明式事务管理--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">bean</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;transactionManager&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;dataSource&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;dataSource&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">bean</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--2、开启事务的注解驱动--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">tx:annotation-driven</span> <span class="hljs-attr">transaction-manager</span>=<span class="hljs-string">&quot;transactionManager&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">beans</span>&gt;</span><br></code></pre></td></tr></table></figure><p>jdbc.properties：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">jdbc.driver</span>=<span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">jdbc.url</span>=<span class="hljs-string">jdbc:mysql://主机:端口/数据库?serverTimezone=UTC</span><br><span class="hljs-attr">jdbc.username</span>=<span class="hljs-string">用户名</span><br><span class="hljs-attr">jdbc.password</span>=<span class="hljs-string">密码</span><br></code></pre></td></tr></table></figure><h5 id="1-6、创建log4j-xml，引入日志实现"><a href="#1-6、创建log4j-xml，引入日志实现" class="headerlink" title="1.6、创建log4j.xml，引入日志实现"></a>1.6、创建log4j.xml，引入日志实现</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">log4j</span>:configuration <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;log4j.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">log4j:configuration</span> <span class="hljs-attr">xmlns:log4j</span>=<span class="hljs-string">&quot;http://jakarta.apache.org/log4j/&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">appender</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;STDOUT&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.apache.log4j.ConsoleAppender&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Encoding&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;UTF-8&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">layout</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;org.apache.log4j.PatternLayout&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">param</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;ConversionPattern&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;%-5p %d&#123;MM-dd HH:mm:ss,SSS&#125; %m (%F:%L) \n&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">layout</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">appender</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;java.sql&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">level</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;debug&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">logger</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">logger</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;org.apache.ibatis&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">level</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;info&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">logger</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">root</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">level</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;debug&quot;</span> /&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">appender-ref</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;STDOUT&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">root</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">log4j:configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>视频地址：<a href="https://www.bilibili.com/video/BV1Ya411S7aT?p=1&vd_source=e710048bca758289bcc6b7e0e07eec72">https://www.bilibili.com/video/BV1Ya411S7aT?p=1&amp;vd_source=e710048bca758289bcc6b7e0e07eec72</a></strong></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>Spring5</tag>
      
      <tag>SpringMVC</tag>
      
      <tag>MyBatis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>谷粒商城</title>
    <link href="/2024/02/26/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/"/>
    <url>/2024/02/26/%E8%B0%B7%E7%B2%92%E5%95%86%E5%9F%8E/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="2fb9a4307a969d0357b5af65a740b5e9e7f8e595550adc92a3553c9678698acf"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">密码提示：圆周率的平方跟的自然对数的前六位</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
